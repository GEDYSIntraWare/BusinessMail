{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/activities/activities.component.ts","./src/app/components/activities/activities.component.html","./src/app/components/additional-actions/additional-actions.component.html","./src/app/components/additional-actions/additional-actions.component.ts","./src/app/components/address-info/address-info.component.ts","./src/app/components/address-info/address-info.component.html","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/config/config.component.ts","./src/app/components/configuration-actions/configuration-actions.component.ts","./src/app/components/configuration-actions/configuration-actions.component.html","./src/app/components/create-address-block/create-address-block.component.html","./src/app/components/create-address-block/create-address-block.component.ts","./src/app/components/language/language.component.ts","./src/app/components/language/language.component.html","./src/app/components/loader/loader.component.html","./src/app/components/loader/loader.component.ts","./src/app/components/mail-address/mail-address.component.html","./src/app/components/mail-address/mail-address.component.ts","./src/app/components/messages/messages.component.ts","./src/app/components/modal/base/modal-base.component.ts","./src/app/components/modal/base/search/search-base.component.ts","./src/app/components/modal/choose-office/choose-office.component.ts","./src/app/components/modal/choose-office/choose-office.component.html","./src/app/components/modal/create-contact/create-contact.component.ts","./src/app/components/modal/create-contact/create-contact.component.html","./src/app/components/modal/create-ticket/create-ticket.component.ts","./src/app/components/modal/create-ticket/create-ticket.component.html","./src/app/components/modal/document-file/document-file.component.ts","./src/app/components/modal/document-file/document-file.component.html","./src/app/components/modal/duplicate/duplicate.component.ts","./src/app/components/modal/duplicate/duplicate.component.html","./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/components/modal/search-contact/search-contact.component.ts","./src/app/components/modal/search-contact/search-contact.component.html","./src/app/components/modal/search-template/search-template.component.ts","./src/app/components/modal/search-template/search-template.component.html","./src/app/components/modal/select-contact/select-contact.component.ts","./src/app/components/modal/select-contact/select-contact.component.html","./src/app/components/modal/select-create-label/select-create-label.component.ts","./src/app/components/modal/select-create-label/select-create-label.component.html","./src/app/components/modal/select-mail-address/select-mail-address.component.ts","./src/app/components/modal/select-mail-address/select-mail-address.component.html","./src/app/components/modal/webint-input/webint-input.component.html","./src/app/components/modal/webint-input/webint-input.component.ts","./src/app/components/pager/pager.component.ts","./src/app/components/pager/pager.component.html","./src/app/components/site-actions/site-actions.component.ts","./src/app/components/site-actions/site-actions.component.html","./src/app/directives/activity-action.directive.ts","./src/app/directives/modal.directive.ts","./src/app/graph/data/oauth.ts","./src/app/graph/data/user.ts","./src/app/graph/services/auth.service.ts","./src/app/interceptors/no-cache.interceptor.ts","./src/app/loader/lc-loader.ts","./src/app/otherClasses/config-items-default.class.ts","./src/app/otherClasses/create-address-items.class.ts","./src/app/otherClasses/modal-item.ts","./src/app/pipes/add-spacer.pipe.ts","./src/app/services/activities.service.ts","./src/app/services/address.service.ts","./src/app/services/config.service.ts","./src/app/services/connection.service.ts","./src/app/services/connectors/connector-factory.service.ts","./src/app/services/connectors/connector-owa.service.ts","./src/app/services/connectors/connector-verse.service.ts","./src/app/services/connectors/connector.service.ts","./src/app/services/create-address-handler.service.ts","./src/app/services/create-address.service.ts","./src/app/services/document.service.ts","./src/app/services/globals.service.ts","./src/app/services/image.service.ts","./src/app/services/init.service.ts","./src/app/services/input-tools.service.ts","./src/app/services/language.service.ts","./src/app/services/loader.service.ts","./src/app/services/message.service.ts","./src/app/services/modal.service.ts","./src/app/services/reload.service.ts","./src/app/services/soap.service.ts","./src/app/services/waitList.service.ts","./src/app/services/webint-link.service.ts","./src/app/types/address-order.display.ts","./src/app/types/create-label-names.type.ts","./src/app/types/waitlist.type.ts","./src/environments/environment.ts","./src/main.ts","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|./terminal-highlight","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|colorette","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|fs","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|path","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|source-map-js","ignored|C:\\BusinessMail\\BM4OWA\\node_modules\\postcss\\lib|url"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './components/app/app.component';\n\nconst routes: Routes = [\n  { path: '', component: AppComponent },\n  { path: 'index.html', component: AppComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NoCacheInterceptor } from './interceptors/no-cache.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { AddressInfoComponent } from './components/address-info/address-info.component';\nimport { SiteActionsComponent } from './components/site-actions/site-actions.component';\nimport { ConfigurationActionsComponent } from './components/configuration-actions/configuration-actions.component';\nimport { PagerComponent } from './components/pager/pager.component';\nimport { AdditionalActionsComponent } from './components/additional-actions/additional-actions.component';\nimport { ActivitiesComponent } from './components/activities/activities.component';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { ConfigComponent } from './components/config/config.component';\nimport { LanguageComponent } from './components/language/language.component';\n\nimport { GlobalsService } from './services/globals.service';\nimport { LanguageService } from './services/language.service';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { ConnectionService } from './services/connection.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MailAddressComponent } from './components/mail-address/mail-address.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { LcLoader } from './loader/lc-loader';\nimport { ChooseOfficeComponent } from './components/modal/choose-office/choose-office.component';\nimport { SearchContactComponent } from './components/modal/search-contact/search-contact.component';\nimport { CreateContactComponent } from './components/modal/create-contact/create-contact.component';\nimport { ModalDirective } from './directives/modal.directive';\nimport { CreateTicketComponent } from './components/modal/create-ticket/create-ticket.component';\nimport { DocumentFileComponent } from './components/modal/document-file/document-file.component';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { AddSpacerPipe } from './pipes/add-spacer.pipe';\nimport { ActivityActionDirective } from './directives/activity-action.directive';\nimport { CreateAddressBlockComponent } from './components/create-address-block/create-address-block.component';\nimport { SelectContactComponent } from './components/modal/select-contact/select-contact.component';\nimport { SelectCreateLabelComponent } from './components/modal/select-create-label/select-create-label.component';\nimport { DuplicateComponent } from './components/modal/duplicate/duplicate.component';\nimport { SearchTemplateComponent } from './components/modal/search-template/search-template.component';\nimport { WebintInputComponent } from './components/modal/webint-input/webint-input.component';\nimport { SelectMailAddressComponent } from './components/modal/select-mail-address/select-mail-address.component';\n\nimport {\n  IPublicClientApplication,\n  PublicClientApplication,\n  BrowserCacheLocation,\n} from '@azure/msal-browser';\nimport { MsalModule, MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\nimport { OAuthSettings } from './graph/data/oauth';\n\n// <MSALFactorySnippet>\nlet msalInstance: IPublicClientApplication | undefined;\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  // TODO https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/1403\n  // TODO Wenns nicht funktioniert, asset daten löschen\n\n  msalInstance =\n    msalInstance ??\n    new PublicClientApplication({\n      auth: {\n        clientId: OAuthSettings.appId,\n        redirectUri: OAuthSettings.redirectUri,\n        postLogoutRedirectUri: OAuthSettings.redirectUri,\n      },\n      cache: {\n        cacheLocation: BrowserCacheLocation.LocalStorage,\n      },\n    });\n\n  return msalInstance;\n}\n// </MSALFactorySnippet>\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddressInfoComponent,\n    SiteActionsComponent,\n    ConfigurationActionsComponent,\n    PagerComponent,\n    AdditionalActionsComponent,\n    ActivitiesComponent,\n    MessagesComponent,\n    ConfigComponent,\n    LanguageComponent,\n    LoaderComponent,\n    MailAddressComponent,\n    ModalComponent,\n    ChooseOfficeComponent,\n    SearchContactComponent,\n    CreateContactComponent,\n    ModalDirective,\n    CreateTicketComponent,\n    DocumentFileComponent,\n    AddSpacerPipe,\n    ActivityActionDirective,\n    CreateAddressBlockComponent,\n    SelectContactComponent,\n    SelectCreateLabelComponent,\n    DuplicateComponent,\n    SearchTemplateComponent,\n    WebintInputComponent,\n    SelectMailAddressComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({ preventDuplicates: true }),\n    MatListModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatRippleModule,\n    MsalModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: { provide: TranslateLoader, useClass: LcLoader },\n    }),\n  ],\n  providers: [\n    GlobalsService,\n    LanguageService,\n    MatDialogModule,\n    ConnectionService,\n    { provide: HTTP_INTERCEPTORS, useClass: NoCacheInterceptor, multi: true },\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory,\n    },\n    MsalService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\nimport { ActivitiesService } from '../../services/activities.service';\nimport { ImageService } from '../../services/image.service';\nimport { MessageService } from '../../services/message.service';\nimport { WebintLinkService } from '../../services/webint-link.service';\n\nimport { Activity } from '../../types/activity.model';\nimport { ActivityEntry } from '../../types/activity-entry.model';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { AddressService } from 'src/app/services/address.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GlobalsService } from 'src/app/services/globals.service';\n\nconst MAX_ACTIVITIES = 10;\n\n@Component({\n  selector: 'app-activities',\n  templateUrl: './activities.component.html',\n  styleUrls: ['./activities.component.scss'],\n})\nexport class ActivitiesComponent implements OnInit, OnDestroy {\n  public activity: Activity;\n  public types: string[];\n  public selectedType: string;\n  public activityDocImage: { [klass: string]: any } | null;\n  public selectArrow: { [klass: string]: any } | null;\n  public headerText: string;\n\n  private typesSet: boolean;\n\n  constructor(\n    private imageService: ImageService,\n    private activitiesService: ActivitiesService,\n    private messageService: MessageService,\n    private webintLinkService: WebintLinkService,\n    private modalService: ModalService,\n    private addressService: AddressService,\n    public globals: GlobalsService,\n    public translate: TranslateService\n  ) {\n    this.activity = {} as Activity;\n    this.types = [];\n    this.typesSet = false;\n    this.selectedType = '0';\n    this.activityDocImage = {\n      background: 'no-repeat url(assets/images/icons_business_mail.png)',\n    };\n    this.selectArrow = {\n      background:\n        'no-repeat url(assets/images/DropDownArrowOffsetRight.png) right',\n    };\n    this.headerText = '';\n  }\n\n  ngOnInit(): void {\n    console.log('init Activities');\n    this.init();\n    this.addressService.waitForAddressChange().subscribe(() => {\n      this.activity = {} as Activity;\n      this.init();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.activitiesService.destroy();\n  }\n\n  public document(pointer: string) {\n    this.modalService.changeType({\n      newType: 'documentFile',\n      data: { currentOfficePointer: pointer },\n    });\n  }\n\n  public trackPointer(index: number, item: ActivityEntry) {\n    return item.pointer;\n  }\n\n  public createWebintLink(pointer: string) {\n    return this.webintLinkService.convertToLink(pointer);\n  }\n\n  public onOptionChange(typeValue: string) {\n    this.activitiesService.changeDefaultTypeSelection(typeValue);\n  }\n\n  private init() {\n    this.activitiesService.init().subscribe({\n      next: (resp: any) => {\n        this.translate.get('LC52160').subscribe((text: string) => {\n          this.headerText = text.replace('<max>', String(MAX_ACTIVITIES));\n        });\n        switch (resp.type) {\n          case 'activities':\n            this.activity = resp;\n            if (this.activity.displayType) {\n              this.selectedType = this.activity.displayType.toString(10);\n            }\n            console.log(this.activity);\n            this.transformForDisplay();\n            if (this.activity.errorCode && this.activity.message) {\n              this.messageService.showInfo(this.activity.message);\n            }\n            break;\n          case 'types':\n            if (!this.typesSet) {\n              this.types = resp;\n            }\n            break;\n          default:\n            if (this.activity.errorCode && this.activity.message) {\n              this.messageService.showError(this.activity.message);\n            }\n        }\n      },\n      error: (errHttp: any) => {\n        console.log('Activities failure!');\n        console.log(errHttp);\n      },\n      complete: () => {\n        // Nothing\n      },\n    });\n  }\n\n  private transformForDisplay() {\n    if (this.activity.activities !== []) {\n      this.activity.activities.forEach((entry) => {\n        entry.viewIconUrl = this.imageService.getViewIconUrl(\n          parseInt(entry.viewIcon, 10)\n        );\n        entry.dateString = formatDate(entry.dateInMS, 'dd.MM.YYYY', 'en_US');\n      });\n    }\n  }\n}\n","<div class=\"activityHeader\">\r\n  <div class=\"activityHeaderText\" title=\"{{ headerText }}\">\r\n    {{ headerText }}\r\n  </div>\r\n  <div id=\"selectContainer\">\r\n    <select\r\n      #selection\r\n      class=\"customSelect activityHeaderSelect\"\r\n      (change)=\"onOptionChange(selection.value)\"\r\n      [ngStyle]=\"selectArrow\"\r\n    >\r\n      <option\r\n        *ngFor=\"let entry of types\"\r\n        [value]=\"entry[1]\"\r\n        [selected]=\"entry[1] === selectedType ? true : false\"\r\n      >\r\n        {{ entry[0] }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</div>\r\n<!-- TODO Error abfangen -->\r\n<!--<div *ngIf=\"activity.errorCode; else hasActivity\"><div>Error</div></div>\r\n<ng-template #hasActivity>-->\r\n<ul>\r\n  <li\r\n    class=\"activityList\"\r\n    *ngFor=\"let entry of activity.activities; trackBy: trackPointer\"\r\n  >\r\n    <div appActivityAction id=\"activityEntryWrapper\">\r\n      <a href=\"{{ createWebintLink(entry.pointer) }}\" target=\"_blank\">\r\n        <img\r\n          class=\"activityIcon activityEntry\"\r\n          [src]=\"entry.viewIconUrl\"\r\n          onerror=\"this.src='assets/images/vwicn001.png';\"\r\n        />\r\n        <div class=\"activityDate activityEntry\">{{ entry.dateString }}</div>\r\n        <div class=\"activitySubject activityEntry\" title=\"{{ entry.subject }}\">\r\n          {{ entry.subject }}\r\n        </div>\r\n      </a>\r\n      <div\r\n        class=\"hide activityButtonContainer clearfix\"\r\n        (click)=\"document(entry.pointer)\"\r\n      >\r\n        <div\r\n          class=\"activityDocIcon\"\r\n          title=\"{{ 'LC73234' | translate }}\"\r\n          [ngStyle]=\"activityDocImage\"\r\n          *ngIf=\"globals.actionsAllowed\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</ul>\r\n\r\n<!-- Empty div to offset footer in Verse -->\r\n<div class=\"verseHeightFix\" *ngIf=\"globals.curConnectorType === 'Verse'\"></div>\r\n","<!-- Additional Actions -->\n<div class=\"clearfix\">\n  <div [style.float]=\"'left'\">{{ \"LC37113\" | translate }}</div>\n  <div id=\"icons\" *ngIf=\"globals.actionsAllowed\">\n    <div\n      class=\"bmDocumentationAnother\"\n      [ngStyle]=\"bmIcons\"\n      title=\"{{ 'LC73210' | translate }}\"\n      (click)=\"openModal('searchContact')\"\n    ></div>\n    <div\n      class=\"bmTicket\"\n      [ngStyle]=\"bmIcons\"\n      title=\"{{ 'LC53160' | translate }}\"\n      (click)=\"openModal('createTicket')\"\n    ></div>\n  </div>\n</div>\n<div></div>\n<hr />\n","import { Component, OnInit } from '@angular/core';\nimport { LanguageService } from '../../services/language.service';\nimport { GlobalsService } from '../../services/globals.service';\nimport { ModalService } from '../../services/modal.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalType } from 'src/app/types/modal.type';\nimport { AddressService } from 'src/app/services/address.service';\n\n@Component({\n  selector: 'app-additional-actions',\n  templateUrl: './additional-actions.component.html',\n  styleUrls: ['./additional-actions.component.scss'],\n})\nexport class AdditionalActionsComponent implements OnInit {\n  public bmIcons: { [klass: string]: any } | null;\n\n  public translations: Record<number, string>;\n\n  constructor(\n    public language: LanguageService,\n    public globals: GlobalsService,\n    public modalService: ModalService,\n    public translate: TranslateService,\n    public addressService: AddressService\n  ) {\n    this.translations = {};\n    this.bmIcons = {\n      background:\n        'transparent no-repeat url(assets/images/icons_business_mail.png)',\n    };\n\n    translate.setDefaultLang('all');\n    translate.use('all');\n  }\n\n  ngOnInit(): void {}\n\n  public openModal(newType: ModalType) {\n    this.modalService.changeType({\n      newType,\n    });\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Address } from '../../types/address.model';\nimport { Subscription } from 'rxjs';\nimport { AddressService } from '../../services/address.service';\nimport { ImageService } from '../../services/image.service';\nimport { compareAddressOrder } from '../../types/address-order.display';\nimport { WebintLinkService } from 'src/app/services/webint-link.service';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\n\nconst SUPPORTEDIMGTYPES = ['jpg', 'png'];\n\n@Component({\n  selector: 'app-address-info',\n  templateUrl: './address-info.component.html',\n  styleUrls: ['./address-info.component.scss'],\n})\nexport class AddressInfoComponent implements OnInit, OnDestroy {\n  public addresses: Address[];\n  public addressFetched;\n  public currentAvatarURL;\n  public filteredAdditionalValues: Record<string, any>;\n  public commonInformation: Record<string, any>;\n  public commonPointerData: Record<string, any>;\n  public compareFunc = compareAddressOrder;\n  public docImage: { [klass: string]: any } | null;\n\n  private indexSubscription: Subscription | null;\n  private indexToShow = 0;\n\n  constructor(\n    public globals: GlobalsService,\n    private addressService: AddressService,\n    private imageService: ImageService,\n    private webLinkService: WebintLinkService,\n    private modalService: ModalService\n  ) {\n    this.addressFetched = false;\n    this.addresses = [];\n    this.indexToShow = this.addressService.addressIndex;\n    this.indexSubscription = null;\n    this.currentAvatarURL = '';\n    this.filteredAdditionalValues = {};\n    this.commonPointerData = {};\n    this.docImage = {\n      background:\n        'transparent no-repeat url(assets/images/icons_business_mail.png)',\n    };\n  }\n\n  ngOnInit(): void {\n    console.log('-----INIT-----');\n    this.processAddresses();\n    this.listenForIndexChanges();\n    this.listenForAddressChanges();\n  }\n\n  ngOnDestroy(): void {\n    if (this.indexSubscription != null) {\n      this.indexSubscription.unsubscribe();\n    }\n  }\n\n  get addressIndex(): number {\n    return this.indexToShow;\n  }\n\n  // Filters empty values, hide list entries and saves current picture path\n  public filterAdditionalValues(index: number): Record<string, any> {\n    const toHide = this.addressService.toHideList;\n    const additionalData = this.addresses[index].additional;\n    const result: Record<string, any> = {};\n    for (const key in additionalData) {\n      if (additionalData[key]) {\n        // Add Picture\n        if (key.includes('image')) {\n          this.currentAvatarURL = this.imageService.getImgUrl(\n            additionalData[key]\n          );\n        }\n        // Skype Label\n        if (\n          key.includes('skype') &&\n          !additionalData[key].startsWith('Skype:')\n        ) {\n          additionalData[key] = 'Skype: ' + additionalData[key];\n        }\n        if (additionalData[key] !== '' && !toHide.includes(key)) {\n          result[key] = additionalData[key];\n        }\n      }\n    }\n    return result;\n  }\n\n  public filterCommonInfo(index: number): Record<string, any> {\n    const toHide = this.addressService.toHideList;\n    const commonData = this.addresses[index];\n    const result: Record<string, any> = {};\n    let key: keyof Address;\n    for (key in commonData) {\n      if ({}.hasOwnProperty.call(commonData, key)) {\n        if (\n          key !== 'additional' &&\n          commonData[key] !== '' &&\n          !toHide.includes(key as string)\n        ) {\n          result[key as string] = commonData[key];\n        }\n      }\n    }\n    this.setFilteredPointerLinks(index);\n    console.log('COMMON');\n    console.log(result);\n    console.log(commonData);\n    return result;\n  }\n\n  public document(pointer: string) {\n    this.modalService.changeType({\n      newType: 'chooseOfficeDB',\n      data: {\n        currentContactPointer: pointer,\n      },\n    });\n  }\n\n  public phonecall() {\n    this.modalService.changeType({\n      newType: 'searchTemplate',\n    });\n  }\n\n  public processAddresses(): void {\n    console.log('-----ADDRESS INFO CALL GETADDRESSES-----');\n    console.log(this.addressFetched);\n    this.indexSubscription = this.addressService\n      .processAddresses()\n      .subscribe((addresses) => {\n        console.log('FETCH 123');\n        this.addressFetched = true;\n        this.addresses = addresses;\n      });\n  }\n\n  private setFilteredPointerLinks(index: number) {\n    const companyPointer = this.addresses[index].companyPointer;\n    const pointer = this.addresses[index].pointer;\n    this.commonPointerData = {\n      link: {},\n      pointer: {},\n      lcLabel: {},\n      lcDoc: {},\n    };\n    if (companyPointer) {\n      this.commonPointerData.link.companyName =\n        this.webLinkService.convertToLink(companyPointer);\n      this.commonPointerData.pointer.companyName = companyPointer;\n      this.commonPointerData.lcLabel.companyName = 'LC73209';\n      this.commonPointerData.lcDoc.companyName = 'LC73207';\n    }\n    if (pointer) {\n      this.commonPointerData.link.name =\n        this.webLinkService.convertToLink(pointer);\n      this.commonPointerData.pointer.name = pointer;\n      this.commonPointerData.lcLabel.name = 'LC73208';\n      this.commonPointerData.lcDoc.name = 'LC73206';\n    }\n  }\n\n  private listenForIndexChanges() {\n    this.addressService.addToIndexListenerList().subscribe((newIndex) => {\n      if (this.addressService.hasAddress) {\n        this.indexToShow = newIndex;\n        this.commonInformation = this.filterCommonInfo(newIndex);\n        this.filteredAdditionalValues = this.filterAdditionalValues(newIndex);\n      }\n    });\n  }\n\n  private listenForAddressChanges() {\n    this.addressService.waitForAddressChange().subscribe((resp) => {\n      if (resp) {\n        this.addresses = [];\n        this.addressFetched = false;\n        this.processAddresses();\n      }\n    });\n  }\n}\n","<div id=\"addressContainer\" *ngIf=\"addresses.length > 0\">\n  <hr />\n  <div *ngIf=\"addressFetched\" class=\"addressFlex\">\n    <div class=\"addressLeft\">\n      <img [src]=\"currentAvatarURL\" class=\"ownProfilePicture\" />\n      <app-pager class=\"center\"></app-pager>\n    </div>\n    <div class=\"addressRight\">\n      <div\n        *ngFor=\"let item of commonInformation | keyvalue: compareFunc\"\n        class=\"commonInfo\"\n      >\n        <div class=\"flexWrap\">\n          <div\n            class=\"addressLabel\"\n            title=\"{{ commonPointerData.lcLabel[item.key] | translate }}\"\n          >\n            <a href=\"{{ commonPointerData.link[item.key] }}\" target=\"_blank\">{{\n              item.value\n            }}</a>\n          </div>\n          <hr class=\"flexHR\" *ngIf=\"globals.actionsAllowed\" />\n          <div\n            class=\"bmDocumentation ml10\"\n            [ngStyle]=\"docImage\"\n            title=\"{{ commonPointerData.lcDoc[item.key] | translate }}\"\n            *ngIf=\"globals.actionsAllowed\"\n            (click)=\"document(commonPointerData.pointer[item.key])\"\n          ></div>\n        </div>\n      </div>\n      <div *ngIf=\"this.addresses.length > 0\" class=\"additionalInfo\">\n        <div\n          *ngFor=\"\n            let item of filteredAdditionalValues\n              | keyvalue: compareFunc\n              | addSpacer\n          \"\n        >\n          <div *ngIf=\"item.value === '-BLANK-'; else urlLink\">\n            <!--<br />-->\n          </div>\n          <ng-template #urlLink>\n            <div\n              *ngIf=\"\n                item.key.toLowerCase().includes('url') ||\n                  item.key.toLowerCase().includes('page');\n                else addressDataEntry\n              \"\n            >\n              <a\n                href=\"//{{ item.value }}\"\n                target=\"_blank\"\n                *ngIf=\"!item.value.startsWith('http'); else removeHttp\"\n                >{{ item.value }}</a\n              >\n              <ng-template #removeHttp>\n                <a\n                  href=\"//{{\n                    item.value.substring(item.value.indexOf('/') + 2)\n                  }}\"\n                  target=\"_blank\"\n                  >{{ item.value.substring(item.value.indexOf(\"/\") + 2) }}</a\n                >\n              </ng-template>\n            </div>\n          </ng-template>\n          <ng-template #addressDataEntry>\n            <div *ngIf=\"item.key.includes('phone'); else noLink\">\n              <span\n                class=\"linkStyle\"\n                title=\"{{ 'LC04452' | translate }}\"\n                (click)=\"phonecall()\"\n                >{{ item.value }}</span\n              >\n            </div>\n            <ng-template #noLink>{{ item.value }} </ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <!-- TODO Mail-Addresse anzeigen (Mail-Address Component) -->\n  </div>\n  <div *ngIf=\"!addressFetched\">\n    <div>\n      <span>{{ \"LC53491\" | translate }} </span>\n    </div>\n  </div>\n</div>\n<hr />\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ModalItem } from 'src/app/otherClasses/modal-item';\nimport { ConnectorFactory } from 'src/app/services/connectors/connector-factory.service';\nimport { ConnectorService } from 'src/app/services/connectors/connector.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { InitService } from 'src/app/services/init.service';\nimport { ChangeableCSSNames } from 'src/app/types/changeable-css-names.type';\n\nimport { ModalService } from '../../services/modal.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public title = 'BusinessMail';\n  public modalItems: Record<string, ModalItem>;\n\n  public init: boolean;\n\n  public newCSS: Record<ChangeableCSSNames, { [klass: string]: any }> = {\n    main: {},\n    overflowContainer: {},\n  };\n\n  private connector: ConnectorService;\n\n  constructor(\n    private modalService: ModalService,\n    private initService: InitService,\n    private connectorFactory: ConnectorFactory,\n    private globals: GlobalsService\n  ) {\n    this.isInit = false;\n  }\n\n  ngOnInit() {\n    this.connectorFactory.checkForApp().subscribe((connectorClass) => {\n      this.connector = connectorClass;\n      this.initConnectorData();\n    });\n    this.modalService.waitForModalDesign().subscribe((resp) => {\n      this.initModalItems();\n    });\n    this.initService.waitForInit().subscribe((resp) => {\n      this.isInit = resp;\n    });\n    window.addEventListener('keydown', this.ownReload);\n  }\n\n  public initModalItems() {\n    this.modalItems = this.modalService.getModalItems();\n    console.log(this.modalItems);\n    this.isInit = true;\n  }\n\n  private initConnectorData() {\n    this.connector.waitForCSS().subscribe((resp) => {\n      this.newCSS = resp;\n    });\n    this.connector.getData();\n  }\n\n  private ownReload(e: any) {\n    if ((e.which || e.keyCode) === 116) {\n      if (this.globals.curConnectorType === 'Owa') {\n        window.location.reload();\n      } else {\n        sessionStorage.setItem(\n          'verseAppData',\n          JSON.stringify(this.globals.curConnector.data)\n        );\n        const curURL = window.location.href;\n        if (!window.location.href.includes('index.html')) {\n          let urlAddition = 'index.html';\n          if (!window.location.href.endsWith('/')) {\n            urlAddition = '/' + urlAddition;\n          }\n          window.location.href += urlAddition;\n        }\n      }\n    }\n  }\n\n  get isInit() {\n    return this.init;\n  }\n\n  set isInit(newVal: boolean) {\n    this.init = newVal;\n  }\n\n  get mItems() {\n    return this.modalItems;\n  }\n}\n","<div id=\"overflowContainer\" [ngStyle]=\"newCSS.overflowContainer\">\n  <div id=\"main\" [ngStyle]=\"newCSS.main\">\n    <app-loader></app-loader>\n    <app-site-actions></app-site-actions>\n    <div [style.visibility]=\"isInit ? 'visible' : 'hidden'\">\n      <app-config></app-config>\n      <!--<app-pager></app-pager>-->\n      <app-mail-address></app-mail-address>\n      <app-create-address-block></app-create-address-block>\n      <app-address-info></app-address-info>\n      <app-additional-actions></app-additional-actions>\n      <app-activities></app-activities>\n      <app-messages></app-messages>\n    </div>\n    <app-modal></app-modal>\n    <app-webint-input></app-webint-input>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.css'],\n})\nexport class ConfigComponent implements OnInit {\n  constructor(private configService: ConfigService) {}\n\n  ngOnInit(): void {\n    console.log('Config Init');\n    this.configService.subject.subscribe(console.log);\n  }\n\n  setWebInt(): void {\n    this.configService.processWebInt();\n  }\n}\n","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { CreateAddressService } from 'src/app/services/create-address.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport {\n  ConfigIcons,\n  ConfigIconType,\n  ConfigIconValues,\n} from 'src/app/types/config-icons.model';\nimport {\n  iconDefaultConfig,\n  ConfigData,\n} from '../../otherClasses/config-items-default.class';\n\n@Component({\n  selector: 'app-configuration-actions',\n  templateUrl: './configuration-actions.component.html',\n  styleUrls: ['./configuration-actions.component.scss'],\n})\nexport class ConfigurationActionsComponent implements OnInit {\n  public configIcon: { [klass: string]: any } | null;\n  public iconConfigLocal = iconDefaultConfig;\n  public configData: Record<ConfigIconType, ConfigData>;\n\n  private path = 'config';\n  private configRestObj: Record<string, any>;\n\n  constructor(\n    private connectionService: ConnectionService,\n    private createService: CreateAddressService,\n    public globals: GlobalsService\n  ) {\n    this.configIcon = {\n      background:\n        'transparent url(assets/images/icons_business_mail.png) no-repeat',\n    };\n    this.configRestObj = {};\n    this.createService.config = this.iconConfigLocal;\n  }\n\n  ngOnInit(): void {\n    this.initConfig();\n  }\n\n  public toggleClass(configTypeIndex: number, callOpenToggle: boolean = true) {\n    console.log(this.configData);\n    if (configTypeIndex < this.iconConfigLocal.length) {\n      let curObj = this.iconConfigLocal[configTypeIndex].model;\n      const objKeysArr = Object.keys(curObj.classAssignment);\n      curObj = this.changeIcon(curObj, objKeysArr);\n      if (\n        this.configData &&\n        this.configData[curObj.name] &&\n        this.configData[curObj.name].inRest\n      ) {\n        this.configRestObj[curObj.name] = curObj.value;\n        let params: HttpParams = new HttpParams();\n        for (const key of Object.keys(this.configRestObj)) {\n          params = params.set(key, this.configRestObj[key]);\n        }\n        if (configTypeIndex === 1) {\n          // Open Mail\n          this.globals.openMail = Boolean(curObj.value);\n        } else if (configTypeIndex === 0) {\n          // Delete Attachments\n          this.globals.deleteAttachments = Boolean(curObj.value);\n        }\n        this.connectionService\n          .postReq(this.path, params, false, undefined, true)\n          .subscribe({\n            next: (resp: any) => {\n              // Do nothing\n            },\n            error: (errHttp: any) => {\n              // TODO Errorhandling\n              console.log(errHttp);\n            },\n            complete: () => {\n              // Do nothing\n            },\n          });\n      } else if (this.configData && this.configData.createAddress) {\n        if (callOpenToggle) {\n          this.createService.toggleOpen();\n        }\n      }\n    }\n  }\n\n  private changeIcon(curObj: ConfigIcons, objKeysArr: string[]) {\n    curObj.value = objKeysArr[\n      (objKeysArr.indexOf(curObj.value) + 1) % objKeysArr.length\n    ] as ConfigIconValues;\n    return curObj;\n  }\n\n  private initConfig() {\n    console.log(this.connectionService);\n    this.connectionService.getReqNoCache(this.path, null).subscribe({\n      next: (resp: any) => {\n        console.log(resp);\n        this.initConfigClasses(resp);\n      },\n      error: (errHttp: any) => {\n        this.connectionService.processPath().subscribe(() => {\n          //this.initConfig();\n        });\n      },\n      complete: () => {\n        // Do nothing\n      },\n    });\n  }\n\n  private initConfigClasses(resp: any) {\n    this.configRestObj = resp;\n    const tmpConfigData: any = {};\n\n    let forIndex = 0;\n\n    for (const ele of this.iconConfigLocal) {\n      const eleName = ele.model.name;\n      let currentConfig;\n\n      if (!currentConfig) {\n        currentConfig = {\n          inRest: false,\n          index: 0,\n        };\n      } else {\n        currentConfig = this.configData[eleName];\n      }\n\n      if (resp[eleName] || resp[eleName] === '') {\n        ele.model.value = resp[eleName];\n        currentConfig.inRest = true;\n        if (eleName === 'deleteAttachments' || eleName === 'openMail') {\n          this.globals[eleName] = Boolean(resp[eleName]);\n        }\n      }\n\n      console.log('RESP:' + resp);\n      console.log(resp);\n\n      tmpConfigData[eleName] = currentConfig;\n\n      currentConfig.index = forIndex;\n      forIndex++;\n    }\n\n    this.configData = tmpConfigData;\n  }\n}\n","<div class=\"clearfix\">\n  <div\n    id=\"openCreate\"\n    class=\"{{\n      iconConfigLocal[2].model.classAssignment[iconConfigLocal[2].model.value]\n    }}\"\n    title=\"{{\n      iconConfigLocal[2].model.titleLC[iconConfigLocal[2].model.value]\n        | translate\n    }}\"\n    [ngStyle]=\"configIcon\"\n    *ngIf=\"globals.actionsAllowed\"\n    (click)=\"toggleClass(2)\"\n  ></div>\n  <div\n    id=\"openMail\"\n    class=\"{{\n      iconConfigLocal[1].model.classAssignment[iconConfigLocal[1].model.value]\n    }}\"\n    title=\"{{\n      iconConfigLocal[1].model.titleLC[iconConfigLocal[1].model.value]\n        | translate\n    }}\"\n    [ngStyle]=\"configIcon\"\n    (click)=\"toggleClass(1)\"\n  ></div>\n  <div\n    id=\"deleteAttachments\"\n    class=\"{{\n      iconConfigLocal[0].model.classAssignment[iconConfigLocal[0].model.value]\n    }}\"\n    title=\"{{\n      iconConfigLocal[0].model.titleLC[iconConfigLocal[0].model.value]\n        | translate\n    }}\"\n    [ngStyle]=\"configIcon\"\n    (click)=\"toggleClass(0)\"\n  ></div>\n</div>\n","<ng-template\n  [ngIf]=\"isOpen\"\n  *ngIf=\"globals.actionsAllowed || globals.createAllowed\"\n>\n  <hr />\n  <div class=\"clearfix createBlock\" *ngFor=\"let item of items\">\n    <div [style.float]=\"'left'\">\n      {{ item.lc | translate }}\n    </div>\n    <div\n      id=\"{{ item.name }}\"\n      class=\"createPlus\"\n      [ngStyle]=\"createPlusImage\"\n      (click)=\"showModal(item.name)\"\n    ></div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { CreateAddressService } from 'src/app/services/create-address.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { CreateAddressOverview } from 'src/app/types/create-address-overview';\nimport { ModalType } from 'src/app/types/modal.type';\n\n@Component({\n  selector: 'app-create-address-block',\n  templateUrl: './create-address-block.component.html',\n  styleUrls: ['./create-address-block.component.scss'],\n})\nexport class CreateAddressBlockComponent implements OnInit {\n  public isOpen: boolean;\n  public items: CreateAddressOverview[];\n  public createPlusImage: { [klass: string]: any };\n\n  constructor(\n    private createService: CreateAddressService,\n    private modalService: ModalService,\n    public globals: GlobalsService\n  ) {\n    this.createPlusImage = {\n      background:\n        'transparent no-repeat url(' + globals.webInt + 'icons_general.png)',\n    };\n  }\n\n  ngOnInit(): void {\n    this.connectToService();\n  }\n\n  public update(newVal: boolean) {\n    this.isOpen = newVal;\n  }\n\n  public showModal(val: ModalType) {\n    this.modalService.changeType({\n      newType: val,\n    });\n  }\n\n  private connectToService() {\n    this.createService.connect().subscribe((resp) => {\n      this.update(resp);\n      this.items = this.createService.items;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>language works!</p>\n","<div *ngIf=\"loaderActive\" class=\"loadingContainer\">\n  <div *ngIf=\"!isModal\" class=\"blank-background\"></div>\n  <div class=\"shadow-messagebox\">\n    <div id=\"loadingFiller\"></div>\n    <div class=\"loaderContainerLeft\">\n      <div class=\"loader-left\"></div>\n      <div class=\"loader-bottom\"></div>\n    </div>\n    <div class=\"loaderContainerRight\">\n      <div class=\"loader-right\"></div>\n      <div class=\"loader-top\"></div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../../services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit, OnDestroy {\n  public loaderActive: boolean;\n  public isModal: boolean;\n  private loaderSubscription: Subscription;\n\n  constructor(public loader: LoaderService) {\n    this.loaderActive = false;\n    this.isModal = false;\n  }\n\n  ngOnInit(): void {\n    this.loaderSubscription = this.loader\n      .connectToService()\n      .subscribe((resp) => {\n        this.changeState(resp.activate, resp.modal);\n      });\n  }\n\n  ngOnDestroy(): void {\n    console.log('DESTROYED');\n  }\n\n  private changeState(activeState: boolean, isModal = this.isModal) {\n    console.log(activeState + ' ' + isModal);\n    // ExpressionChangedAfterItHasBeenCheckedError Fix\n    setTimeout(() => {\n      this.loaderActive = activeState;\n      this.isModal = isModal;\n    }, 1);\n  }\n}\n","<hr />\n<div id=\"mailAddrWrapper\">\n  <p>{{ globals.curMailAddr }}</p>\n  <p *ngIf=\"globals.curMailAddrCount > 0\" class=\"ghostButton\">\n    [<a (click)=\"openModal()\">+{{ globals.curMailAddrCount }}</a\n    >]\n  </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-mail-address',\n  templateUrl: './mail-address.component.html',\n  styleUrls: ['./mail-address.component.scss'],\n})\nexport class MailAddressComponent implements OnInit {\n  constructor(\n    public globals: GlobalsService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit(): void {}\n\n  public openModal() {\n    this.modalService.changeType({\n      newType: 'selectMailAddress',\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  private toastrOptions = {};\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n}\n","import {\n  OnInit,\n  Directive,\n  AfterViewInit,\n  Output,\n  Input,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { ModalInterface } from 'src/app/types/modal-interface';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalComponent } from '../modal.component';\nimport { ModalType } from 'src/app/types/modal.type';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class ModalBaseComponent\n  implements OnInit, AfterViewInit, ModalInterface\n{\n  @Input() data: any;\n  @Input() modalMain: ModalComponent;\n\n  @Output() messageEvent = new EventEmitter<TemplateRef<any>>();\n\n  // TODO: Draggable https://material.angular.io/cdk/drag-drop/api\n\n  public modalHeader: TemplateRef<any>;\n  public modalFooter: TemplateRef<any>;\n\n  protected modalTemp: TemplateRef<any>;\n  protected modalTitle: string;\n\n  private nextModal: ModalType | null;\n  private previousModal: ModalType | null;\n\n  constructor(public translate: TranslateService) {\n    this.nextModal = null;\n    this.previousModal = null;\n\n    translate.setDefaultLang('all');\n    translate.use('all');\n  }\n\n  ngOnInit(): void {\n    this.next = this.data.nextType;\n  }\n\n  ngAfterViewInit() {\n    this.messageEvent.emit(this.modalTemp);\n    console.log(this.data);\n    this.modalHeader = this.data.modalHeader;\n    this.modalFooter = this.data.modalFooter;\n  }\n\n  getTemplate(): TemplateRef<any> {\n    return this.modalTemp;\n  }\n\n  extractDBFromPointer(pointer: string) {\n    return pointer.substring(pointer.lastIndexOf('|') + 1);\n  }\n\n  confirmAction() {\n    // Empty, to be implemented by extending class\n  }\n\n  cancelAction() {\n    // Placeholder, to be implemented by extending class\n    this.data.closeAllModal();\n  }\n\n  closeAll() {\n    this.data.closeAllModal();\n  }\n\n  get next(): ModalType | null {\n    return this.nextModal;\n  }\n\n  set next(modal: ModalType | null) {\n    this.nextModal = modal;\n  }\n\n  get previous(): ModalType | null {\n    return this.previousModal;\n  }\n\n  set previous(modal: ModalType | null) {\n    this.previousModal = modal;\n  }\n\n  set title(text: string) {\n    this.modalTitle = text;\n  }\n\n  protected openAnotherModal(\n    modalToOpen: ModalType | null,\n    passToNextComponent?: Record<string, any>\n  ) {\n    if (modalToOpen != null) {\n      return this.modalMain.loadComponent(modalToOpen, passToNextComponent);\n    }\n    return null;\n  }\n}\n","import {\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  TemplateRef,\n  Directive,\n  ViewChild,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DatabaseSelection } from 'src/app/types/database-selection.model';\nimport { ConnectionService } from '../../../../services/connection.service';\nimport { GlobalsService } from '../../../../services/globals.service';\nimport { MessageService } from '../../../../services/message.service';\n\nimport { ModalBaseComponent } from '../modal-base.component';\nimport { InputToolsService } from 'src/app/services/input-tools.service';\nimport { AddressService } from 'src/app/services/address.service';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class SearchBaseComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @Input() data: any;\n\n  @Output() messageEvent = new EventEmitter<TemplateRef<any>>();\n\n  public selectedDB: string;\n  public searchValue: string;\n  public databases: DatabaseSelection[];\n  public viewIconBaseURL: string;\n  public displayedColumns: string[];\n  public selection = new SelectionModel<any>(false);\n  public searchClearImage: { [klass: string]: any } | null;\n  public ngTmpName: string;\n\n  centered = false;\n  disabled = false;\n  unbounded = false;\n\n  protected prefix: string;\n  protected path: string;\n\n  constructor(\n    public translate: TranslateService,\n    protected connection: ConnectionService,\n    protected globals: GlobalsService,\n    protected messageService: MessageService,\n    protected inputService: InputToolsService,\n    protected addressService: AddressService\n  ) {\n    super(translate);\n    this.databases = [];\n    this.searchValue = '';\n    this.viewIconBaseURL = globals.webInt;\n    this.searchClearImage = {\n      background: 'no-repeat url(assets/images/widget_settings.png)',\n    };\n    this.displayedColumns = ['icon', 'display'];\n    this.prefix = '';\n    this.path = '';\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.fetchDBs();\n  }\n\n  getTemplate(): TemplateRef<any> {\n    return this.modalTemp;\n  }\n\n  get rippleColor() {\n    return this.globals.rippleColor;\n  }\n\n  public fetchSearch(database: string | null = this.globals.currentContactsDB) {\n    let searchKey = this.searchValue;\n    if (searchKey === '') {\n      searchKey = '*';\n    }\n    this.selection.clear();\n\n    const paramObj: Record<string, any> = {\n      searchKey,\n      database,\n    };\n\n    if (this.data.type) {\n      paramObj.type = this.data.type;\n    }\n\n    if (this.data.parentPointer) {\n      paramObj.parentPointer = this.data.parentPointer;\n    }\n\n    console.log(paramObj);\n\n    this.connection\n      .getReqNoCache(this.path, this.connection.objectToHttpParams(paramObj))\n      .subscribe({\n        next: (resp: any) => {\n          this.handleResult(resp);\n        },\n        error: (errHttp: any) => {\n          // TODO Errorhandling\n          console.log(errHttp);\n        },\n        complete: () => {\n          // Do nothing\n        },\n      });\n  }\n\n  public toggleSelection(row: DatabaseSelection) {\n    this.selection.toggle(row);\n  }\n\n  public search() {\n    let input: string | null = this.inputService.sanitizeInput(\n      this.searchValue,\n      4\n    );\n    if (input === null) {\n      this.translate.get('LC53513').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n      return;\n    } else {\n      if (input === '') {\n        input = '*';\n      } else {\n        this.searchValue = input;\n      }\n      this.fetchSearch(this.selectedDB);\n    }\n  }\n\n  public acceptEntryDblClick(row: DatabaseSelection) {\n    this.selection.clear();\n    this.selection.select(row);\n    this.confirmAction();\n  }\n\n  abstract handleResult(resp: any): void;\n  abstract confirmAction(): void;\n  abstract generateSelectionArr(dbs: Record<string, any>): void;\n  abstract fetchDBs(): void;\n  /*this.connection.getReqModal('dbConnections', null).subscribe((resp) => {\n      this.filterForContacts(resp);\n    });*/\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  TemplateRef,\n  AfterViewInit,\n} from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { ConnectionService } from '../../../services/connection.service';\nimport { AddressService } from '../../../services/address.service';\nimport { MessageService } from '../../../services/message.service';\nimport { GlobalsService } from '../../../services/globals.service';\nimport { ParamsData } from 'src/app/types/params-data.type';\nimport { WebintLinkService } from 'src/app/services/webint-link.service';\n\n@Component({\n  selector: 'app-choose-office',\n  templateUrl: './choose-office.component.html',\n  styleUrls: ['./choose-office.component.scss'],\n})\nexport class ChooseOfficeComponent\n  extends ModalBaseComponent\n  implements OnInit, AfterViewInit\n{\n  @ViewChild('chOffice', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('dbs') selection: MatSelectionList;\n\n  public officeDBs: Record<string, string>[];\n\n  constructor(\n    public translate: TranslateService,\n    private connection: ConnectionService,\n    private addressService: AddressService,\n    private messageService: MessageService,\n    private webintLink: WebintLinkService,\n    private globals: GlobalsService\n  ) {\n    super(translate);\n    this.officeDBs = [];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.fetchContactsDBs();\n    this.globals.curConnector.checkMailType();\n  }\n\n  public confirmAction(selection?: any, preselectDB?: any) {\n    try {\n      let chosenDB = null;\n      if (preselectDB != null) {\n        chosenDB = preselectDB;\n      } else {\n        console.log(this.selection.selectedOptions.selected[0]);\n        chosenDB = this.selection.selectedOptions.selected[0].value;\n      }\n      this.globals.currentContactsDB = chosenDB;\n      if (this.data.passedData.ignoreNext) {\n        if (this.data.passedData.paramsData) {\n          const paramsData = this.data.passedData.paramsData as ParamsData;\n          if (paramsData.paramsToAdd && paramsData.paramsToAdd[0] === 'crmDB') {\n            paramsData.params = paramsData.params.set('crmDB', chosenDB);\n          }\n          this.webintLink.openWebIntWithParams(paramsData.params);\n        }\n      } else {\n        this.data.passedData.officeDB = chosenDB;\n        this.openAnotherModal(this.next, this.data.passedData);\n      }\n    } catch (e) {\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n        console.log(e);\n      });\n    }\n  }\n\n  private fetchContactsDBs() {\n    this.connection.getReqModal('dbConnections', null).subscribe((resp) => {\n      this.showOfficeList(resp);\n    });\n  }\n\n  private async showOfficeList(resp: any) {\n    try {\n      let pointerToUse = '';\n      if (this.data.passedData.currentContactPointer) {\n        pointerToUse = this.data.passedData.currentContactPointer;\n      } else {\n        pointerToUse = this.addressService.currentPointer;\n      }\n      this.clearOfficeDBs();\n      this.extractOfficeDBsOfContact(pointerToUse, resp);\n      console.log(this.officeDBs);\n      if (this.officeDBs.length === 1) {\n        this.confirmAction(this.selection, this.officeDBs[0].db);\n      }\n    } catch (e) {\n      this.translate.get('LC39396').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n\n  private extractOfficeDBsOfContact(pointer: string, dbData: any) {\n    if (this.data.passedData.currentContactPointer) {\n      pointer = this.data.passedData.currentContactPointer;\n    }\n\n    const db = this.extractDBFromPointer(pointer);\n\n    const officeDBsArr = dbData[db].officeDBs;\n    console.log('!!!---!!!');\n    console.log(pointer);\n    console.log(officeDBsArr);\n    for (const curDB of officeDBsArr) {\n      this.officeDBs.push({\n        db: curDB,\n        alias: dbData.GeOfficeAliases[curDB],\n      });\n    }\n\n    if (this.officeDBs.length < 1) {\n      this.translate.get('LC39396').subscribe((text) => {\n        this.messageService.showError(text);\n        this.cancelAction();\n        return;\n      });\n    }\n  }\n\n  private clearOfficeDBs() {\n    this.officeDBs.length = 0;\n  }\n}\n","<ng-template #chOffice>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53516' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <mat-selection-list #dbs [multiple]=\"false\">\n      <p *ngIf=\"officeDBs.length < 1\">{{ \"LC53515\" | translate }}</p>\n      <mat-list-option\n        *ngFor=\"let curDB of officeDBs\"\n        checkboxPosition=\"after\"\n        value=\"{{ curDB.db }}\"\n        (dblclick)=\"confirmAction()\"\n        [selected]=\"officeDBs.length === 1 ? curDB.db : null\"\n      >\n        {{ curDB.alias }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this, selection),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  TemplateRef,\n  ElementRef,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport {\n  createLabels,\n  startLabels,\n} from '../../../types/create-label-names.type';\nimport { MessageService } from 'src/app/services/message.service';\nimport { MatSelectionList } from '@angular/material/list';\nimport { SoapService } from 'src/app/services/soap.service';\nimport { CreateAddressHandlerService } from 'src/app/services/create-address-handler.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\n\nconst MAX_ROWS = 23;\n\n@Component({\n  selector: 'app-create-contact',\n  templateUrl: './create-contact.component.html',\n  styleUrls: ['./create-contact.component.scss'],\n})\nexport class CreateContactComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('create', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('labels') selection: MatSelectionList;\n  @ViewChild('areaData') areaData: ElementRef;\n  @ViewChild('previewData') previewData: ElementRef;\n\n  @Input() data: any;\n\n  public keyLabels: string[];\n  public currentKeyLabels: string[];\n  public fieldDisplayNameMap: Map<string, string>;\n\n  private fieldDisplayNameList: string[];\n\n  constructor(\n    public translate: TranslateService,\n    public globals: GlobalsService,\n    private messageService: MessageService,\n    private soapService: SoapService,\n    private createHandler: CreateAddressHandlerService\n  ) {\n    super(translate);\n    this.fieldDisplayNameList = [];\n    this.fieldDisplayNameMap = new Map<string, string>();\n    this.setTranslatedNameList();\n    this.keyLabels = createLabels;\n    this.currentKeyLabels = startLabels;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.processScanFooter().then((resp) => {\n      this.fillTextArea(resp);\n      console.log(resp);\n      console.log(this.areaData);\n    });\n  }\n\n  getTemplate(): TemplateRef<any> {\n    return this.modalTemp;\n  }\n\n  public changeLabel(selectedKey: string, index: number) {\n    const newModal = this.openAnotherModal('createLabel', {\n      labelDisplayMap: this.fieldDisplayNameMap,\n      createLabels,\n      selected: selectedKey,\n    });\n\n    if (newModal) {\n      newModal.afterClosed().subscribe((resp) => {\n        if (resp) {\n          this.currentKeyLabels[index] = resp;\n        }\n      });\n    }\n  }\n\n  // Calls SOAP ScanFooter\n  async processScanFooter() {\n    console.log('SCAN');\n    console.log(this.globals.curConnector.curPostData);\n    const mailContent = this.globals.curConnector.curPostData.preview;\n    console.log('MAIL DATA');\n    console.log(mailContent);\n\n    let footerData;\n    try {\n      footerData = await this.soapService.invokeSoap('scanMailFooter', {\n        mailContent,\n      });\n    } catch (e) {\n      // Nothing\n    }\n\n    return footerData;\n  }\n\n  public confirmAction() {\n    console.log('CONFIRM ACTION');\n    console.log(arguments);\n    let value = '';\n    if (Array.isArray(arguments[0])) {\n      value = arguments[0][0].value;\n    } else {\n      value = arguments[0].value;\n    }\n    this.createAddress(value);\n  }\n\n  private fillPreviewDisplay() {\n    console.log('Fill Preview');\n    console.log(this.globals.displayMailBody);\n    console.log(this.previewData);\n    console.log(this.areaData);\n    if (this.globals.displayMailBody && this.previewData) {\n      console.log('Fill Preview If');\n      console.log(this.globals.curConnector.preview);\n      this.previewData.nativeElement.textContent =\n        this.globals.curConnector.preview;\n    }\n  }\n\n  private createAddress(textContent: string) {\n    console.log('CREATE METHOD!');\n    console.log(textContent);\n    this.createHandler.create(\n      textContent,\n      this.currentKeyLabels,\n      this.fieldDisplayNameMap,\n      this.data.passedData.contactsDB,\n      MAX_ROWS,\n      this.data.passedData.createType,\n      this.data.closeAllModal,\n      this.data.passedData.currentContactPointer\n    );\n  }\n\n  private async fillTextArea(resp: any) {\n    let text = '';\n    let first = true;\n    const mail = this.globals.curMailAddr;\n\n    if (this.data.passedData.currentContactPointer) {\n      resp = await this.createHandler.replaceWithCompanyData(\n        '',\n        this.currentKeyLabels,\n        this.fieldDisplayNameMap,\n        MAX_ROWS,\n        this.data.passedData.currentContactPointer,\n        resp\n      );\n      console.log(resp);\n    }\n\n    for (const index in this.currentKeyLabels) {\n      if (Object.prototype.hasOwnProperty.call(this.currentKeyLabels, index)) {\n        if (!first) {\n          text += '\\n';\n        } else {\n          first = false;\n        }\n        let curVal = resp[this.currentKeyLabels[index]];\n        if (this.currentKeyLabels[index] === 'EMailAddress') {\n          if (mail != null && (curVal == null || curVal === '')) {\n            if (Array.isArray(mail) && mail.length > 0) {\n              // Assign first E Mail Address\n              curVal = mail[0];\n            } else {\n              curVal = mail;\n            }\n          }\n        }\n        if (curVal == null) {\n          curVal = '';\n        }\n        text += curVal.trim();\n        this.areaData.nativeElement.textContent = text;\n      }\n    }\n    this.fillPreviewDisplay();\n  }\n\n  private setTranslatedNameList() {\n    // List of translated keys for contact\n    this.translate.get('LC73020').subscribe((text) => {\n      this.fieldDisplayNameList = text.split(';');\n      console.log(this.fieldDisplayNameList);\n      console.log(createLabels);\n      this.createDisplayMap(this.fieldDisplayNameList);\n    });\n  }\n\n  private createDisplayMap(values: string[]) {\n    console.log(createLabels.length + 1);\n    console.log(values.length);\n    if (createLabels.length === values.length) {\n      // Index 0 of translation not used in keys\n      let valueIndex = 1;\n      for (const labelKey of createLabels) {\n        if (labelKey === '') {\n          continue;\n        }\n        this.fieldDisplayNameMap.set(labelKey, values[valueIndex]);\n        valueIndex++;\n      }\n      this.fieldDisplayNameMap.set('', this.fieldDisplayNameList[0]);\n    } else {\n      this.translate.get('LC53488').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n}\n","<ng-template #create>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC73005' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <!--<textarea #labels id=\"createAddressLabels\" rows=\"23\" readonly></textarea>-->\n    <div id=\"createWrapper\">\n      <div\n        id=\"createAddressLabels\"\n        [ngClass]=\"\n          globals.curConnectorType !== null\n            ? 'createAddressLabels' + globals.curConnectorType\n            : ''\n        \"\n      >\n        <mat-selection-list #labels [multiple]=\"false\">\n          <mat-list-option\n            *ngFor=\"let key of currentKeyLabels; let i = index\"\n            checkboxPosition=\"after\"\n            value=\"{{ currentKeyLabels[i] }}\"\n            (click)=\"changeLabel(key, i)\"\n          >\n            {{ fieldDisplayNameMap.get(key) }}\n          </mat-list-option>\n        </mat-selection-list>\n      </div>\n      <textarea\n        #areaData\n        id=\"createAddressTextArea\"\n        rows=\"23\"\n        [ngClass]=\"\n          globals.curConnectorType !== null\n            ? 'createAddressTextArea' + globals.curConnectorType\n            : ''\n        \"\n      ></textarea>\n      <textarea\n        #previewData\n        id=\"createMailContentArea\"\n        rows=\"23\"\n        readonly\n        *ngIf=\"globals.displayMailBody\"\n      ></textarea>\n    </div>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this, areaData),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { ConnectionService } from '../../../services/connection.service';\nimport { MessageService } from '../../../services/message.service';\nimport { GlobalsService } from '../../../services/globals.service';\nimport { WebintLinkService } from 'src/app/services/webint-link.service';\nimport { AddressService } from 'src/app/services/address.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { LoaderService } from 'src/app/services/loader.service';\n\n@Component({\n  selector: 'app-create-ticket',\n  templateUrl: './create-ticket.component.html',\n  styleUrls: ['./create-ticket.component.scss'],\n})\nexport class CreateTicketComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('crTicket', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('tiTypes') selection: MatSelectionList;\n\n  public ticketTypes: Record<string, string>[];\n  public recent: string | null;\n\n  private validTypes: string[];\n\n  constructor(\n    public translate: TranslateService,\n    private connection: ConnectionService,\n    private messageService: MessageService,\n    private webintLink: WebintLinkService,\n    private addressService: AddressService,\n    private globals: GlobalsService,\n    private connectionService: ConnectionService,\n    private loader: LoaderService\n  ) {\n    super(translate);\n    this.validTypes = [];\n    this.ticketTypes = [];\n    this.recent = sessionStorage.getItem('recentTicketType');\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.fetchTypes();\n  }\n\n  public confirmAction() {\n    try {\n      this.createTicket();\n      console.log(this.globals.curMailAddr);\n    } catch (e) {\n      console.log(e);\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n\n  private createTicket() {\n    this.loader.activateLoader(true, true);\n    const selectedValue = this.selection.selectedOptions.selected[0].value;\n\n    // Split value components 0 = dbAlias, 1 = targetEmail\n    const splitValueArr = selectedValue.split('#');\n\n    console.log(this.addressService.currentAddressData);\n\n    if (Array.isArray(splitValueArr) && splitValueArr.length > 1) {\n      let pointer = '';\n      if (this.addressService.currentAddressData) {\n        pointer = this.addressService.currentAddressData.pointer;\n      }\n\n      this.createTicketHandler(\n        this.globals.curMailUnid,\n        splitValueArr[0],\n        splitValueArr[1],\n        pointer + '~#~' + this.globals.curMailAddr\n      );\n    }\n  }\n\n  // unid = Mail UNID\n  // dbAlias = Service database alias\n  // targetEMail = Service database ticket type specific mail-in address\n  // pointer = addressPointer\n  private createTicketHandler(\n    unid: string,\n    dbAlias: string,\n    targetEMail: string,\n    pointer: string,\n    allowDuplicate?: boolean\n  ) {\n    // TODO: ist auf OWA abgestimmt, muss allgemeiner werden!\n    const data = this.globals.curConnector.curPostData;\n    this.loader.activateLoader(true, true);\n    console.log(data);\n    if (data != null) {\n      // Ticket handling OWA\n      if (this.globals.curConnectorType === 'Owa') {\n        this.ticketHandlerOWA(\n          data,\n          unid,\n          dbAlias,\n          targetEMail,\n          pointer,\n          allowDuplicate\n        );\n      } else {\n        this.ticketHandlerVerse(\n          data,\n          unid,\n          dbAlias,\n          targetEMail,\n          pointer,\n          allowDuplicate\n        );\n      }\n    }\n  }\n\n  private ticketHandlerVerse(\n    data: any,\n    unid: string,\n    dbAlias: string,\n    targetEMail: string,\n    pointer: string,\n    allowDuplicate?: boolean\n  ) {\n    console.log('Ticket Verse');\n    console.log(data);\n    console.log(unid);\n    console.log(dbAlias);\n    console.log(targetEMail);\n    console.log(pointer);\n\n    if (allowDuplicate === true) {\n      // Ignore\n    } else {\n      this.handleDuplicate(unid, dbAlias, targetEMail, pointer);\n      return;\n    }\n\n    this.ticketPost(unid, dbAlias, targetEMail, pointer, allowDuplicate);\n  }\n\n  private ticketHandlerOWA(\n    data: any,\n    unid: string,\n    dbAlias: string,\n    targetEMail: string,\n    pointer: string,\n    allowDuplicate?: boolean\n  ) {\n    this.connectionService\n      .postReq(\n        'convert',\n        'data=' + encodeURIComponent(JSON.stringify(data)),\n        false,\n        {\n          headers: {\n            'content-type': 'application/x-www-form-urlencoded',\n          },\n        }\n      )\n      .subscribe({\n        next: (result: any) => {\n          console.log('TICKET RESULT');\n          console.log(result);\n          unid = result;\n          console.log(result);\n\n          console.log(this.globals.curConnector);\n\n          if (allowDuplicate === true) {\n            // Ignore\n          } else if (\n            this.globals.curConnector.curPostData.officeAlreadyDoc ||\n            this.globals.curConnector.curPostData.ticketAlreadyDoc\n          ) {\n            this.handleDuplicate(unid, dbAlias, targetEMail, pointer);\n            return;\n          }\n\n          this.ticketPost(\n            'OWA:' + unid,\n            dbAlias,\n            targetEMail,\n            pointer,\n            allowDuplicate\n          );\n        },\n        error: (errHttp) => {\n          this.loader.forceDeactivateLoader();\n          this.messageService.showError(errHttp.statusText);\n        },\n        complete: () => {\n          // Do nothing\n        },\n      });\n  }\n\n  private ticketPost(\n    mailunid: string,\n    dbalias: string,\n    targetemail: string,\n    addrpointer: string,\n    allowDuplicate?: boolean\n  ) {\n    const queryObj: any = {\n      mailunid,\n      dbalias,\n      targetemail,\n      addrpointer,\n    };\n\n    if (allowDuplicate === true) {\n      queryObj['allow-duplicate'] = true;\n    }\n\n    this.connection\n      .postReq('ticket', this.connection.objectToHttpParams(queryObj))\n      .subscribe({\n        next: (resp: any) => {\n          window.open(this.webintLink.convertToLink(resp.result), '_blank');\n          this.globals.curConnector.alreadyDocumented = {\n            officeAlreadyDoc:\n              this.globals.curConnector.curPostData.officeAlreadyDoc,\n            ticketAlreadyDoc: true,\n          };\n          this.loader.forceDeactivateLoader();\n          this.translate.get('LC73236').subscribe((text) => {\n            this.messageService.showSuccess(text);\n          });\n          this.closeAll();\n        },\n        error: (errHttp: any) => {\n          if (errHttp.status === 409) {\n            this.handleDuplicate(mailunid, dbalias, targetemail, addrpointer);\n          } else {\n            this.messageService.showError(errHttp.statusText);\n          }\n        },\n        complete: () => {\n          // Nothing\n        },\n      });\n  }\n\n  private handleDuplicate(\n    unid: string,\n    dbAlias: string,\n    targetEMail: string,\n    pointer: string\n  ) {\n    this.loader.forceDeactivateLoader();\n    const duplicateModal = this.openAnotherModal('duplicate');\n    if (duplicateModal) {\n      const curSub = duplicateModal.afterClosed().subscribe((resp) => {\n        if (resp) {\n          this.loader.activateLoader(true, true);\n          this.createTicketHandler(unid, dbAlias, targetEMail, pointer, resp);\n        } else {\n          curSub.unsubscribe();\n        }\n      });\n    }\n  }\n\n  private fetchTypes() {\n    this.connection.getReqModal('ticket', null).subscribe((resp) => {\n      this.filterTypes(resp);\n    });\n  }\n\n  private filterTypes(resp: any) {\n    const ticketObj: any = {};\n    if (Array.isArray(resp)) {\n      for (const ticketOptionKey in resp) {\n        if (\n          Array.isArray(resp[ticketOptionKey]) &&\n          resp[ticketOptionKey].length >= 2\n        ) {\n          const key = resp[ticketOptionKey][0];\n          const value = resp[ticketOptionKey][1];\n          ticketObj[key] = value;\n          if (key !== 'giRecentSelection') {\n            this.ticketTypes.push({\n              key,\n              value,\n            });\n          }\n        }\n      }\n    }\n    if (\n      Object.keys(ticketObj).length === 0 &&\n      ticketObj.constructor === Object\n    ) {\n      this.translate.get('LC73225').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n      return;\n    }\n\n    const ticketKeys = Object.keys(ticketObj);\n    this.validTypes = Object.values(ticketObj);\n\n    window.sessionStorage.setItem(\n      'recentTicketType',\n      ticketKeys[this.validTypes.indexOf(ticketObj.giRecentSelection)]\n    );\n  }\n}\n","<ng-template #crTicket>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53522' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <mat-selection-list #tiTypes [multiple]=\"false\">\n      <mat-list-option\n        *ngFor=\"let type of ticketTypes\"\n        checkboxPosition=\"after\"\n        value=\"{{ type.value }}\"\n        [selected]=\"type.key === recent\"\n        (dblclick)=\"confirmAction()\"\n      >\n        {{ type.key }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { DocumentService } from 'src/app/services/document.service';\n\n@Component({\n  selector: 'app-document-file',\n  templateUrl: './document-file.component.html',\n  styleUrls: ['./document-file.component.css'],\n})\nexport class DocumentFileComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('docFile', { static: true }) modalTemp: TemplateRef<any>;\n\n  public text: string;\n  private officeDB: string;\n  private pointer: string;\n\n  constructor(\n    public translate: TranslateService,\n    private globals: GlobalsService,\n    private loader: LoaderService,\n    private documentService: DocumentService\n  ) {\n    super(translate);\n  }\n\n  ngOnInit(): void {\n    console.log(this.data.passedData);\n    if (this.data.passedData.currentOfficePointer) {\n      this.pointer = this.data.passedData.currentOfficePointer;\n      this.officeDB = this.pointer.substring(this.pointer.lastIndexOf('|') + 1);\n    } else {\n      this.officeDB = this.data.passedData.officeDB;\n      this.pointer = this.data.passedData.currentContactPointer;\n    }\n    this.translate.get('LC73019').subscribe((text) => {\n      this.text = text + '...';\n    });\n\n    this.confirmAction();\n  }\n\n  async confirmAction(): Promise<void> {\n    this.loader.activateLoader(true, true);\n    const data = this.globals.curConnector.curPostData;\n    console.log(data);\n\n    if (data != null) {\n      this.documentService.documentHandler(\n        data,\n        this.pointer,\n        this.officeDB,\n        this\n      );\n    }\n  }\n\n  cancelAction() {\n    this.documentService.resetAllowDuplicate();\n    this.data.closeAllModal();\n  }\n}\n","<ng-template #docFile>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC73005' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">{{ text }}</div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-duplicate',\n  templateUrl: './duplicate.component.html',\n  styleUrls: ['./duplicate.component.css'],\n})\nexport class DuplicateComponent extends ModalBaseComponent implements OnInit {\n  @ViewChild('dupl', { static: true }) modalTemp: TemplateRef<any>;\n\n  public contactDBs: Record<string, string>[];\n\n  constructor(public translate: TranslateService) {\n    super(translate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  confirmAction() {\n    this.data.closeModal(true);\n  }\n}\n","<ng-template #dupl>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53516' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">{{ \"LC73006\" | translate }}</div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import {\n  Component,\n  TemplateRef,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  ComponentFactoryResolver,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalDirective } from 'src/app/directives/modal.directive';\nimport { ModalItem } from 'src/app/otherClasses/modal-item';\nimport { ModalInterface } from 'src/app/types/modal-interface';\nimport { ModalService } from '../../services/modal.service';\n\nimport { AppComponent } from '../app/app.component';\n\nimport { ModalType } from '../../types/modal.type';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { MatSelectionList } from '@angular/material/list';\n\n/*\n  Serves as the main modal component.\n  Sets templates for modal header and footer and passes it to sub-components for further customization.\n  After the sub-component customized header, footer and appended the body, the template will be passed\n  back to this main class to render it.\n*/\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit, AfterViewInit {\n  @ViewChild('modal', { static: true }) modalTempl: TemplateRef<any>;\n  @ViewChild('modalHeader', { static: true }) modalHeader: TemplateRef<any>;\n  @ViewChild('modalFooter', { static: true }) modalFooter: TemplateRef<any>;\n  @ViewChild(ModalDirective, { static: true }) appModal: ModalDirective;\n\n  @ViewChild('dbs') selection: MatSelectionList;\n\n  public modalItems: Record<string, ModalItem>;\n  public currentModalTempl: TemplateRef<any>;\n  public modCloseImage: { [klass: string]: any } | null;\n  public headerText = '';\n\n  private chosenType: ModalType;\n\n  constructor(\n    private modal: MatDialog,\n    private modalService: ModalService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private app: AppComponent,\n    public globals: GlobalsService\n  ) {\n    this.modCloseImage = {\n      background: 'no-repeat url(assets/images/widget_settings.png)',\n    };\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnInit(): void {\n    this.modalService.currentType.subscribe((dataObj) => {\n      this.modalService.setModalHeader(this.modalHeader);\n      this.modalService.setModalFooter(this.modalFooter);\n      this.chosenType = dataObj.newType;\n      this.loadComponent(this.chosenType, dataObj.data);\n    });\n  }\n\n  // Opens Modal\n  // Needs reference of content (templateRef, elementRef)\n  open(content: TemplateRef<any>) {\n    return this.modal.open(content, {\n      panelClass: 'modalOverlay',\n      autoFocus: false,\n      maxHeight: '90%',\n    });\n  }\n\n  // Loads component of type defined in ModalType and opens Modal with its content\n  loadComponent(type: ModalType, passedData?: Record<string, any>) {\n    this.modalItems = this.app.mItems;\n    const modalItem = this.modalItems[type];\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(\n        modalItem.component\n      );\n\n    const viewContainerRef = this.appModal.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef =\n      viewContainerRef.createComponent<ModalInterface>(componentFactory);\n\n    // Gets content (ng-template) of dynamically loaded component\n    this.modalService.addActiveModal(\n      this.open(componentRef.instance.getTemplate())\n    );\n\n    // Assigns data defined in modal.service to loaded component\n    componentRef.instance.data = modalItem.data;\n    componentRef.instance.modalMain = this;\n\n    // Set Reference to modalItems to ModalComponent\n    if (componentRef.instance.data) {\n      componentRef.instance.data.modalItems = this.modalService.modalItemsPub;\n      if (passedData) {\n        componentRef.instance.data.passedData = passedData;\n      }\n    }\n\n    return this.modalService.newActive;\n  }\n\n  closeModal() {\n    this.modalService.closeActiveModal();\n  }\n}\n","<!--<app-choose-office (messageEvent)=\"receiveMessage($event)\"></app-choose-office>-->\n\n<ng-template let-title=\"title\" #modalHeader>\n  <div class=\"modalHeader\">\n    <div class=\"modalHeaderText\">\n      <h1>{{ title }}</h1>\n    </div>\n    <div class=\"modalHeaderClose\" ngbAutoFocus (click)=\"closeModal()\">\n      <div class=\"modalCloseIcon\" [ngStyle]=\"modCloseImage\"></div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  let-confirm=\"confirm\"\n  let-cancel=\"cancel\"\n  let-confirmAction=\"confirmAction\"\n  let-cancelAction=\"cancelAction\"\n  #modalFooter\n>\n  <div class=\"modalFooter\">\n    <button class=\"button-secondary right\" (click)=\"cancelAction()\">\n      {{ cancel }}\n    </button>\n    <button class=\"button-primary right\" (click)=\"confirmAction()\">\n      {{ confirm }}\n    </button>\n  </div>\n</ng-template>\n\n<!-- Necessary to init modal -->\n<ng-template appModal></ng-template>\n\n<ng-template #modal let-modal> </ng-template>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Output,\n  Input,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatabaseSelection } from 'src/app/types/database-selection.model';\nimport { ConnectionService } from '../../../services/connection.service';\nimport { GlobalsService } from '../../../services/globals.service';\nimport { MessageService } from '../../../services/message.service';\n\nimport { InputToolsService } from 'src/app/services/input-tools.service';\nimport { SearchBaseComponent } from '../base/search/search-base.component';\nimport { AddressService } from 'src/app/services/address.service';\nimport { SearchResultContact } from 'src/app/types/search-result-contact.model';\n\n@Component({\n  selector: 'app-search-contact',\n  templateUrl: './search-contact.component.html',\n  styleUrls: ['../base/search/search-base.component.scss'],\n})\nexport class SearchContactComponent\n  extends SearchBaseComponent\n  implements OnInit\n{\n  @ViewChild('searchContact', { static: true }) modalTemp: TemplateRef<any>;\n\n  @Input() data: any;\n\n  @Output() messageEvent = new EventEmitter<TemplateRef<any>>();\n\n  public searchResults: SearchResultContact[];\n\n  constructor(\n    translate: TranslateService,\n    connection: ConnectionService,\n    globals: GlobalsService,\n    messageService: MessageService,\n    inputService: InputToolsService,\n    addressService: AddressService\n  ) {\n    super(\n      translate,\n      connection,\n      globals,\n      messageService,\n      inputService,\n      addressService\n    );\n    this.prefix = 'Contacts: ';\n    this.path = 'search';\n    this.searchResults = [];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  getTemplate(): TemplateRef<any> {\n    return this.modalTemp;\n  }\n\n  filterForContacts(resp: Record<string, any>) {\n    console.log(resp);\n    const contactDBs: Record<string, any> = {};\n\n    for (const alias in resp) {\n      if (alias === 'GeOfficeAliases') {\n        continue;\n      }\n      if (resp[alias].type === 'Contact') {\n        contactDBs[alias] = resp[alias].title;\n      }\n    }\n\n    this.generateSelectionArr(contactDBs);\n  }\n\n  generateSelectionArr(dbs: Record<string, any>) {\n    for (const db in dbs) {\n      if (Object.prototype.hasOwnProperty.call(dbs, db)) {\n        const newContact: DatabaseSelection = {\n          value: db,\n          viewValue: this.prefix + dbs[db],\n        };\n        console.log(newContact);\n        this.databases.push(newContact);\n      }\n    }\n\n    if (this.databases.length > 0) {\n      this.selectedDB = this.databases[0].value;\n      this.fetchSearch(this.selectedDB);\n    }\n    console.log(this.databases);\n  }\n\n  fetchDBs() {\n    this.connection.getReqModal('dbConnections', null).subscribe((resp) => {\n      this.filterForContacts(resp);\n    });\n  }\n\n  handleResult(resp: any) {\n    if (\n      resp.result != null &&\n      Array.isArray(resp.result) &&\n      resp.result.length > 0\n    ) {\n      this.searchResults = resp.result as SearchResultContact[];\n    } else {\n      this.searchResults = [];\n    }\n    console.log(this.searchResults);\n  }\n\n  confirmAction() {\n    console.log(this.selection.selected[0].value.fdMe);\n    if (this.selection.isEmpty()) {\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    } else {\n      this.openAnotherModal(this.next, {\n        currentContactPointer: this.selection.selected[0].value.fdMe,\n        createType: this.data.createType,\n        contactsDB: this.selectedDB,\n      });\n    }\n  }\n}\n","<ng-template #searchContact>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53493' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <div class=\"searchInputWrapper\">\n      <mat-form-field class=\"searchInput\">\n        <mat-label>{{ \"LC53489\" | translate }}</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          [(ngModel)]=\"searchValue\"\n          (keyup.enter)=\"search()\"\n        />\n        <button\n          *ngIf=\"searchValue\"\n          matSuffix\n          aria-label=\"Clear\"\n          (click)=\"searchValue = ''\"\n        >\n          <div class=\"modalCloseIcon\" [ngStyle]=\"searchClearImage\"></div>\n        </button>\n      </mat-form-field>\n      <input\n        id=\"searchButton\"\n        type=\"button\"\n        class=\"buttonSilverMiddle\"\n        value=\"{{ 'LC36251' | translate }}\"\n        (click)=\"search()\"\n      />\n    </div>\n    <mat-form-field class=\"databaseSearchSelect\" appearance=\"standard\">\n      <mat-label>{{ \"LC53516\" | translate }}</mat-label>\n      <mat-select\n        [(value)]=\"selectedDB\"\n        (selectionChange)=\"fetchSearch(selectedDB)\"\n      >\n        <mat-option [value]=\"option.value\" *ngFor=\"let option of databases\">{{\n          option.viewValue\n        }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div class=\"tableWrapper\" *ngIf=\"searchResults.length >= 1; else noResult\">\n      <mat-table [dataSource]=\"searchResults\" class=\"searchTable\">\n        <ng-container matColumnDef=\"icon\">\n          <mat-cell\n            *matCellDef=\"let element\"\n            class=\"searchIcon\"\n            [ngStyle]=\"{\n              background:\n                'no-repeat url(' + viewIconBaseURL + element.value.iconURL + ')'\n            }\"\n          ></mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"display\">\n          <mat-cell *matCellDef=\"let element\" class=\"searchDisplay\">\n            <mat-dialog-content>\n              <span class=\"bold\">\n                {{ element.display }}\n              </span>\n              <div\n                *ngIf=\"\n                  element.value.company !== '' &&\n                  element.value.company !== element.display\n                \"\n              >\n                {{ element.value.company }}\n              </div>\n              <div *ngIf=\"element.value.postal !== ''\">\n                {{ element.value.postal }}\n              </div>\n            </mat-dialog-content>\n          </mat-cell>\n        </ng-container>\n\n        <mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          matRipple\n          [matRippleColor]=\"rippleColor\"\n          [matRippleCentered]=\"centered\"\n          [matRippleDisabled]=\"disabled\"\n          [matRippleUnbounded]=\"unbounded\"\n          class=\"searchRow\"\n          [class.isSelected]=\"this.selection.isSelected(row)\"\n          (click)=\"toggleSelection(row)\"\n          (dblclick)=\"acceptEntryDblClick(row)\"\n        ></mat-row>\n      </mat-table>\n    </div>\n\n    <ng-template #noResult\n      ><div>{{ \"LC53482\" | translate }}</div></ng-template\n    >\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Output,\n  Input,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatabaseSelection } from 'src/app/types/database-selection.model';\nimport { SearchResultTemplate } from 'src/app/types/search-result-template.model';\nimport { ConnectionService } from '../../../services/connection.service';\nimport { GlobalsService } from '../../../services/globals.service';\nimport { MessageService } from '../../../services/message.service';\n\nimport { InputToolsService } from 'src/app/services/input-tools.service';\nimport { SearchBaseComponent } from '../base/search/search-base.component';\nimport { AddressService } from 'src/app/services/address.service';\nimport { HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-search-template',\n  templateUrl: './search-template.component.html',\n  styleUrls: ['../base/search/search-base.component.scss'],\n})\nexport class SearchTemplateComponent\n  extends SearchBaseComponent\n  implements OnInit\n{\n  @ViewChild('searchTemplate', { static: true }) modalTemp: TemplateRef<any>;\n\n  @Input() data: any;\n\n  @Output() messageEvent = new EventEmitter<TemplateRef<any>>();\n\n  public searchResults: SearchResultTemplate[];\n\n  constructor(\n    translate: TranslateService,\n    connection: ConnectionService,\n    globals: GlobalsService,\n    messageService: MessageService,\n    inputService: InputToolsService,\n    addressService: AddressService\n  ) {\n    super(\n      translate,\n      connection,\n      globals,\n      messageService,\n      inputService,\n      addressService\n    );\n    this.prefix = 'Template: ';\n    this.path = 'templates';\n    this.searchResults = [];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  getTemplate(): TemplateRef<any> {\n    return this.modalTemp;\n  }\n\n  createPhoneCallHttpParams(templatePointer: string) {\n    const templateType = 'PhoneCall';\n    const createDocumentType = 'faActivities';\n\n    let params = new HttpParams();\n    params = params.appendAll({\n      createDocument: createDocumentType,\n      parentPointer: this.addressService.currentPointer,\n      templatePointer,\n      templateType,\n    });\n\n    if (this.globals.curSubject != null) {\n      params = params.set('cval-Subject', this.globals.curSubject);\n    }\n\n    const paramsToAdd = ['crmDB'];\n\n    return {\n      paramsToAdd,\n      params,\n    };\n  }\n\n  convertToArr(resp: Record<string, any>) {\n    const templateDBs: Record<string, any> = {};\n\n    console.log(resp);\n\n    for (const index in resp) {\n      if (resp[index].type === 'Template') {\n        templateDBs[resp[index].alias] = resp[index].title;\n      }\n    }\n\n    this.generateSelectionArr(templateDBs);\n  }\n\n  generateSelectionArr(dbs: Record<string, any>) {\n    console.log('???');\n    console.log(dbs);\n    for (const db in dbs) {\n      if (Object.prototype.hasOwnProperty.call(dbs, db)) {\n        const newTemplate: DatabaseSelection = {\n          value: db,\n          viewValue: this.prefix + dbs[db],\n        };\n        console.log(newTemplate);\n        this.databases.push(newTemplate);\n      }\n    }\n\n    this.data.parentPointer = this.addressService.currentPointer;\n\n    if (this.databases.length > 0) {\n      console.log(this.databases);\n      this.selectedDB = this.databases[0].value;\n      this.fetchSearch(this.selectedDB);\n    }\n    console.log(this.databases);\n  }\n\n  fetchDBs() {\n    this.connection\n      .getReqModal(\n        'templates',\n        this.connection.objectToHttpParams({\n          templateDBs: 'true',\n        })\n      )\n      .subscribe((resp) => {\n        console.log(resp);\n        this.convertToArr(resp);\n      });\n  }\n\n  handleResult(resp: any) {\n    console.log(resp);\n    if (resp != null && Array.isArray(resp) && resp.length > 0) {\n      this.searchResults = resp as SearchResultTemplate[];\n    } else {\n      this.searchResults = [];\n    }\n    console.log(this.searchResults);\n  }\n\n  confirmAction() {\n    if (this.selection.isEmpty()) {\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    } else {\n      this.openAnotherModal(this.next, {\n        paramsData: this.createPhoneCallHttpParams(\n          this.selection.selected[0].pointer\n        ),\n        ignoreNext: true,\n      });\n    }\n  }\n}\n","<ng-template #searchTemplate>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53493' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <div class=\"searchInputWrapper\">\n      <mat-form-field class=\"searchInput\">\n        <mat-label>{{ \"LC53489\" | translate }}</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          [(ngModel)]=\"searchValue\"\n          (keyup.enter)=\"search()\"\n        />\n        <button\n          *ngIf=\"searchValue\"\n          matSuffix\n          aria-label=\"Clear\"\n          (click)=\"searchValue = ''\"\n        >\n          <div class=\"modalCloseIcon\" [ngStyle]=\"searchClearImage\"></div>\n        </button>\n      </mat-form-field>\n      <input\n        id=\"searchButton\"\n        type=\"button\"\n        class=\"buttonSilverMiddle\"\n        value=\"{{ 'LC36251' | translate }}\"\n        (click)=\"search()\"\n      />\n    </div>\n    <mat-form-field class=\"databaseSearchSelect\" appearance=\"standard\">\n      <mat-label>{{ \"LC53516\" | translate }}</mat-label>\n      <mat-select\n        [(value)]=\"selectedDB\"\n        (selectionChange)=\"fetchSearch(selectedDB)\"\n      >\n        <mat-option [value]=\"option.value\" *ngFor=\"let option of databases\">{{\n          option.viewValue\n        }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div class=\"tableWrapper\" *ngIf=\"searchResults.length >= 1; else noResult\">\n      <mat-table [dataSource]=\"searchResults\" class=\"searchTable\">\n        <ng-container matColumnDef=\"icon\">\n          <mat-cell\n            *matCellDef=\"let element\"\n            class=\"searchIcon\"\n            [ngStyle]=\"{\n              background:\n                'no-repeat url(' + viewIconBaseURL + element.iconURL + ')'\n            }\"\n          ></mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"display\">\n          <mat-cell *matCellDef=\"let element\" class=\"searchDisplay\">\n            <mat-dialog-content>\n              <span class=\"bold\">\n                {{ element.display }}\n              </span>\n              <div *ngIf=\"element.name !== ''\">\n                {{ element.name }}, {{ element.type }}\n              </div>\n              <div *ngIf=\"element.purpose !== ''\">\n                {{ element.purpose }}\n              </div>\n              <div *ngIf=\"element.category !== ''\">\n                {{ element.category }}\n              </div>\n            </mat-dialog-content>\n          </mat-cell>\n        </ng-container>\n\n        <mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          matRipple\n          [matRippleColor]=\"rippleColor\"\n          [matRippleCentered]=\"centered\"\n          [matRippleDisabled]=\"disabled\"\n          [matRippleUnbounded]=\"unbounded\"\n          class=\"searchRow\"\n          [class.isSelected]=\"this.selection.isSelected(row)\"\n          (click)=\"toggleSelection(row)\"\n          (dblclick)=\"acceptEntryDblClick(row)\"\n        ></mat-row>\n      </mat-table>\n    </div>\n\n    <ng-template #noResult\n      ><div>{{ \"LC53482\" | translate }}</div></ng-template\n    >\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { ConnectionService } from '../../../services/connection.service';\nimport { MessageService } from '../../../services/message.service';\n\n@Component({\n  selector: 'app-select-contact',\n  templateUrl: './select-contact.component.html',\n  styleUrls: ['./select-contact.component.scss'],\n})\nexport class SelectContactComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('selContact', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('dbs') selection: MatSelectionList;\n\n  public contactDBs: Record<string, string>[];\n\n  constructor(\n    public translate: TranslateService,\n    private connection: ConnectionService,\n    private messageService: MessageService\n  ) {\n    super(translate);\n    this.contactDBs = [];\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.fetchContactsDBs();\n  }\n\n  public confirmAction(selection?: any, preselectDB?: any) {\n    try {\n      let chosenDB;\n      if (preselectDB != null) {\n        chosenDB = preselectDB;\n      } else {\n        chosenDB = this.selection.selectedOptions.selected[0].value;\n      }\n      this.openAnotherModal(this.next, {\n        contactsDB: chosenDB,\n        createType: this.data.createType,\n      });\n    } catch (e) {\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n\n  private fetchContactsDBs() {\n    this.connection.getReqModal('dbConnections', null).subscribe((resp) => {\n      this.clearOfficeDBs();\n      this.extractContacts(resp);\n    });\n  }\n\n  private async extractContacts(resp: any) {\n    for (const db in resp) {\n      if (Object.prototype.hasOwnProperty.call(resp, db)) {\n        if (db === 'GeOfficeAliases') {\n          continue;\n        }\n        if (resp[db].type === 'Contact') {\n          console.log(resp);\n          this.contactDBs.push({\n            title: resp[db].title,\n            db,\n          });\n        }\n      }\n    }\n\n    if (this.contactDBs.length < 1) {\n      this.translate.get('LC73225').subscribe((text) => {\n        this.messageService.showError(text);\n        this.cancelAction();\n        return;\n      });\n    }\n\n    if (this.contactDBs.length === 1) {\n      this.confirmAction(this.selection, this.contactDBs[0].db);\n    }\n  }\n\n  private clearOfficeDBs() {\n    this.contactDBs.length = 0;\n  }\n}\n","<ng-template #selContact>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53516' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <mat-selection-list #dbs [multiple]=\"false\">\n      <p *ngIf=\"contactDBs.length < 1\">{{ \"LC53515\" | translate }}</p>\n      <mat-list-option\n        *ngFor=\"let curDB of contactDBs\"\n        checkboxPosition=\"after\"\n        value=\"{{ curDB.db }}\"\n        (dblclick)=\"confirmAction()\"\n        [selected]=\"contactDBs.length === 1 ? curDB.db : null\"\n      >\n        {{ curDB.title }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this, selection),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  TemplateRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { MessageService } from '../../../services/message.service';\nimport { GlobalsService } from '../../../services/globals.service';\n\n@Component({\n  selector: 'app-select-create-label',\n  templateUrl: './select-create-label.component.html',\n  styleUrls: ['./select-create-label.component.css'],\n})\nexport class SelectCreateLabelComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('selLabelCreate', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('selection') selection: MatSelectionList;\n\n  public selectedEntry;\n\n  constructor(\n    public translate: TranslateService,\n    private messageService: MessageService,\n    private globals: GlobalsService\n  ) {\n    super(translate);\n    this.selectedEntry = '';\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    console.log(this.data.passedData);\n    console.log(this.data.passedData.createLabels.indexOf(''));\n    if (this.data.passedData.createLabels.indexOf('') === -1) {\n      this.data.passedData.createLabels.unshift('');\n    }\n    this.selectedEntry = this.data.passedData.selected;\n  }\n\n  confirmAction() {\n    this.data.closeModal(this.selection.selectedOptions.selected[0].value);\n  }\n}\n","<ng-template #selLabelCreate>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53516' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <mat-selection-list #selection [multiple]=\"false\">\n      <mat-list-option\n        *ngFor=\"let entry of data.passedData.createLabels\"\n        checkboxPosition=\"after\"\n        value=\"{{ entry }}\"\n        [selected]=\"entry === selectedEntry\"\n        (dblclick)=\"confirmAction()\"\n      >\n        {{ data.passedData.labelDisplayMap.get(entry) }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\n\nimport { ModalBaseComponent } from '../base/modal-base.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { MessageService } from '../../../services/message.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { ReloadService } from 'src/app/services/reload.service';\n\n@Component({\n  selector: 'app-select-mail-address',\n  templateUrl: './select-mail-address.component.html',\n  styleUrls: ['./select-mail-address.component.scss'],\n})\nexport class SelectMailAddressComponent\n  extends ModalBaseComponent\n  implements OnInit\n{\n  @ViewChild('selMailAddr', { static: true }) modalTemp: TemplateRef<any>;\n  @ViewChild('mailAddrs') selection: MatSelectionList;\n\n  constructor(\n    public globals: GlobalsService,\n    public translate: TranslateService,\n    private messageService: MessageService,\n    private reloadService: ReloadService\n  ) {\n    super(translate);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  public confirmAction() {\n    try {\n      this.globals.curMailAddr =\n        this.selection.selectedOptions.selected[0].value;\n      this.closeAll();\n      this.reloadService.reload();\n    } catch (e) {\n      this.translate.get('LC53493').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n}\n","<ng-template #selMailAddr>\n  <ng-container\n    [ngTemplateOutlet]=\"modalHeader\"\n    [ngTemplateOutletContext]=\"{ title: 'LC53517' | translate }\"\n  >\n  </ng-container>\n  <div class=\"modalBody\">\n    <mat-selection-list #mailAddrs [multiple]=\"false\">\n      <mat-list-option\n        *ngIf=\"globals.curFrom !== null && globals.curFrom !== {}\"\n        checkboxPosition=\"after\"\n        (dblclick)=\"confirmAction()\"\n        value=\"{{ globals.curFrom.emailAddress }}\"\n      >\n        {{ \"LC73126\" | translate }}: {{ globals.curFrom.emailAddress }}\n      </mat-list-option>\n      <mat-list-option\n        *ngFor=\"let to of globals.curTo\"\n        checkboxPosition=\"after\"\n        (dblclick)=\"confirmAction()\"\n        value=\"{{ to.emailAddress }}\"\n      >\n        {{ \"LC73127\" | translate }}: {{ to.emailAddress }}\n      </mat-list-option>\n      <mat-list-option\n        *ngFor=\"let cc of globals.curCC\"\n        checkboxPosition=\"after\"\n        (dblclick)=\"confirmAction()\"\n        value=\"{{ cc.emailAddress }}\"\n      >\n        {{ \"LC73128\" | translate }}: {{ cc.emailAddress }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <ng-container\n    [ngTemplateOutlet]=\"modalFooter\"\n    [ngTemplateOutletContext]=\"{\n      confirm: 'LC73135' | translate,\n      cancel: 'LC73136' | translate,\n      confirmAction: confirmAction.bind(this, selection),\n      cancelAction: cancelAction.bind(this)\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","<ng-template #webInp>\n  <div class=\"modalHeader\">\n    <div class=\"modalHeaderText\">\n      <h1>{{ globals.languageConfLocal.webIntInputTitle }}</h1>\n    </div>\n    <div class=\"modalHeaderClose\" ngbAutoFocus (click)=\"closeModal()\">\n      <div class=\"modalCloseIcon\" [ngStyle]=\"modCloseImage\"></div>\n    </div>\n  </div>\n  <div class=\"modalBody\">\n    <div class=\"webIntText\">\n      {{ globals.languageConfLocal.webIntInputText }}\n      <p *ngIf=\"connectionService.isLoggedIn\">\n        {{ globals.languageConfLocal.webIntLogout }}\n      </p>\n    </div>\n    <div id=\"webIntInputWrapper\" class=\"flex\">\n      <input\n        matInput\n        type=\"text\"\n        id=\"webIntInputField\"\n        [(ngModel)]=\"inputValue\"\n        (keyup.enter)=\"confirmAction()\"\n      />\n      <input\n        type=\"button\"\n        id=\"webIntConfirmButton\"\n        class=\"buttonMiddle noFloat\"\n        value=\"OK\"\n        (click)=\"confirmAction()\"\n      />\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { GlobalsService } from 'src/app/services/globals.service';\nimport { InputToolsService } from 'src/app/services/input-tools.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  selector: 'app-webint-input',\n  templateUrl: './webint-input.component.html',\n  styleUrls: ['./webint-input.component.scss'],\n})\nexport class WebintInputComponent implements OnInit {\n  @ViewChild('webInp', { static: true }) modalTemp: TemplateRef<any>;\n\n  public contactDBs: Record<string, string>[];\n  public modCloseImage: { [klass: string]: any } | null;\n  public lcLocal;\n  public inputValue: string;\n\n  constructor(\n    private messageService: MessageService,\n    private sanitize: InputToolsService,\n    private loader: LoaderService,\n    public connectionService: ConnectionService,\n    public modal: MatDialog,\n    public globals: GlobalsService\n  ) {\n    this.modCloseImage = {\n      background: 'no-repeat url(assets/images/widget_settings.png)',\n    };\n    this.lcLocal = this.globals.languageConfLocal;\n    this.inputValue = '';\n    if (window.localStorage.getItem('webInt') != null) {\n      this.connectionService.webIntModalOpenRef = this.open.bind(this);\n    }\n  }\n\n  ngOnInit(): void {\n    if (window.localStorage.getItem('webInt') != null) {\n      this.inputValue = window.localStorage.getItem('webInt') as string;\n    } else {\n      this.loader.activateLoader(true);\n      setTimeout(() => {\n        this.loader.forceDeactivateLoader();\n        this.connectionService.webIntModalOpenRef = this.open.bind(this);\n      }, 2000);\n    }\n  }\n\n  open() {\n    return this.modal.open(this.modalTemp, {\n      panelClass: 'modalOverlay',\n      autoFocus: false,\n      maxHeight: '90%',\n    });\n  }\n\n  confirmAction() {\n    this.checkInput(this.sanitize.sanitizeInput(this.inputValue, 4));\n    console.log(this.inputValue);\n  }\n\n  closeModal() {\n    this.modal.closeAll();\n  }\n\n  private async checkInput(inputVal: string | null) {\n    console.log(inputVal);\n    if (inputVal && inputVal.includes('.nsf')) {\n      inputVal = inputVal.substring(0, inputVal.indexOf('.nsf') + 4);\n    } else {\n      inputVal = null;\n    }\n    if (inputVal === this.globals.webInt) {\n      this.closeModal();\n      return;\n    }\n    if (inputVal == null || inputVal === '') {\n      this.messageService.showError(\n        this.globals.languageConfLocal.webIntInvalid\n      );\n    } else if (inputVal.includes('http:')) {\n      this.messageService.showWarning(\n        this.globals.languageConfLocal.webIntHttp\n      );\n    } else {\n      if (!inputVal.startsWith('https')) {\n        inputVal = 'https://' + inputVal;\n      }\n      if (!inputVal.endsWith('/')) {\n        inputVal = inputVal + '/';\n      }\n      if (await this.connectionService.checkWebInt(inputVal)) {\n        this.connectionService.connect().subscribe(() => {\n          this.connectionService.reload();\n        });\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { InitService } from 'src/app/services/init.service';\nimport { Address } from 'src/app/types/address.model';\n\nimport { AddressService } from '../../services/address.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-pager',\n  templateUrl: './pager.component.html',\n  styleUrls: ['./pager.component.scss'],\n})\nexport class PagerComponent implements OnInit {\n  public appIsInit = false;\n\n  private endIndex = 0;\n\n  constructor(\n    private addressService: AddressService,\n    private messageService: MessageService,\n    private initService: InitService\n  ) {}\n\n  ngOnInit(): void {\n    this.waitForAddresses();\n    this.initService.waitForInit().subscribe((resp) => {\n      this.appIsInit = resp;\n    });\n    this.addressService.waitForAddressChange().subscribe(() => {\n      this.waitForAddresses();\n    });\n  }\n\n  // TODO: On Keypress ArrowKeys\n  public changeIndex(changeVal: number) {\n    const newIndex: number = this.index + changeVal;\n    if (newIndex >= 0 && newIndex <= this.maxIndex) {\n      this.addressService.addressIndex = newIndex;\n      this.messageService.clearToasts();\n    }\n  }\n\n  public init(addresses: Address[]) {\n    if (addresses.length < 1) {\n      this.endIndex = 0;\n      return;\n    }\n    this.endIndex = addresses.length - 1;\n    console.log('init');\n  }\n\n  private waitForAddresses(): void {\n    console.log('-----PAGER-----');\n    this.addressService.processAddresses().subscribe({\n      next: (addresses: any) => {\n        this.init(addresses);\n      },\n      error: () => {\n        // Nothing\n      },\n      complete: () => {\n        // Nothing\n      },\n    });\n  }\n\n  get index() {\n    return this.addressService.addressIndex;\n  }\n\n  get maxIndex() {\n    return this.endIndex;\n  }\n}\n","<div>\n  <input\n    type=\"image\"\n    src=\"assets/images/arrowRight.png\"\n    class=\"rotateImg\"\n    title=\"{{ 'LC53525' | translate }}\"\n    [style.visibility]=\"index > 0 && appIsInit ? 'visible' : 'hidden'\"\n    (click)=\"changeIndex(-1)\"\n  />\n  <input\n    type=\"image\"\n    src=\"assets/images/arrowRight.png\"\n    title=\"{{ 'LC53524' | translate }}\"\n    [style.visibility]=\"index < maxIndex && appIsInit ? 'visible' : 'hidden'\"\n    (click)=\"changeIndex(1)\"\n  />\n</div>\n","/* eslint-disable no-underscore-dangle */\nimport { Component, OnInit, Renderer2 } from '@angular/core';\nimport { GlobalsService } from '../../services/globals.service';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { AuthService } from 'src/app/graph/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\n\nimport { HttpParams } from '@angular/common/http';\nimport { CreateAddressService } from 'src/app/services/create-address.service';\nimport {\n  ConfigIcons,\n  ConfigIconType,\n  ConfigIconValues,\n} from 'src/app/types/config-icons.model';\nimport {\n  iconDefaultConfig,\n  ConfigData,\n} from '../../otherClasses/config-items-default.class';\n\n@Component({\n  selector: 'app-site-actions',\n  templateUrl: './site-actions.component.html',\n  styleUrls: ['./site-actions.component.scss'],\n})\nexport class SiteActionsComponent implements OnInit {\n  // Includes actions for Refreshing App and Login / Logout\n  enteredButton = false;\n  isMatMenuOpen = false;\n  isMatMenu2Open = false;\n  loggedIn = false;\n  prevButtonTrigger: any;\n  userName: string;\n  reloadImg: any;\n\n  public configIcon: { [klass: string]: any } | null;\n  public iconConfigLocal = iconDefaultConfig;\n  public configData: Record<ConfigIconType, ConfigData>;\n\n  private path = 'config';\n  private configRestObj: Record<string, any>;\n\n  constructor(\n    public globals: GlobalsService,\n    public connectionService: ConnectionService,\n    private createService: CreateAddressService,\n    private ren: Renderer2,\n    private authService: AuthService,\n    private loader: LoaderService\n  ) {\n    this.userName = 'Login';\n    this.reloadImg = {\n      background: 'no-repeat url(assets/images/icon_refresh_no_background.png)',\n    };\n    this.configIcon = {\n      background:\n        'transparent url(assets/images/icons_business_mail.png) no-repeat',\n    };\n    this.configRestObj = {};\n    this.createService.config = this.iconConfigLocal;\n  }\n\n  ngOnInit(): void {\n    this.waitForUserName();\n    if (window.localStorage.getItem('webInt') === null) {\n      this.openWebIntModal();\n    }\n    this.initConfig();\n  }\n\n  menuEnter() {\n    this.isMatMenuOpen = true;\n    if (this.isMatMenu2Open) {\n      this.isMatMenu2Open = false;\n    }\n  }\n\n  menuLeave(trigger: any, firstEle: any) {\n    setTimeout(() => {\n      if (!this.isMatMenu2Open && !this.enteredButton) {\n        this.isMatMenuOpen = false;\n        trigger.closeMenu();\n        if (firstEle) {\n          this.ren.removeClass(\n            firstEle._elementRef.nativeElement,\n            'cdk-focused'\n          );\n          this.ren.removeClass(\n            firstEle._elementRef.nativeElement,\n            'cdk-program-focused'\n          );\n        }\n      } else {\n        this.isMatMenuOpen = false;\n      }\n    }, 80);\n  }\n\n  buttonEnter(trigger: any, firstEle: any) {\n    setTimeout(() => {\n      if (this.prevButtonTrigger && this.prevButtonTrigger !== trigger) {\n        this.prevButtonTrigger.closeMenu();\n        this.prevButtonTrigger = trigger;\n        this.isMatMenuOpen = false;\n        this.isMatMenu2Open = false;\n        trigger.openMenu();\n      } else if (!this.isMatMenuOpen) {\n        this.enteredButton = true;\n        this.prevButtonTrigger = trigger;\n        trigger.openMenu();\n        if (firstEle) {\n          this.ren.removeClass(\n            firstEle._elementRef.nativeElement,\n            'cdk-focused'\n          );\n          this.ren.removeClass(\n            firstEle._elementRef.nativeElement,\n            'cdk-program-focused'\n          );\n        }\n      } else {\n        this.enteredButton = true;\n        this.prevButtonTrigger = trigger;\n      }\n    });\n  }\n\n  buttonLeave(trigger: any) {\n    setTimeout(() => {\n      if (this.enteredButton && !this.isMatMenuOpen) {\n        trigger.closeMenu();\n      }\n      if (!this.isMatMenuOpen) {\n        trigger.closeMenu();\n      } else {\n        this.enteredButton = false;\n      }\n    }, 100);\n  }\n\n  reload() {\n    this.connectionService.reload();\n  }\n\n  openWebIntModal() {\n    this.connectionService.waitForWebIntModal().subscribe((openModal: any) => {\n      openModal();\n    });\n  }\n\n  openConnectWindow() {\n    if (this.userName === 'Login') {\n      if (window.localStorage.getItem('webInt') === null) {\n        this.openWebIntModal();\n      } else {\n        this.connectionService.connect().subscribe(() => {\n          // Connection is handled by service\n        });\n      }\n    }\n  }\n\n  openGraphLogin() {\n    this.authService.signIn();\n  }\n\n  public toggleClass(configTypeIndex: number, callOpenToggle: boolean = true) {\n    console.log(this.configData);\n    if (configTypeIndex < this.iconConfigLocal.length) {\n      let curObj = this.iconConfigLocal[configTypeIndex].model;\n      const objKeysArr = Object.keys(curObj.classAssignment);\n      curObj = this.changeIcon(curObj, objKeysArr);\n      if (\n        this.configData &&\n        this.configData[curObj.name] &&\n        this.configData[curObj.name].inRest\n      ) {\n        this.configRestObj[curObj.name] = curObj.value;\n        let params: HttpParams = new HttpParams();\n        for (const key of Object.keys(this.configRestObj)) {\n          params = params.set(key, this.configRestObj[key]);\n        }\n        if (configTypeIndex === 1) {\n          // Open Mail\n          this.globals.openMail = Boolean(curObj.value);\n        } else if (configTypeIndex === 0) {\n          // Delete Attachments\n          this.globals.deleteAttachments = Boolean(curObj.value);\n        }\n        this.connectionService\n          .postReq(this.path, params, false, undefined, true)\n          .subscribe({\n            next: (resp: any) => {\n              // Do nothing\n            },\n            error: (errHttp: any) => {\n              // TODO Errorhandling\n              console.log(errHttp);\n            },\n            complete: () => {\n              // Do nothing\n            },\n          });\n      } else if (this.configData && this.configData.createAddress) {\n        if (callOpenToggle) {\n          this.createService.toggleOpen();\n        }\n      }\n    }\n  }\n\n  private waitForUserName() {\n    this.connectionService.processPath().subscribe(() => {\n      this.connectionService.getUserName().subscribe((resp: any) => {\n        this.globals.ownMailAddr = resp.mail;\n        this.userName = resp.name;\n        this.loggedIn = true;\n      });\n    });\n  }\n\n  private changeIcon(curObj: ConfigIcons, objKeysArr: string[]) {\n    curObj.value = objKeysArr[\n      (objKeysArr.indexOf(curObj.value) + 1) % objKeysArr.length\n    ] as ConfigIconValues;\n    return curObj;\n  }\n\n  private initConfig() {\n    console.log(this.connectionService);\n    this.connectionService.getReqNoCache(this.path, null).subscribe({\n      next: (resp: any) => {\n        console.log(resp);\n        this.initConfigClasses(resp);\n      },\n      error: (errHttp: any) => {\n        this.connectionService.processPath().subscribe(() => {\n          //this.initConfig();\n        });\n      },\n      complete: () => {\n        // Do nothing\n      },\n    });\n  }\n\n  private initConfigClasses(resp: any) {\n    this.configRestObj = resp;\n    const tmpConfigData: any = {};\n\n    let forIndex = 0;\n\n    for (const ele of this.iconConfigLocal) {\n      const eleName = ele.model.name;\n      let currentConfig;\n\n      if (!currentConfig) {\n        currentConfig = {\n          inRest: false,\n          index: 0,\n        };\n      } else {\n        currentConfig = this.configData[eleName];\n      }\n\n      if (resp[eleName] || resp[eleName] === '') {\n        ele.model.value = resp[eleName];\n        currentConfig.inRest = true;\n        if (eleName === 'deleteAttachments' || eleName === 'openMail') {\n          this.globals[eleName] = Boolean(resp[eleName]);\n        }\n      }\n\n      console.log('RESP:' + resp);\n      console.log(resp);\n\n      tmpConfigData[eleName] = currentConfig;\n\n      currentConfig.index = forIndex;\n      forIndex++;\n    }\n\n    this.configData = tmpConfigData;\n  }\n}\n","<div id=\"actionsHeader\">\n  <div id=\"actionButtons\">\n    <div class=\"clearfix\">\n      <div\n        id=\"reload\"\n        class=\"widgetReload\"\n        title=\"{{ globals.languageConfLocal.reload }}\"\n        [ngStyle]=\"reloadImg\"\n        (click)=\"reload()\"\n      ></div>\n      <div\n        id=\"openCreate\"\n        class=\"{{\n          iconConfigLocal[2].model.classAssignment[\n            iconConfigLocal[2].model.value\n          ]\n        }}\"\n        title=\"{{\n          iconConfigLocal[2].model.titleLC[iconConfigLocal[2].model.value]\n            | translate\n        }}\"\n        [ngStyle]=\"configIcon\"\n        *ngIf=\"globals.actionsAllowed || globals.createAllowed\"\n        (click)=\"toggleClass(2)\"\n      ></div>\n      <div\n        id=\"openMail\"\n        class=\"{{\n          iconConfigLocal[1].model.classAssignment[\n            iconConfigLocal[1].model.value\n          ]\n        }}\"\n        title=\"{{\n          iconConfigLocal[1].model.titleLC[iconConfigLocal[1].model.value]\n            | translate\n        }}\"\n        [ngStyle]=\"configIcon\"\n        (click)=\"toggleClass(1)\"\n      ></div>\n      <div\n        id=\"deleteAttachments\"\n        class=\"{{\n          iconConfigLocal[0].model.classAssignment[\n            iconConfigLocal[0].model.value\n          ]\n        }}\"\n        title=\"{{\n          iconConfigLocal[0].model.titleLC[iconConfigLocal[0].model.value]\n            | translate\n        }}\"\n        [ngStyle]=\"configIcon\"\n        (click)=\"toggleClass(0)\"\n      ></div>\n    </div>\n  </div>\n\n  <div\n    id=\"userMenu\"\n    #button\n    mat-button\n    [matMenuTriggerFor]=\"userMenu\"\n    #userMenuTrigger=\"matMenuTrigger\"\n    (mouseenter)=\"buttonEnter(userMenuTrigger, firstEle)\"\n    (mouseleave)=\"buttonLeave(userMenuTrigger)\"\n    (click)=\"openConnectWindow()\"\n  >\n    <div id=\"userName\" class=\"actionHeaderComponent\">\n      {{ userName }}\n    </div>\n    <img\n      id=\"userMenuIcon\"\n      class=\"actionHeaderComponent right\"\n      src=\"assets/images/DropDownArrowOffsetRight.png\"\n    />\n  </div>\n\n  <mat-menu\n    #userMenu=\"matMenu\"\n    direction=\"down\"\n    yPosition=\"below\"\n    xPosition=\"before\"\n    [hasBackdrop]=\"false\"\n  >\n    <span\n      (mouseenter)=\"menuEnter()\"\n      (mouseleave)=\"menuLeave(userMenuTrigger, firstEle)\"\n    >\n      <li class=\"\" mat-menu-item #firstEle (click)=\"openWebIntModal()\">\n        {{ globals.languageConfLocal.webIntConfig }}\n      </li>\n      <li\n        class=\"\"\n        mat-menu-item\n        *ngIf=\"globals.graphRequired && !globals.graphLoaded\"\n        (click)=\"openGraphLogin()\"\n      >\n        Login Microsoft Graph\n      </li>\n      <li\n        class=\"\"\n        mat-menu-item\n        (click)=\"connectionService.logoutGraph()\"\n        *ngIf=\"globals.graphRequired && globals.graphLoaded\"\n      >\n        Logout Microsoft Graph\n      </li>\n      <li\n        class=\"\"\n        mat-menu-item\n        (click)=\"connectionService.logout()\"\n        *ngIf=\"loggedIn\"\n      >\n        Logout Web\n      </li>\n    </span>\n  </mat-menu>\n</div>\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appActivityAction]',\n})\nexport class ActivityActionDirective {\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.elementRef.nativeElement.lastChild.classList =\n      'show activityButtonContainer clearfix';\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.elementRef.nativeElement.lastChild.classList =\n      'hide activityButtonContainer clearfix';\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appModal]',\n})\nexport class ModalDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const OAuthSettings = {\r\n  appId: '7266f852-5153-4933-b8f4-de2866a1aa19',\r\n  redirectUri: 'https://gomobile.gedys-intraware.de/businessmail',\r\n  /*appId: '82cc362f-b9da-43a3-b9f8-3008e6d47d9e',\r\n  redirectUri: 'https://localhost:3000/gi8bm',*/\r\n  scopes: ['user.read', 'mail.readbasic', 'mail.read', 'Mail.ReadWrite'],\r\n};\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n// <UserSnippet>\r\nexport class User {\r\n  displayName!: string;\r\n  email!: string;\r\n  avatar!: string;\r\n  timeZone!: string;\r\n}\r\n// </UserSnippet>\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { Client } from '@microsoft/microsoft-graph-client';\r\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\r\n\r\nimport { OAuthSettings } from '../data/oauth';\r\nimport { User } from '../data/user';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { GlobalsService } from 'src/app/services/globals.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  public authenticated: boolean;\r\n  public user?: User;\r\n\r\n  // <ConstructorSnippet>\r\n  constructor(\r\n    private msalService: MsalService,\r\n    private messageService: MessageService,\r\n    private globals: GlobalsService\r\n  ) {\r\n    /*this.authenticated = this.msalService.instance.getAllAccounts().length > 0;\r\n    this.getUser().then((user) => {\r\n      this.user = user;\r\n    });*/\r\n  }\r\n  // </ConstructorSnippet>\r\n\r\n  // Prompt the user to sign in and\r\n  // grant consent to the requested permission scopes\r\n  async signIn(skipTokenCheck?: boolean): Promise<void> {\r\n    if (!skipTokenCheck) {\r\n      const token = await this.getAccessToken();\r\n      if (token && token !== '') {\r\n        return;\r\n      }\r\n    }\r\n    const result = await this.msalService\r\n      .loginPopup(OAuthSettings)\r\n      .toPromise()\r\n      .catch((reason) => {\r\n        this.globals.actionsAllowed = false;\r\n        this.messageService.showError(\r\n          this.globals.languageConfLocal.graph,\r\n          'Microsoft Graph: Login failed',\r\n          true\r\n        );\r\n      });\r\n\r\n    if (result) {\r\n      this.globals.actionsAllowed = true;\r\n      this.globals.graphLoaded = true;\r\n      this.authenticated = true;\r\n      this.user = await this.getUser();\r\n    }\r\n  }\r\n\r\n  // Sign out\r\n  async signOut(): Promise<void> {\r\n    await this.msalService.logout().toPromise();\r\n    this.globals.graphLoaded = false;\r\n    this.user = undefined;\r\n    this.authenticated = false;\r\n  }\r\n\r\n  // Sign out Popup\r\n  async signOutPopup(): Promise<void> {\r\n    await this.msalService.logoutPopup().toPromise();\r\n    this.user = undefined;\r\n    this.authenticated = false;\r\n  }\r\n\r\n  // Silently request an access token\r\n  async getAccessToken(): Promise<string> {\r\n    const account = this.msalService.instance.getAllAccounts()[0];\r\n    const result = await this.msalService\r\n      .acquireTokenSilent({\r\n        account: account ?? undefined,\r\n        scopes: OAuthSettings.scopes,\r\n      })\r\n      .toPromise()\r\n      .catch((reason) => {\r\n        this.globals.actionsAllowed = false;\r\n        this.messageService.showError(\r\n          this.globals.languageConfLocal.graph,\r\n          'Microsoft Graph: Get token failed. Try signing in.'\r\n        );\r\n        this.signIn(true);\r\n      });\r\n\r\n    if (result) {\r\n      this.globals.graphLoaded = true;\r\n      this.globals.actionsAllowed = true;\r\n      return result.accessToken;\r\n    }\r\n\r\n    // Couldn't get a token\r\n    this.authenticated = false;\r\n    return '';\r\n  }\r\n\r\n  // <GetUserSnippet>\r\n  private async getUser(): Promise<User | undefined> {\r\n    if (!this.authenticated) {\r\n      return undefined;\r\n    }\r\n\r\n    const graphClient = Client.init({\r\n      // Initialize the Graph client with an auth\r\n      // provider that requests the token from the\r\n      // auth service\r\n      authProvider: async (done) => {\r\n        const token = await this.getAccessToken().catch((reason) => {\r\n          done(reason, null);\r\n        });\r\n\r\n        if (token) {\r\n          done(null, token);\r\n        } else {\r\n          done('Could not get an access token', null);\r\n        }\r\n      },\r\n    });\r\n\r\n    // Get the user from Graph (GET /me)\r\n    const graphUser: MicrosoftGraph.User = await graphClient\r\n      .api('/me')\r\n      .select('displayName,mail,mailboxSettings,userPrincipalName')\r\n      .get();\r\n\r\n    const user = new User();\r\n    user.displayName = graphUser.displayName ?? '';\r\n    // Prefer the mail property, but fall back to userPrincipalName\r\n    user.email = graphUser.mail ?? graphUser.userPrincipalName ?? '';\r\n    user.timeZone = graphUser.mailboxSettings?.timeZone ?? 'UTC';\r\n\r\n    // Use default avatar\r\n    user.avatar = '/assets/no-profile-photo.png';\r\n\r\n    return user;\r\n  }\r\n  // </GetUserSnippet>\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpParams,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NoCacheInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    if (request.params.has('noCache')) {\n      console.log('INTERCEPTED');\n      const noCacheReq = request.clone({\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        setHeaders: { 'Cache-Control': 'no-cache, no-store, must-revalidate' },\n        params: request.params.delete('noCache'),\n      });\n      return next.handle(noCacheReq);\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { LanguageService } from '../services/language.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LcLoader implements TranslateLoader {\n  constructor(public language: LanguageService) {}\n\n  getTranslation(lang: string): Observable<any> {\n    return new Observable((observer) => {\n      this.language.waitForInit().subscribe(() => {\n        observer.next(this.language.passLCObj());\n        observer.complete();\n      });\n    });\n  }\n}\n","import { ConfigIcons } from '../types/config-icons.model';\r\n\r\nclass DeleteAttachmentsConfig {\r\n  public model: ConfigIcons = {\r\n    name: 'deleteAttachments',\r\n    value: '',\r\n    classAssignment: {\r\n      '': 'bmAttachInclude',\r\n      1: 'bmAttachExclude',\r\n    },\r\n    titleLC: {\r\n      '': 'LC73172',\r\n      1: 'LC73173',\r\n    },\r\n  };\r\n}\r\n\r\nclass OpenMailConfig {\r\n  public model: ConfigIcons = {\r\n    name: 'openMail',\r\n    value: '',\r\n    classAssignment: {\r\n      '': 'bmDocOFF',\r\n      1: 'bmDocON',\r\n    },\r\n    titleLC: {\r\n      '': 'LC73169',\r\n      1: 'LC73168',\r\n    },\r\n  };\r\n}\r\n\r\nclass CreateAddress {\r\n  public model: ConfigIcons = {\r\n    name: 'createAddress',\r\n    value: '',\r\n    classAssignment: {\r\n      '': 'bmPlus',\r\n      1: 'bmMinus',\r\n    },\r\n    titleLC: {\r\n      '': 'LC73197',\r\n      1: 'LC73197',\r\n    },\r\n  };\r\n}\r\n\r\nexport const iconDefaultConfig = [\r\n  new DeleteAttachmentsConfig(),\r\n  new OpenMailConfig(),\r\n  new CreateAddress(),\r\n];\r\n\r\nexport class ConfigData {\r\n  inRest: boolean;\r\n  index: number;\r\n}\r\n","import { ModalType } from '../types/modal.type';\r\n\r\nexport default class CreateAddressItems {\r\n  public items = [\r\n    {\r\n      name: 'createAddressCompany' as ModalType,\r\n      lc: 'LC73000',\r\n    },\r\n    {\r\n      name: 'createAddressToCompany' as ModalType,\r\n      lc: 'LC73001',\r\n    },\r\n    {\r\n      name: 'createAddressPerson' as ModalType,\r\n      lc: 'LC73003',\r\n    },\r\n  ];\r\n\r\n  public addNewItem(name: ModalType, lc: string) {\r\n    this.items.push({\r\n      name,\r\n      lc,\r\n    });\r\n  }\r\n}\r\n","import { Type } from '@angular/core';\n\nexport class ModalItem {\n  constructor(public component: Type<any>, public data: any) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { spacerIndices, order } from '../types/address-order.display';\n\n@Pipe({\n  name: 'addSpacer',\n})\nexport class AddSpacerPipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): any {\n    console.log('PIPE!!!!!!!!!!!!!!!!');\n    console.log(typeof value);\n    return this.addSpacerToObject(value);\n  }\n\n  // Checks order of AddressOrder and adds -BLANK- placeholder to displayable object\n  private addSpacerToObject(obj: Record<string, any>[]) {\n    const orderIndices: number[] = [];\n    const objWithSpacers: Record<string, any>[] = [];\n\n    for (const currentEntry of obj) {\n      orderIndices.push(order.indexOf(currentEntry.key));\n    }\n\n    let curEntryIndex = 0;\n    let curSpacerIndex = 0;\n\n    for (const curOrderIndex of orderIndices) {\n      if (curSpacerIndex < spacerIndices.length) {\n        if (curOrderIndex > spacerIndices[curSpacerIndex]) {\n          if (\n            curEntryIndex > 0 &&\n            objWithSpacers[curEntryIndex - 1].key === '-BLANK-'\n          ) {\n            // Skip Spacer\n          } else {\n            objWithSpacers.push({\n              key: '-BLANK-',\n              value: '-BLANK-',\n            });\n          }\n          curSpacerIndex++;\n        }\n      }\n      objWithSpacers.push(obj[curEntryIndex]);\n      curEntryIndex++;\n    }\n\n    return objWithSpacers;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Observable, Subscriber, Subscription } from 'rxjs';\n\nimport { ConnectionService } from './connection.service';\nimport { LanguageService } from './language.service';\nimport { AddressService } from './address.service';\n\nimport { Address } from '../types/address.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActivitiesService {\n  private indexSubscription: Subscription | null;\n  private currentObserver: Subscriber<{ [key: string]: any }> | null;\n  private currentAddresses: Address[];\n\n  constructor(\n    private connectionService: ConnectionService,\n    private addressService: AddressService,\n    public language: LanguageService\n  ) {\n    this.indexSubscription = null;\n    this.currentObserver = null;\n    this.currentAddresses = [];\n  }\n\n  public initActivities(\n    addresses: Address[],\n    index: number,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    console.log('INIT ACTIVITIES');\n    let params = new HttpParams();\n    console.log(addresses);\n    console.log(addresses[index]);\n    if (addresses.length > 0) {\n      params = params.append('pointer', addresses[index].pointer);\n      if (addresses[index].companyPointer !== undefined) {\n        params = params.append(\n          'companypointer',\n          addresses[index].companyPointer as string\n        );\n      }\n      console.log(params);\n      this.connectionService\n        .getReqNoCache('activities', params, undefined, true)\n        .subscribe({\n          next: (resp: any) => {\n            console.log(resp);\n            console.log(resp.maxEntries);\n            resp.type = 'activities';\n            console.log(resp);\n            observer.next(resp);\n          },\n          error: (errHttp: any) => {\n            observer.error(errHttp);\n          },\n          complete: () => {\n            // Do nothing\n          },\n        });\n    }\n    this.connectionService\n      .getReqNoCache('activityTypes', params, undefined, true)\n      .subscribe({\n        next: (resp: any) => {\n          resp.type = 'types';\n          observer.next(resp);\n        },\n        error: (errHttp: any) => {\n          observer.error(errHttp);\n        },\n        complete: () => {\n          // Do nothing\n        },\n      });\n  }\n\n  public changeDefaultTypeSelection(newType: string) {\n    console.log(newType);\n    this.connectionService\n      .postReq('activityTypes', 'displaydocumentstype=' + newType, false)\n      .subscribe(() => {\n        console.log(this.currentObserver);\n        if (this.currentObserver) {\n          console.log('init index change handler');\n          this.initActivities(this.currentAddresses, 0, this.currentObserver);\n        }\n      });\n  }\n\n  public destroy() {\n    if (this.indexSubscription != null) {\n      this.indexSubscription.unsubscribe();\n    }\n  }\n\n  public init() {\n    return new Observable<{ [key: string]: any }>((observer) => {\n      this.currentAddresses = [];\n      this.setObserver(observer);\n      this.addressService.waitForAddresses().subscribe({\n        next: (addresses: any) => {\n          this.currentAddresses = addresses;\n          this.indexChangeHandler(addresses, observer);\n        },\n        error: (errHttp: any) => {\n          this.currentAddresses = [];\n          this.indexChangeHandler([], observer);\n          console.log('Activities failure!');\n          console.log(errHttp);\n        },\n        complete: () => {\n          // Nothing\n        },\n      });\n    });\n  }\n\n  private setObserver(observer: Subscriber<{ [key: string]: any }>) {\n    if (!this.currentObserver) {\n      this.currentObserver = observer;\n    }\n  }\n\n  private indexChangeHandler(\n    addresses: Address[],\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    if (this.indexSubscription) {\n      this.indexSubscription.unsubscribe();\n      this.addressService.addressIndex = 0;\n    }\n    this.indexSubscription = this.addressService\n      .addToIndexListenerList()\n      .subscribe((newIndex) => {\n        this.initActivities(addresses, newIndex, observer);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Address } from '../types/address.model';\nimport { AddressResponse } from '../types/address-response.model';\nimport { ConnectionService } from './connection.service';\nimport { WaitListService } from './waitList.service';\nimport { Observable, Subscriber } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { GlobalsService } from './globals.service';\nimport { InitService } from './init.service';\nimport { CreateAddressService } from './create-address.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressService {\n  private fetchInProgress = false;\n  private addressObjectExtended = false;\n  private indexToShow = 0;\n\n  private addressResponseObject: AddressResponse = {} as AddressResponse;\n  private addresses: Address[] = [];\n\n  constructor(\n    private connectionService: ConnectionService,\n    private waitListService: WaitListService,\n    private globals: GlobalsService,\n    private initService: InitService,\n    private createService: CreateAddressService\n  ) {}\n\n  public waitForAddresses() {\n    return new Observable<Address[]>((observer) => {\n      console.log(observer);\n      if (this.addresses.length > 0) {\n        console.log('Adresse vorhanden');\n        observer.next(this.addresses);\n        observer.complete();\n      } else {\n        console.log('Warte auf Adresse');\n        this.waitListService.addToWaitList('address', observer);\n      }\n    });\n  }\n\n  public processAddresses(): Observable<Address[]> {\n    return new Observable<Address[]>((observer) => {\n      if (this.addresses.length < 1) {\n        console.log('Fetch in Progress: ' + this.fetchInProgress);\n        if (!this.fetchInProgress) {\n          this.fetchInProgress = true;\n          this.processData().subscribe({\n            next: (body) => {\n              body.forEach((element: Address) => {\n                //this.extendProperties(element);\n                let curAddr: Address = element;\n                curAddr = this.modifyAdditionalData(curAddr);\n                this.addresses.push(curAddr);\n                console.log('ProcessAddresses');\n              });\n              if (\n                (body.length < 1 && !this.createService.isOpen) ||\n                (body.length >= 1 && this.createService.isOpen)\n              ) {\n                this.createService.toggleOpen();\n              }\n              observer.next(this.addresses);\n              observer.complete();\n            },\n            error: () => {\n              this.processWaitingList();\n              this.fetchInProgress = false;\n            },\n            complete: () => {\n              this.processWaitingList();\n              this.fetchInProgress = false;\n            },\n          });\n        } else {\n          this.waitListService.addToWaitList('address', observer);\n        }\n      } else {\n        observer.next(this.addresses);\n        observer.complete();\n      }\n    });\n  }\n\n  set addressIndex(newIndex: number) {\n    this.indexToShow = newIndex;\n    this.notifyIndexSubscriber();\n  }\n\n  get addressIndex(): number {\n    return this.indexToShow;\n  }\n\n  get toHideList(): string[] {\n    return this.addressResponseObject.hide;\n  }\n\n  get currentPointer(): string {\n    return this.addresses[this.addressIndex].pointer;\n  }\n\n  get currentAddressData(): Address {\n    return this.addresses[this.addressIndex];\n  }\n\n  public addToIndexListenerList() {\n    return new Observable<number>((observer) => {\n      //this.curIndexSubscriberList.push(observer);\n      this.waitListService.addToWaitList('index', observer);\n    });\n  }\n\n  public resetAddr() {\n    this.addresses = [];\n  }\n\n  public addressChange() {\n    for (const sub of this.waitListService.accessWaitList('addressChange')) {\n      sub.next(true);\n    }\n  }\n\n  public waitForAddressChange() {\n    return new Observable((observer) => {\n      this.waitListService.addToWaitList('addressChange', observer);\n    });\n  }\n\n  get hasAddress(): boolean {\n    if (this.addresses.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private extendProperties(element: Address) {\n    if (!this.addressObjectExtended) {\n      this.addressResponseObject.hide.push('isCompany');\n      this.addressObjectExtended = true;\n    }\n    if (element.pointer.toLowerCase().includes('company')) {\n      element.isCompany = true;\n    } else {\n      element.isCompany = false;\n    }\n  }\n\n  private modifyAdditionalData(address: Address): Address {\n    const ignore = this.addressResponseObject.ignoreInAddress;\n    if (ignore) {\n      ignore.forEach((element) => {\n        if (address.additional) {\n          delete address.additional[element];\n        }\n      });\n    }\n    console.log(address);\n    return address;\n  }\n\n  private notifyIndexSubscriber() {\n    this.waitListService.accessWaitList('index').forEach((observer) => {\n      observer.next(this.addressIndex);\n    });\n  }\n\n  private processWaitingList() {\n    console.log('processing waitlist.....');\n    this.waitListService.accessWaitList('address').forEach((observer) => {\n      console.log(observer);\n      if (this.addresses.length > 0) {\n        observer.next(this.addresses);\n        observer.complete();\n      } else {\n        console.log(' ERROR ');\n        observer.error('No address found.');\n      }\n    });\n    this.waitListService.clearWaitList('address');\n  }\n\n  private processData() {\n    return new Observable<{ [key: string]: any }>((observer) => {\n      this.connectionService.processPath().subscribe(() => {\n        // Path Ready\n        //console.log(resp);\n        console.log('CURMAIL <<<<<<<<<<<<<<<<<<<<<<<<<<');\n        console.log(this.globals.curMailAddr);\n        if (!this.globals.curMailUnid || this.globals.curMailUnid === '') {\n          this.waitListService.addToWaitListFunc(\n            'mailAddr',\n            observer,\n            this.addressHandler.bind(this)\n          );\n        } else {\n          this.addressHandler(observer);\n        }\n      });\n    });\n  }\n\n  /*private addressHandler(observer: Subscriber<{ [key: string]: any }>) {\n    let params = new HttpParams();\n    params = params.set('unid', this.globals.curMailUnid);\n    this.connectionService.processAddress(params).subscribe((resp) => {\n      // Path Ready\n      this.addressResponseObject = resp as AddressResponse;\n      observer.next(resp.data);\n      observer.complete();\n      this.notifyIndexSubscriber();\n\n      // App is init / Show App\n      this.initService.initComplete = true;\n    });\n  }*/\n\n  private addressHandler(observer: Subscriber<{ [key: string]: any }>) {\n    let params = new HttpParams();\n    console.log('ADDRESS HANDLER >>>>>>>>>>>>>>>>>>>>>>>>>>');\n    params = params.set('mail', this.globals.curMailAddr);\n    this.connectionService.processAddress(params).subscribe((resp) => {\n      // Path Ready\n      this.addressResponseObject = resp as AddressResponse;\n      observer.next(resp.data);\n      observer.complete();\n      this.notifyIndexSubscriber();\n\n      // App is init / Show App\n      this.initService.initComplete = true;\n    });\n  }\n\n  private getUrlOrigin(curUrl: string): string {\n    const url = new URL(curUrl);\n    return url.origin;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subscriber, BehaviorSubject } from 'rxjs';\nimport { GlobalsService } from './globals.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private currentSubject = new BehaviorSubject<string | null>(null);\n\n  constructor(private globals: GlobalsService) {}\n\n  checkForWebInt(): void {\n    const curWebInt: string | null = localStorage.getItem('webInt');\n    if (localStorage.getItem('webInt') !== null) {\n      this.currentSubject.next(curWebInt);\n    }\n  }\n\n  processWebInt(): void {\n    this.currentSubject.next(this.globals.webInt);\n  }\n\n  get subject(): BehaviorSubject<string | null> {\n    return this.currentSubject;\n  }\n\n  /*observable = new Observable((observer) => this.checkForWebInt(observer));\n\n  constructor() {}\n\n  // Unschreiben BehaviorSubject ?\n  checkForWebInt(observer: Subscriber<any>): void {\n    var curWebInt: string | null = localStorage.getItem('webInt');\n    if (localStorage.getItem('webInt') !== null) {\n      observer.next(curWebInt);\n    }\n  }*/\n}\n","/* eslint-disable quote-props */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { from, Observable, PartialObserver, Subscriber } from 'rxjs';\nimport { GlobalsService } from './globals.service';\nimport { WaitListService } from './waitList.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoaderService } from './loader.service';\nimport { MessageService } from './message.service';\nimport { AuthService } from '../graph/services/auth.service';\n\nconst LOGINPATH = 'loginBM.xsp';\nconst MAX_RETRIES = 3;\nconst MS_UNTIL_RETRY = 300;\nconst KEEPALIVE_TIMER_MS = 55000;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  private messageListener: any;\n  private loginWindow: Window | null;\n  private pathInfo: { [key: string]: any } | null;\n  private pathFetchInProgress = false;\n  private keepAliveInterval: any;\n  private loggedIn = false;\n  private webIntModalOpen: any;\n  private loggingOut = false;\n  private listenerSet = false;\n\n  private options = {};\n\n  constructor(\n    private globals: GlobalsService,\n    private waitList: WaitListService,\n    private modal: MatDialog,\n    private messageService: MessageService,\n    private loaderService: LoaderService,\n    private authService: AuthService\n  ) {\n    this.messageListener = null;\n    this.loginWindow = null;\n    this.pathInfo = null;\n\n    if (!this.globals.graphRequired) {\n      this.waitForGraphRequired().subscribe(() => {\n        this.openGraphLogin();\n      });\n    } else {\n      this.openGraphLogin();\n    }\n  }\n\n  // Opens login window and inits listener for login\n  public connect() {\n    return new Observable((observer) => {\n      this.createListenerLogin(observer);\n      this.loginWindow = this.popupWindow(\n        this.globals.webInt + LOGINPATH,\n        'login',\n        440,\n        190\n      );\n      this.globals.loginOpen = true;\n      if (\n        !this.loginWindow ||\n        this.loginWindow.closed ||\n        typeof this.loginWindow.closed == 'undefined'\n      ) {\n        if (!this.loggingOut) {\n          this.messageService.showError(\n            this.globals.languageConfLocal.popupBlocked,\n            undefined,\n            true\n          );\n        }\n      }\n    });\n  }\n\n  public objectToHttpParams(objToTransform: Record<string, string | null>) {\n    let params = new HttpParams();\n    for (const key in objToTransform) {\n      if (Object.prototype.hasOwnProperty.call(objToTransform, key)) {\n        const value = objToTransform[key];\n        if (value) {\n          params = params.set(key, value);\n        }\n      }\n    }\n    return params;\n  }\n\n  public reload() {\n    if (this.globals.curConnectorType === 'Owa') {\n      window.location.reload();\n    } else {\n      sessionStorage.setItem(\n        'verseAppData',\n        JSON.stringify(this.globals.curConnector.data)\n      );\n      const curURL = window.location.href;\n      if (!window.location.href.includes('index.html')) {\n        let urlAddition = 'index.html';\n        if (!window.location.href.endsWith('/')) {\n          urlAddition = '/' + urlAddition;\n        }\n        window.location.href += urlAddition;\n      }\n    }\n  }\n\n  // For first modal, get newest response\n  // Every additional modal uses a cached version\n  public getReqModal(pathComponent: string, params: HttpParams | null) {\n    if (!this.globals.modalCacheFlag) {\n      return this.getReqNoCache(pathComponent, params);\n    } else {\n      if (params == null) {\n        params = new HttpParams();\n      }\n      return this.getReq(pathComponent, params);\n    }\n  }\n\n  public getReqNoCache(\n    pathComponent: string,\n    params: HttpParams | null,\n    responseIsJSON?: boolean,\n    avoidLoader?: boolean\n  ) {\n    console.log('IN REQUEST CACHE');\n    console.log(responseIsJSON);\n    if (params == null) {\n      params = new HttpParams();\n    }\n    params = params.append('noCache', 'true');\n    return this.getReq(pathComponent, params, responseIsJSON, avoidLoader);\n  }\n\n  public getReq(\n    pathComponent: string,\n    params: HttpParams | null,\n    responseIsJSON?: boolean,\n    avoidLoader?: boolean\n  ) {\n    console.log('>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<');\n    console.log(pathComponent);\n    console.log(params);\n    let options: any;\n    if (responseIsJSON != null && responseIsJSON === false) {\n      options = this.globals.changeOwnOptions({\n        responseType: 'text',\n      });\n    } else {\n      options = undefined;\n    }\n    if (!pathComponent.includes('keepAlive') && !avoidLoader) {\n      this.activateLoader();\n    }\n    if (params == null) {\n      params = new HttpParams();\n    }\n    return new Observable<{ [key: string]: any }>((observer) => {\n      console.log('IN REQUEST OBS');\n      console.log(this.pathInfo);\n      this.getReqHandler(\n        pathComponent,\n        params as HttpParams,\n        observer,\n        0,\n        options,\n        responseIsJSON\n      );\n    });\n  }\n\n  public async getReqHandler(\n    pathComponent: string,\n    params: HttpParams,\n    observer: Subscriber<{ [key: string]: any }>,\n    currentTry: number,\n    options?: any,\n    responseIsJSON?: boolean\n  ) {\n    console.log('IN REQUEST PATH');\n    if (this.pathInfo != null) {\n      let url =\n        this.globals.webInt +\n        this.globals.apiOverviewPath +\n        this.pathInfo[pathComponent].relativePath;\n\n      let obj;\n\n      if (options) {\n        obj = this.globals.changeOwnOptions(options);\n      } else {\n        obj = this.globals.objectWithParams(params);\n      }\n      console.log(pathComponent);\n      console.log(obj);\n\n      console.log('PARAMS: ');\n      console.log(params.toString());\n\n      url += '?' + params.toString();\n\n      await fetch(url, obj)\n        .then(async (resp) => {\n          console.log('THEN');\n          console.log(this.globals.options);\n          let respData;\n          if (\n            responseIsJSON === undefined ||\n            responseIsJSON === null ||\n            responseIsJSON\n          ) {\n            respData = await resp.json();\n          } else {\n            respData = await resp.text();\n          }\n          console.log(respData);\n          observer.next(respData);\n          observer.complete();\n          this.loaderService.deactivateLoader();\n        })\n        .catch((error) => {\n          console.log('CATCH');\n          console.log('HTTP Error', error);\n          observer.error();\n          this.loaderService.deactivateLoader();\n        });\n      console.log('Req URL:' + url);\n    } else {\n      // If connection fails, retry up to MAX_RETRIES times - then send error\n      console.log('RETRY');\n      currentTry++;\n      if (currentTry === MAX_RETRIES) {\n        if (window.localStorage.getItem('webInt') === null) {\n          // Ignore\n        } else {\n          this.messageService.setConnectionTimeout(\n            this.globals.languageConfLocal.cantConnect\n          );\n        }\n        observer.error();\n      } else {\n        setTimeout(() => {\n          this.getReqHandler(pathComponent, params, observer, currentTry);\n        }, MS_UNTIL_RETRY);\n      }\n    }\n  }\n\n  public postReq(\n    pathComponent: string,\n    body: string | HttpParams,\n    responseIsJSON = true,\n    options?: { [key: string]: any },\n    ignoreLoader?: boolean\n  ) {\n    console.log('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');\n    console.log(pathComponent);\n    console.log(body);\n    if (ignoreLoader === undefined || !ignoreLoader) {\n      this.activateLoader();\n    }\n    if (body instanceof HttpParams) {\n      body = body.toString();\n    }\n\n    if (!responseIsJSON) {\n      if (options) {\n        options.method = 'POST';\n        options.responseType = 'text';\n        options.body = body;\n        options = this.globals.changeOwnOptions(options);\n      } else {\n        options = this.globals.changeOwnOptions({\n          responseType: 'text',\n          method: 'POST',\n          body,\n        });\n      }\n    } else if (!options) {\n      options = this.globals.changeOwnOptions({\n        method: 'POST',\n        body,\n      });\n    }\n\n    if (options) {\n      options.method = 'POST';\n      options.body = body;\n      options = this.globals.changeOwnOptions(options);\n    }\n\n    return new Observable<{ [key: string]: any }>((observer) => {\n      if (this.pathInfo != null) {\n        const url =\n          this.globals.webInt +\n          this.globals.apiOverviewPath +\n          this.pathInfo[pathComponent].relativePath;\n\n        console.log('BODY: ');\n        console.log(body.toString());\n        console.log(options);\n\n        // TODO Problem beim Dokumentieren\n\n        from(fetch(url, options)).subscribe({\n          next: async (resp: any) => {\n            console.log(resp);\n            console.log('notify observer');\n            if (resp.status === 200) {\n              let respData;\n              if (\n                responseIsJSON === undefined ||\n                responseIsJSON === null ||\n                responseIsJSON\n              ) {\n                respData = await resp.json();\n              } else {\n                respData = await resp.text();\n              }\n              console.log(respData);\n              observer.next(respData);\n              this.loaderService.deactivateLoader();\n            } else {\n              console.log('POST FAILED IN NEXT');\n              console.log('HTTP Error', resp);\n              observer.error(resp);\n              this.loaderService.deactivateLoader();\n            }\n          },\n          error: (errHttp: any) => {\n            console.log('POST FAILED IN ERROR');\n            console.log('HTTP Error', errHttp);\n            observer.error(errHttp);\n            this.loaderService.deactivateLoader();\n          },\n          complete: () => {\n            // Nothing\n          },\n        });\n        console.log('Req URL:' + url);\n      }\n    });\n  }\n\n  public async postSoap(url: string, data: any) {\n    this.activateLoader();\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/xml',\n        SOAPAction: 'basicInvoke',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: data,\n    });\n    this.loaderService.deactivateLoader();\n    return response;\n  }\n\n  // Gets path info from cache or inits request, if cache empty\n  public processPath() {\n    return new Observable<{ [key: string]: any }>((observer) => {\n      if (!this.pathFetchInProgress) {\n        this.pathFetchInProgress = true;\n        const http$ = from(\n          fetch(\n            this.globals.webInt + this.globals.apiOverviewPath,\n            this.globals.options\n          )\n        );\n\n        if (this.pathInfo != null) {\n          console.log('>>>>> Path != null');\n          this.processPathWaitingList();\n          this.pathFetchInProgress = false;\n          observer.next(this.pathInfo);\n          observer.complete();\n        } else {\n          console.log('>>>>>> login');\n          this.loginConnect(http$, observer);\n        }\n      } else {\n        this.waitList.addToWaitList('path', observer);\n      }\n    });\n  }\n\n  /*public processAddress(params: HttpParams) {\n    return new Observable<{ [key: string]: any }>((observer) => {\n      if (this.pathInfo != null) {\n        const addressUrl =\n          this.globals.webInt +\n          this.globals.apiOverviewPath +\n          this.pathInfo.addresses.relativePath;\n\n        const http$ = this.http.get<any>(\n          addressUrl,\n          this.globals.objectWithParams(params)\n        );\n\n        this.processAddressHandler(http$, observer);\n      }\n    });\n  }*/\n\n  public processAddress(params: HttpParams) {\n    params = params.set('filterImg', 'true');\n    return new Observable<{ [key: string]: any }>((observer) => {\n      if (this.pathInfo != null) {\n        this.postReq('addresses', params, true).subscribe({\n          next: (resp: any) => {\n            console.log('ProcessAddress');\n            console.log(resp);\n            observer.next(resp);\n            observer.complete();\n          },\n          error: (errHttp: any) => {\n            console.log('HTTP Error', errHttp);\n          },\n          complete: () => {\n            // Nothing\n          },\n        });\n      }\n    });\n  }\n\n  public waitForLC() {\n    return new Observable<boolean>((observer) => {\n      if (this.pathInfo == null) {\n        console.log('>>>>> Path null wait for lc');\n        this.processPath().subscribe(() => {\n          console.log('>>>>> Path get');\n          this.processLCHandler(observer);\n        });\n      } else {\n        this.processLCHandler(observer);\n      }\n    });\n  }\n\n  public processLCHandler(observer: Subscriber<boolean>) {\n    // For typecheck - will only be called when path is set.\n    if (this.pathInfo != null) {\n      if (Object.keys(this.globals.languageConf).length > 0) {\n        observer.next(true);\n        observer.complete();\n      } else {\n        const http$ = from(\n          fetch(\n            this.globals.webInt +\n              this.globals.apiOverviewPath +\n              this.pathInfo.translation.relativePath +\n              '/businessmail',\n            this.globals.options\n          )\n        );\n\n        http$.subscribe({\n          next: async (resp: any) => {\n            console.log('LC LC LC LC LC LC');\n            console.log(resp);\n            if (resp.status !== 200) {\n              observer.error(await resp.text());\n            } else {\n              this.globals.languageConf = await resp.json();\n              console.log(resp.body);\n              observer.next(true);\n              observer.complete();\n            }\n          },\n          error: (errHttp: any) => {\n            console.log('HTTP Error', errHttp);\n          },\n          complete: () => {\n            // Nothing\n          },\n        });\n      }\n    }\n  }\n\n  public async checkWebInt(inputVal: string): Promise<boolean> {\n    return await fetch(inputVal + LOGINPATH, {\n      method: 'HEAD',\n    })\n      .then(() => {\n        if (this.globals.webInt) {\n          this.loggingOut = true;\n          this.logout();\n        }\n        window.localStorage.setItem('webInt', inputVal);\n        this.globals.webInt = inputVal;\n        return true;\n      })\n      .catch(() => {\n        this.messageService.showError(\n          this.globals.languageConfLocal.webIntCertError + ' ' + inputVal,\n          undefined,\n          true\n        );\n        return false;\n      });\n  }\n\n  public async logoutGraph() {\n    await this.authService.signOutPopup();\n  }\n\n  public async logout() {\n    from(\n      fetch(\n        this.globals.webInt.substr(0, this.globals.webInt.length - 1) +\n          '?logout',\n        this.globals.options\n      )\n    ).subscribe({\n      next: () => {\n        console.log('LOGGING OUT');\n        console.log(this.loggingOut);\n        this.reload();\n      },\n      error: async (err) => {\n        console.log('ERROR LOGGING OUT');\n        console.log(err);\n        const resp = await fetch(\n          this.globals.webInt + 'restBM.xsp/verserest/',\n          {\n            method: 'get',\n            credentials: 'include',\n            cache: 'no-cache',\n            mode: 'cors',\n          }\n        );\n\n        if (!(resp.status != null && resp.status === 401)) {\n          if (resp.type != null && resp.type === 'cors') {\n            this.reload();\n          }\n          this.messageService.showError(\n            this.globals.languageConfLocal.webIntLogoutFailed,\n            undefined,\n            true\n          );\n        } else {\n          this.reload();\n        }\n      },\n    });\n  }\n\n  public waitForWebIntModal() {\n    return new Observable((observer) => {\n      if (this.webIntModalOpen) {\n        observer.next(this.webIntModalOpen);\n        observer.complete();\n      } else {\n        this.waitList.addToWaitList('webIntModal', observer);\n      }\n    });\n  }\n\n  public getUserName() {\n    return new Observable((observer) => {\n      this.getReqNoCache('user', null).subscribe((resp) => {\n        observer.next(resp);\n        observer.complete();\n      });\n    });\n  }\n\n  public waitForGraphRequired() {\n    return new Observable((observer) => {\n      this.waitList.addToWaitList('graphRequired', observer);\n    });\n  }\n\n  get isLoggedIn() {\n    return this.loggedIn;\n  }\n\n  set webIntModalOpenRef(func: any) {\n    this.webIntModalOpen = func;\n    for (const sub of this.waitList.accessWaitList('webIntModal')) {\n      sub.next(func);\n      sub.complete();\n    }\n  }\n\n  private async openGraphLogin() {\n    if (!this.globals.graphLoaded) {\n      return this.authService.signIn();\n    }\n    return null;\n  }\n\n  private activateLoader() {\n    if (this.globals.webInt && this.globals.webInt !== '') {\n      this.loaderService.activateLoader(\n        Boolean(this.modal.openDialogs.length).valueOf()\n      );\n    }\n  }\n\n  // Avoids caching to check if user is logged in\n  private async checkIfLoggedIn(\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    if (this.pathInfo != null) {\n      let params = new HttpParams();\n      params = params.set('noCache', 'true');\n\n      console.log('CHECK IF LOGGED IN ');\n\n      this.getReqNoCache('keepAlive', null, false).subscribe({\n        next: async (resp: any) => {\n          console.log('Keep Alive Resp');\n          console.log(resp);\n          if (resp == null || resp !== 'OK') {\n            console.log('check if logged in error');\n            this.connect().subscribe(this.connectHandler(http$, observer));\n          } else {\n            this.processPathWaitingList();\n            this.pathFetchInProgress = false;\n            observer.next(resp);\n            observer.complete();\n          }\n        },\n        error: (error) => {\n          console.log('check if logged in error');\n          this.connect().subscribe(this.connectHandler(http$, observer));\n        },\n      });\n    }\n  }\n\n  private processPathWaitingList() {\n    console.log('------ Process wait list');\n    this.waitList.accessWaitList('path').forEach((observer) => {\n      if (this.pathInfo != null) {\n        console.log('------ != Null');\n        observer.next(this.pathInfo);\n        observer.complete();\n      } else {\n        console.log('------ != Error');\n        observer.error();\n      }\n    });\n  }\n\n  /*private processAddressHandler(\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    http$.subscribe({\n      next: (resp: any) => {\n        console.log(resp.body);\n        observer.next(resp.body);\n        observer.complete();\n      },\n      error: (errHttp: any) => {\n        console.log('HTTP Error', errHttp);\n      },\n      complete: () => {\n        // Nothing\n      },\n    });\n  }*/\n\n  // Tries to get path info, caches it and passes it to observer, if successful.\n  private loginConnect(\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    if (!this.globals.webInt) {\n    } else {\n      this.loginConnectHandler(http$, observer);\n    }\n  }\n\n  private loginConnectHandler(\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    http$.subscribe({\n      next: async (resp: any) => {\n        if (resp.status !== 200) {\n          this.loginConnectError(resp, http$, observer);\n        } else {\n          // Already logged in, get path info and send to subscribers\n          this.pathInfo = await resp.clone().json();\n          this.loggedIn = true;\n          console.log('ALREADY LOGGED IN!!!!');\n          console.log(this.pathInfo);\n\n          this.keepAlive();\n          this.checkIfLoggedIn(http$, observer);\n        }\n      },\n      error: (errHttp: any) => {\n        this.loginConnectError(errHttp, http$, observer);\n      },\n      complete: () => {\n        // Nothing\n      },\n    });\n  }\n\n  private async loginConnectError(\n    errHttp: any,\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ) {\n    console.log('!!!!!!! NOT LOGGED IN');\n    console.log(errHttp);\n    this.loggedIn = false;\n    // User not connected, try again after login\n    console.log('HTTP Error', errHttp);\n    if (errHttp.status === 401 || errHttp.status === 200) {\n      this.connect().subscribe(this.connectHandler(http$, observer));\n    } else {\n      this.processPathWaitingList();\n      this.pathFetchInProgress = false;\n    }\n  }\n\n  // Refresh session\n  private keepAlive() {\n    if (this.keepAliveInterval != null) {\n      clearInterval(this.keepAliveInterval);\n    }\n    this.keepAliveInterval = setInterval(async () => {\n      const sub = this.getReqNoCache('keepAlive', null, false).subscribe(() => {\n        sub.unsubscribe();\n      });\n    }, KEEPALIVE_TIMER_MS);\n  }\n\n  private connectHandler(\n    http$: Observable<any>,\n    observer: Subscriber<{ [key: string]: any }>\n  ): PartialObserver<unknown> {\n    return {\n      next: () => {\n        console.log('connectHandler next');\n        // Do nothing\n      },\n      error: (err: any) => {\n        console.log('connectHandler error');\n        // TODO: Error Handling failed to connect\n        //observer.error();\n      },\n      complete: () => {\n        console.log('connectHandler complete');\n        // Resend request after login to get path info\n        const newHttp = from(\n          fetch(\n            this.globals.webInt + this.globals.apiOverviewPath,\n            this.globals.options\n          )\n        );\n        this.loginConnect(newHttp, observer);\n      },\n    };\n  }\n\n  private popupWindow(\n    url: string,\n    title: string,\n    w: number,\n    h: number\n  ): Window | null {\n    if (!this.loggingOut) {\n      const left = screen.width / 2 - w / 2;\n      const top = screen.height / 2 - h / 2;\n      return window.open(\n        url,\n        title,\n        'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n          w +\n          ', height=' +\n          h +\n          ', top=' +\n          top +\n          ', left=' +\n          left\n      );\n    }\n    return null;\n  }\n\n  // Notifies subscribers of connect() if login is successful\n  private createListenerLogin(observer: Subscriber<unknown>) {\n    if (!this.listenerSet) {\n      this.loaderService.deactivateLoaderAfterTimeout();\n      window.addEventListener(\n        'message',\n        (this.messageListener = async (event: any) => {\n          console.log(event);\n          if (event.origin !== this.globals.origin) {\n            return;\n          } else {\n            if (event.data === 'OK') {\n              console.log('Event Data OK');\n              if (this.loginWindow != null) {\n                this.loginWindow.close();\n              }\n              window.removeEventListener(\n                'message',\n                this.messageListener,\n                false\n              );\n              this.loaderService.activateLoader(false);\n              observer.next('OK');\n              observer.complete();\n              this.globals.loginOpen = false;\n              for (const sub of this.waitList.accessWaitList('login')) {\n                sub.next('OK');\n                sub.next('complete');\n              }\n            } else {\n              if (event.data === 'Close') {\n                this.waitList.addToWaitList('login', observer);\n                this.loaderService.deactivateLoader();\n                this.globals.loginOpen = false;\n              }\n              console.log(event.data);\n              //observer.error('Window closed');\n            }\n          }\n        }),\n        false\n      );\n      this.listenerSet = true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { AuthService } from 'src/app/graph/services/auth.service';\nimport { ConnectionService } from '../connection.service';\nimport { GlobalsService } from '../globals.service';\nimport { MessageService } from '../message.service';\nimport { WaitListService } from '../waitList.service';\nimport { ConnectorOWAService } from './connector-owa.service';\nimport { ConnectorVerseService } from './connector-verse.service';\nimport { ConnectorService } from './connector.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectorFactory {\n  constructor(\n    public translate: TranslateService,\n    private globals: GlobalsService,\n    private message: MessageService,\n    private auth: AuthService,\n    private waitlist: WaitListService,\n    private connection: ConnectionService\n  ) {}\n\n  // Checks which app accesses BM\n  public checkForApp(): Observable<any> {\n    console.log('FACTORY');\n    return new Observable<ConnectorService>((observer) => {\n      try {\n        Office.onReady(() => {\n          console.log('FACTORY OWA');\n          observer.next(\n            new ConnectorOWAService(\n              this.globals,\n              this.message,\n              this.auth,\n              this.waitlist\n            )\n          );\n          observer.complete();\n        });\n      } catch (e) {\n        if (sessionStorage.getItem('verseAppData') != null) {\n          const verse = new ConnectorVerseService(\n            this.translate,\n            this.globals,\n            this.message,\n            this.connection\n          );\n          verse.data = JSON.parse(\n            sessionStorage.getItem('verseAppData') as string\n          );\n          sessionStorage.clear();\n          observer.next(verse);\n          observer.complete();\n        } else {\n          window.addEventListener(\n            'message',\n            async (event) => {\n              this.verseHandler(event, observer);\n            },\n            false\n          );\n        }\n      }\n    });\n  }\n\n  private async verseHandler(\n    event: any,\n    observer: Subscriber<ConnectorService>\n  ) {\n    sessionStorage.clear();\n    console.log('INIT VERSE');\n    console.log(event);\n    if (event.data.verseApiType === 'com.ibm.verse.ping.application.loaded') {\n      const loadedMessage = {\n        verseApiType: 'com.ibm.verse.application.loaded',\n      };\n      if (\n        event.source != null &&\n        !(event.source instanceof MessagePort) &&\n        !(event.source instanceof ServiceWorker)\n      ) {\n        console.log(event.source);\n        event.source.postMessage(loadedMessage, event.origin);\n      }\n    }\n    if (event.data.verseApiType === 'com.ibm.verse.action.clicked') {\n      const verse = new ConnectorVerseService(\n        this.translate,\n        this.globals,\n        this.message,\n        this.connection\n      );\n\n      verse.data = event.data.verseApiData;\n\n      observer.next(verse);\n      observer.complete();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/graph/services/auth.service';\nimport { ChangeableCSSNames } from 'src/app/types/changeable-css-names.type';\nimport { GlobalsService } from '../globals.service';\nimport { MessageService } from '../message.service';\nimport { ConnectorService } from './connector.service';\nimport { Client, ResponseType } from '@microsoft/microsoft-graph-client';\nimport { WaitListService } from '../waitList.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectorOWAService extends ConnectorService {\n  private graphClient: Client;\n\n  constructor(\n    globals: GlobalsService,\n    private messageService: MessageService,\n    private authService: AuthService,\n    private waitList: WaitListService\n  ) {\n    super(globals);\n    this.globals.curConnectorType = 'Owa';\n    this.globals.graphRequired = true;\n    if (authService.authenticated) {\n      this.globals.graphLoaded = true;\n      this.globals.curConnector = this;\n      this.initGraph();\n    } else {\n      this.waitForGraph().subscribe(() => {\n        this.initGraph();\n        this.globals.curConnector = this;\n      });\n    }\n    Office.context.mailbox.addHandlerAsync(\n      Office.EventType.ItemChanged,\n      this.itemChangeHandler.bind(this)\n    );\n  }\n\n  public waitForCSS(): Observable<\n    Record<ChangeableCSSNames, { [klass: string]: any }>\n  > {\n    return new Observable<Record<ChangeableCSSNames, { [klass: string]: any }>>(\n      (observer) => {\n        observer.complete();\n      }\n    );\n  }\n\n  public getData() {\n    console.log('--------------------');\n    console.log(this.appData);\n    return this.initGlobalValues();\n  }\n\n  public checkMailType() {\n    console.log('MAILTYPE');\n    console.log(Office.context.mailbox.item?.itemType);\n  }\n\n  set data(newVal: any) {\n    this.appData = newVal;\n    this.initGlobalValues();\n  }\n\n  get data() {\n    return this.appData;\n  }\n\n  set alreadyDocumented(val: Record<string, boolean>) {\n    if (val.ticketAlreadyDoc) {\n      this.postData.ticketAlreadyDoc = val.ticketAlreadyDoc;\n    }\n    if (val.officeAlreadyDoc) {\n      this.postData.officeAlreadyDoc = val.officeAlreadyDoc;\n    }\n    this.setOpenExtension(\n      this.postData.graphMailID as string,\n      this.postData.ticketAlreadyDoc,\n      this.postData.officeAlreadyDoc\n    );\n  }\n\n  get isMailAlreadyDoc() {\n    if (this.postData.ticketAlreadyDoc || this.postData.officeAlreadyDoc) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get curPostData() {\n    return this.postData;\n  }\n\n  protected async getPostData() {\n    if (Office.context.mailbox.item) {\n      const type = Office.CoercionType.Text;\n\n      console.log('?');\n      console.log(Office.context.mailbox.item);\n      console.log(Office.context.mailbox.item.body);\n      console.log(Office.context.mailbox.item.body.getTypeAsync);\n      if (Office.context.mailbox.item) {\n        Office.context.mailbox.item.body.getAsync(\n          type,\n          async (body: Office.AsyncResult<string>) => {\n            if (body.status === Office.AsyncResultStatus.Failed) {\n              this.messageService.showError(\n                body.error.message,\n                body.error.name,\n                true\n              );\n            } else {\n              this.postData = {\n                to: this.appData.to,\n                from: this.appData.from,\n                cc: this.appData.cc,\n                subject: this.appData.subject,\n                sender: this.appData.sender,\n                contentType: type,\n                body: body.value,\n                date: new Date(this.appData.dateTimeModified).getTime(),\n                messageID: this.appData.internetMessageId,\n                preview: '',\n                isIncoming: true,\n                attachments: [],\n                officeAlreadyDoc: false,\n                ticketAlreadyDoc: false,\n                graphMailID: '',\n              };\n              if (this.globals.graphLoaded) {\n                const res = await this.getMimeMessage();\n                console.log(\n                  'ME DATA -------------------------------------------------'\n                );\n                this.setAttachments(res.id);\n              } else {\n                this.waitForGraph().subscribe(async () => {\n                  const res = await this.getMimeMessage();\n                  console.log(\n                    'ME DATA -------------------------------------------------'\n                  );\n\n                  this.setAttachments(res.id);\n                });\n              }\n              console.log(this.postData);\n            }\n          }\n        );\n      }\n    }\n    return true;\n  }\n\n  protected adjustToastPosition() {\n    // Nothing to adjust\n  }\n\n  private async itemChangeHandler() {\n    window.location.reload();\n  }\n\n  private async checkDocumentedFlag(id: string) {\n    const res = await this.graphClient\n      .api(`/me/messages/${id}/extensions/GI8.BM`)\n      .responseType(ResponseType.RAW)\n      .get()\n      .then(async (resp) => {\n        if (resp.status === 404) {\n          this.setOpenExtension(id);\n        } else if (resp.status === 200) {\n          resp = await resp.json();\n          console.log(resp);\n          this.postData.officeAlreadyDoc = resp.officeAlreadyDoc;\n          this.postData.ticketAlreadyDoc = resp.ticketAlreadyDoc;\n        } else {\n          resp = await resp.json();\n          this.messageService.showError(\n            resp.error.message +\n              ' ' +\n              this.globals.languageConfLocal.graphRelog,\n            'GRAPH ERROR',\n            true\n          );\n        }\n      });\n  }\n\n  private async setOpenExtension(\n    id: string,\n    ticketIsDoc: boolean = false,\n    officeIsDoc: boolean = false\n  ) {\n    console.log('init extension');\n    const extension = {\n      '@odata.type': 'microsoft.graph.openTypeExtension',\n      extensionName: 'GI8.BM',\n      ticketAlreadyDoc: ticketIsDoc,\n      officeAlreadyDoc: officeIsDoc,\n    };\n\n    this.postData.officeAlreadyDoc = officeIsDoc;\n    this.postData.ticketAlreadyDoc = ticketIsDoc;\n\n    const res = await this.graphClient\n      .api(`/me/messages/${id}/extensions`)\n      .post(extension);\n    console.log(res);\n  }\n\n  private async getMimeMessage() {\n    let resp = null;\n    let res = await this.graphClient\n      .api('/me/messages')\n      .filter(`internetMessageId eq '${this.appData.internetMessageId}'`)\n      .get();\n    res = res.value;\n    if (Array.isArray(res) && res.length > 0) {\n      if (res.length >= 1) {\n        resp = res[0];\n      } else {\n        resp = res;\n      }\n    } else {\n      resp = res;\n    }\n    try {\n      this.checkDocumentedFlag(resp.id);\n      this.postData.graphMailID = resp.id;\n      console.log(resp);\n      this.postData.date = new Date(resp.sentDateTime).getTime();\n      this.postData.body = resp.body.content;\n      this.postData.contentType = resp.body.contentType;\n      this.postData.preview = resp.bodyPreview;\n      console.log('PREVIEW: ' + this.postData.preview);\n\n      const senderMail = resp.sender.emailAddress.address as string;\n      const userMail = Office.context.mailbox.userProfile\n        .emailAddress as string;\n      if (senderMail.toLowerCase() === userMail.toLowerCase()) {\n        this.postData.isIncoming = false;\n      } else {\n        this.postData.isIncoming = true;\n      }\n      console.log('ME DATA: ' + this.postData.contentType);\n    } catch (e) {\n      console.error(e);\n      resp = '';\n    }\n    return resp;\n  }\n\n  private async setAttachments(id: string) {\n    const res = await this.graphClient\n      .api('/me/messages/' + id + '/attachments')\n      .get();\n\n    console.log(\n      '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++RES RES RES'\n    );\n    console.log(res);\n\n    const attachments: any = [];\n\n    for (const attachment of res.value) {\n      if (this.globals.deleteAttachments && !attachment.isInline) {\n        // Ignore\n      } else {\n        attachments.push({\n          data: attachment.contentBytes,\n          name: attachment.name,\n          type: attachment.contentType,\n          cid: attachment.contentId,\n          inline: attachment.isInline as boolean,\n        });\n      }\n    }\n\n    this.postData.attachments = attachments;\n    console.log('ATTACHMENTS +++++++++++++++++++++++++++++++++++++++++++++++');\n    console.log(this.postData.attachments);\n  }\n\n  // Initialize the Graph client\n  private initGraph() {\n    this.graphClient = Client.init({\n      authProvider: async (done) => {\n        // Get the token from the auth service\n        const token = await this.authService\n          .getAccessToken()\n          .catch((reason) => {\n            done(reason, null);\n          });\n\n        if (token) {\n          done(null, token);\n        } else {\n          done('Could not get an access token', null);\n        }\n      },\n    });\n  }\n\n  private waitForGraph() {\n    return new Observable((observer) => {\n      this.waitList.addToWaitList('graphLoaded', observer);\n    });\n  }\n\n  private initGlobalValues() {\n    console.log('OFFICE OBJECT: >>>>>>>>>>>>>>>>>>>>>>>>>>>>');\n    console.log(Office.context);\n    console.log(Office.context.mailbox);\n    this.appData = Office.context.mailbox.item;\n    this.globals.curSubject = this.appData.subject;\n    this.globals.curMailUnid = this.appData.internetMessageId;\n    if (\n      this.appData.from.emailAddress.toLowerCase() ===\n      Office.context.mailbox.userProfile.emailAddress.toLowerCase()\n    ) {\n      console.log('11122');\n      console.log(this.appData.to);\n      this.globals.curMailAddr = this.appData.to[0].emailAddress;\n    } else {\n      console.log('22211');\n      this.globals.curMailAddr = this.appData.from.emailAddress;\n    }\n    this.globals.curTo = this.appData.to;\n    this.globals.curFrom = this.appData.from;\n    this.globals.curCC = this.appData.cc;\n    this.globals.curMailAddrCount =\n      this.appData.to.length + this.appData.cc.length;\n    this.globals.displayMailBody = false;\n\n    return this.getPostData();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChangeableCSSNames } from 'src/app/types/changeable-css-names.type';\nimport { ConnectionService } from '../connection.service';\nimport { GlobalsService } from '../globals.service';\nimport { MessageService } from '../message.service';\nimport { ConnectorService } from './connector.service';\nimport * as sanitizeHtml from 'sanitize-html';\nimport { TranslateService } from '@ngx-translate/core';\nimport { convert } from 'html-to-text';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectorVerseService extends ConnectorService {\n  constructor(\n    public translate: TranslateService,\n    public globals: GlobalsService,\n    private messageService: MessageService,\n    private connection: ConnectionService\n  ) {\n    super(globals);\n    this.adjustToastPosition();\n    this.globals.curConnectorType = 'Verse';\n    this.globals.curConnector = this;\n  }\n\n  public waitForCSS(): Observable<\n    Record<ChangeableCSSNames, { [klass: string]: any }>\n  > {\n    return new Observable<Record<ChangeableCSSNames, { [klass: string]: any }>>(\n      (observer) => {\n        const newCSS: Record<ChangeableCSSNames, { [klass: string]: any }> = {\n          main: {},\n          overflowContainer: {},\n        };\n        /*newCSS.overflowContainer = {\n          height: 'calc(100% - 40px)',\n        };*/\n        observer.next(newCSS);\n        observer.complete();\n      }\n    );\n  }\n\n  public getData() {\n    console.log('--------------------');\n    console.log(this.appData);\n  }\n\n  public checkMailType() {\n    // Ignore\n  }\n\n  set data(newVal: any) {\n    this.appData = newVal;\n    this.initGlobalValues();\n  }\n\n  get data() {\n    return this.appData;\n  }\n\n  set alreadyDocumented(val: Record<string, boolean>) {\n    // Ignore\n  }\n\n  get isMailAlreadyDoc() {\n    // Not implemented for Verse (Handled on backend)\n    return false;\n  }\n\n  get curPostData() {\n    return this.postData;\n  }\n\n  protected adjustToastPosition() {\n    this.messageService.changeClass('toast-bottom-center-verse');\n  }\n\n  protected async getPostData() {\n    this.connection.getReq('user', null, true).subscribe((resp) => {\n      console.log(resp);\n      console.log('Verse Data');\n      console.log(this.appData);\n      const context = this.appData.context;\n      // Replace <br> with newline\n      let body = '';\n      if (context.body) {\n        console.log('REPLACE BODY');\n        body = context.body.replace(/<br\\s*\\/?>/g, '\\n');\n      }\n      if (this.appData.actionId === 'com.ibm.verse.widget.action.mailRead') {\n        this.postData = {\n          to: context.recipientTo,\n          from: context.sender,\n          cc: context.recipientCC,\n          subject: context.subject,\n          sender: context.sender,\n          contentType: 'text/html',\n          body,\n          preview: convert(sanitizeHtml(body)),\n          date: new Date(context.timeSent).getTime(),\n          messageID: context.unid,\n          isIncoming:\n            resp.mail.toLowerCase() ===\n              context.sender.emailAddress.toLowerCase() ||\n            resp.mail.toLowerCase() ===\n              context.sender.notesAddress.toLowerCase()\n              ? false\n              : true,\n        };\n      } else if (this.appData.actionId === 'com.ibm.verse.ext.person.action') {\n        this.postData = {\n          to: [null],\n          from: context.profile.primaryEmail,\n          cc: [null],\n          subject: '',\n          sender: context.profile.primaryEmail,\n          contentType: 'text/html',\n          body,\n          preview: convert(sanitizeHtml(body)),\n          date: Date.now(),\n          messageID: 'no-unid',\n          isIncoming: false,\n        };\n      } else if (\n        this.appData.actionId === 'com.ibm.verse.widget.action.mailCompose'\n      ) {\n        this.postData = {\n          to: context.recipientTo,\n          from: context.sender,\n          cc: context.recipientCC,\n          subject: context.subject,\n          sender: context.sender,\n          contentType: 'text/html',\n          body,\n          preview: convert(sanitizeHtml(body)),\n          date: Date.now(),\n          messageID: 'no-unid',\n          isIncoming: false,\n        };\n      }\n      console.log('Verse Post Data');\n      console.log(this.postData);\n      return true;\n    });\n  }\n\n  private initGlobalValues() {\n    const context = this.appData.context;\n    console.log('INIT GLOBAL VALUES');\n    console.log(this.appData);\n    if (this.appData.actionId === 'com.ibm.verse.widget.action.mailRead') {\n      console.log('VERSE ACTION ALLOW');\n      this.globals.actionsAllowed = true;\n      this.globals.curSubject = context.subject;\n      this.globals.curMailUnid = context.unid;\n      if (this.globals.ownMailAddr === context.sender.emailAddress) {\n        this.globals.curMailAddr = context.recipientTo[0];\n      } else {\n        this.globals.curMailAddr = context.sender.emailAddress;\n      }\n      this.globals.curTo = context.recipientTo;\n      this.globals.curFrom = context.sender;\n      this.globals.curCC = context.recipientCC;\n      this.globals.curMailAddrCount =\n        context.recipientTo.length + context.recipientCC.length;\n    } else if (this.appData.actionId === 'com.ibm.verse.ext.person.action') {\n      console.log('VERSE ACTION ALLOW');\n      this.globals.actionsAllowed = false;\n      this.globals.curSubject = '';\n      this.globals.curMailUnid = 'no-unid';\n      this.globals.curMailAddr = context.profile.primaryEmail;\n      this.globals.curTo = [];\n      this.globals.curFrom = {\n        emailAddress: context.profile.primaryEmail,\n      };\n      this.globals.curCC = [];\n      this.globals.curMailAddrCount = 0;\n    } else if (\n      this.appData.actionId === 'com.ibm.verse.widget.action.mailCompose'\n    ) {\n      this.globals.actionsAllowed = false;\n      this.globals.createAllowed = true;\n      this.globals.curSubject = context.subject;\n      this.globals.curMailUnid = 'no-unid';\n      this.globals.curFrom = context.sender[0];\n      this.composeFilterMails(\n        context.recipientTo,\n        context.recipientCC,\n        context.sender[0]\n      );\n    }\n\n    return this.getPostData();\n  }\n\n  private composeFilterMails(\n    recipientTo: [Record<string, string>],\n    recipientCC: [Record<string, string>],\n    sender: Record<string, string>\n  ) {\n    const recipientToCount = recipientTo.length;\n    const ccCount = recipientCC.length;\n    const recipientCount = recipientToCount + ccCount;\n    if (recipientToCount < 1 && recipientCount > 0) {\n      // Please enter an email address in {FIELD} (To)\n      this.translate.get('LC53485').subscribe((text) => {\n        this.translate.get('LC73127').subscribe((replacer) => {\n          text = text.replace('{FIELD}', replacer);\n          this.messageService.showError(text);\n        });\n      });\n    } else if (recipientToCount < 1) {\n      // Invalid email address\n      this.translate.get('LC53484').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    } else if (\n      recipientCount === 1 &&\n      recipientTo[0].emailAddress.includes('@')\n    ) {\n      this.globals.curMailAddr = recipientTo[0].emailAddress;\n      console.log('ONE MAIL');\n      console.log(this.globals.curMailAddr);\n      this.globals.curTo = [];\n      this.globals.curCC = [];\n      this.globals.curMailAddrCount = 0;\n    } else {\n      // Multiple recipients\n      let error = false;\n      let tmpMail;\n\n      const mailsTo = [];\n      for (let i = 0; i < recipientToCount; i++) {\n        tmpMail = recipientTo[i];\n        if (!tmpMail.emailAddress.includes('@')) {\n          error = true;\n          continue;\n        }\n        mailsTo.push(tmpMail);\n      }\n      this.globals.curTo = mailsTo;\n\n      const mailsCC = [];\n      for (let i = 0; i < ccCount; i++) {\n        tmpMail = recipientCC[i];\n        if (!tmpMail.emailAddress.includes('@')) {\n          error = true;\n          continue;\n        }\n        mailsCC.push(tmpMail);\n      }\n      this.globals.curCC = mailsCC;\n\n      if (mailsTo.length > 0) {\n        this.globals.curMailAddr = recipientTo[0].emailAddress;\n      } else if (mailsCC.length > 0) {\n        this.globals.curMailAddr = recipientTo[0].emailAddress;\n      } else {\n        this.globals.curMailAddr = sender.emailAddress;\n      }\n\n      this.globals.curMailAddrCount = mailsTo.length + mailsCC.length;\n\n      if (error && mailsTo.length + mailsCC.length === 0) {\n        // Email address format not supported\n        this.translate.get('LC53486').subscribe((text) => {\n          this.messageService.showError(text);\n        });\n      }\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChangeableCSSNames } from 'src/app/types/changeable-css-names.type';\nimport { ConnectorTypesAlias } from 'src/app/types/connector.type';\nimport { DocumentPost } from 'src/app/types/document-post-interface';\nimport { DocumentedTypes } from 'src/app/types/documented.type';\nimport { GlobalsService } from '../globals.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class ConnectorService {\n  public postData: DocumentPost;\n  protected appData: any;\n\n  constructor(protected globals: GlobalsService) {}\n\n  public waitForConnectorType(): Observable<ConnectorTypesAlias> {\n    return new Observable<ConnectorTypesAlias>((observer) => {\n      if (this.globals.curConnectorType != null) {\n        observer.next(this.globals.curConnectorType);\n        observer.complete();\n      }\n    });\n  }\n\n  public get preview() {\n    return this.postData.preview;\n  }\n\n  public abstract waitForCSS(): Observable<\n    Record<ChangeableCSSNames, { [klass: string]: any }>\n  >;\n\n  public abstract getData(): void;\n\n  public abstract checkMailType(): void;\n\n  protected abstract adjustToastPosition(): void;\n\n  protected abstract getPostData(): Promise<any>;\n\n  public abstract set data(newVal: any);\n\n  public abstract get data(): any;\n\n  public abstract get curPostData(): any;\n\n  public abstract get isMailAlreadyDoc(): boolean;\n\n  public abstract set alreadyDocumented(val: Record<DocumentedTypes, boolean>);\n}\n","/* eslint-disable guard-for-in */\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CreationType } from '../types/creation.type';\nimport { MessageService } from './message.service';\nimport { SoapService } from './soap.service';\nimport { WebintLinkService } from './webint-link.service';\n\nconst userLanguage = navigator.language;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateAddressHandlerService {\n  private closeAll: any;\n  private searchResultData: any;\n\n  constructor(\n    public translate: TranslateService,\n    private messageService: MessageService,\n    private soapService: SoapService,\n    private webintLink: WebintLinkService\n  ) {}\n\n  public create(\n    addressValues: string,\n    displayedKeys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    contactsDB: string,\n    rows: number,\n    type: CreationType,\n    closeAllModal: any,\n    pointer?: string\n  ) {\n    this.closeAll = closeAllModal;\n    console.log(type);\n    switch (type) {\n      case 'company': {\n        this.handleCreateCompany(\n          addressValues,\n          displayedKeys,\n          fieldDisplayNameMap,\n          contactsDB,\n          rows\n        );\n        break;\n      }\n      case 'toCompany': {\n        this.handleCreateAddressToCompany(\n          addressValues,\n          displayedKeys,\n          fieldDisplayNameMap,\n          contactsDB,\n          rows,\n          pointer\n        );\n        break;\n      }\n      case 'person': {\n        this.handleCreatePrivatePerson(\n          addressValues,\n          displayedKeys,\n          fieldDisplayNameMap,\n          contactsDB,\n          rows\n        );\n        break;\n      }\n      default: {\n        this.translate.get('LC53496').subscribe((text) => {\n          this.messageService.showError(text);\n        });\n        break;\n      }\n    }\n  }\n\n  async replaceWithCompanyData(\n    addressValues: string,\n    displayedKeys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    rows: number,\n    pointer: string,\n    resp: any\n  ) {\n    const resultObj = await this.createResultObject(\n      addressValues,\n      displayedKeys,\n      fieldDisplayNameMap,\n      rows\n    );\n\n    this.searchResultData = await this.soapService.invokeSoap(\n      'GetAddressByID',\n      { fdme: pointer }\n    );\n    let result = this.searchResultData;\n    result = Object.keys(result);\n\n    if (result.length > 0) {\n      const companyData = result[0].split('~*~');\n      if (companyData != null) {\n        resultObj.Company = companyData[29];\n        resultObj.Address1 = companyData[10];\n        resultObj.Address2 = companyData[30];\n        resultObj.ZipCode = companyData[12];\n        resultObj.City = companyData[11];\n        //resultObj[\"ZipCode#City\"] = companyData[12] + \" \" + companyData[11];\n        resultObj.State = companyData[14];\n        resultObj.CountryToo = companyData[13];\n        resultObj.MainPhone = companyData[15];\n        resultObj.Fax = companyData[17];\n      }\n    }\n\n    resp.Company = resultObj.Company;\n    resp.Address1 = resultObj.Address1;\n    resp.Address2 = resultObj.Address2;\n    resp['ZipCode#City'] = resultObj.ZipCode + ' ' + resultObj.City;\n    resp.State = resultObj.State;\n    resp.CountryToo = resultObj.CountryToo;\n    resp.MainPhone = resultObj.MainPhone;\n    resp.Fax = resultObj.Fax;\n\n    return resp;\n  }\n\n  // Creates Object with addressdata of new contact\n  async createResultObject(\n    addressValues: string,\n    keys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    rows: number\n  ) {\n    console.log(addressValues);\n    console.log(keys);\n    console.log(fieldDisplayNameMap);\n    console.log(rows);\n    const resultObj: any = {};\n    const values = addressValues.split('\\n');\n\n    let field = null;\n    let subFields = null;\n    let subValues = null;\n    let value = null;\n\n    values.length = rows;\n\n    // You have multiple values for {DUPLICATE}\n    let errorText = '';\n\n    this.translate.get('LC53497').subscribe((text) => {\n      errorText = text;\n    });\n\n    for (const i in keys) {\n      console.log(i);\n      console.log(keys);\n      field = keys[i];\n\n      if (values[i] != null) {\n        if (field != null && Number(i) < values.length) {\n          if (field.includes('#') && values[i].length > 0) {\n            subFields = field.split('#');\n            subValues = values[i].split(' ');\n\n            console.log('SubFields');\n            console.log(subFields);\n            console.log('SubValues');\n            console.log(subValues);\n\n            for (const j in subFields) {\n              if (Number(j) < subValues.length) {\n                // Shows error if duplicate keys with different values are present\n                if (\n                  resultObj[subFields[j]] != null &&\n                  resultObj[subFields[j]] !== subValues[j]\n                ) {\n                  errorText = errorText.replace(\n                    '{DUPLICATE}',\n                    fieldDisplayNameMap.get(subFields[j]) as string\n                  );\n                  this.messageService.showError(errorText);\n                  return;\n                } else {\n                  if (subValues[j] != null) {\n                    subValues[j] = subValues[j].trim();\n                  }\n                  resultObj[subFields[j]] = subValues[j];\n                }\n              }\n            }\n          } else {\n            if (values[i].length > 0 && values[i].trim().length > 0) {\n              value = values[i].trim();\n\n              if (keys[i].length > 0) {\n                if (\n                  resultObj[keys[i]] != null &&\n                  resultObj[keys[i]].localeCompare(value) !== 0\n                ) {\n                  errorText = errorText.replace(\n                    '{DUPLICATE}',\n                    fieldDisplayNameMap.get(keys[i]) as string\n                  );\n                  this.messageService.showError(errorText);\n                  return;\n                }\n                resultObj[keys[i]] = value;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    console.log(resultObj);\n    return resultObj;\n  }\n\n  async handleCreateCompany(\n    addressValues: string,\n    keys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    contactsDB: string,\n    rows: number\n  ) {\n    const resultObj = await this.createResultObject(\n      addressValues,\n      keys,\n      fieldDisplayNameMap,\n      rows\n    );\n\n    console.log(resultObj);\n    console.log(resultObj.Company);\n    console.log(resultObj.Company == null);\n    console.log(resultObj.Company === '');\n\n    if (resultObj.Company == null || resultObj.Company === '') {\n      // The field '{FIELDNAME}' is a required field.\n      this.translate.get('LC73202').subscribe((text) => {\n        text = text.replace('{FIELDNAME}', fieldDisplayNameMap.get('Company'));\n        this.messageService.showError(text);\n      });\n      return;\n    }\n\n    let query = '';\n    for (const key in resultObj) {\n      query += '~*~' + key + '~#~' + resultObj[key];\n    }\n\n    // Add Company to start\n    query = '~*~' + resultObj.Company + query;\n\n    // Add trailing data\n    query += '~*~fdCorreType~#~GeMain';\n    query += '~*~fdIsNewDoc~#~0';\n    query += '~*~AddressSynch~#~0';\n\n    const soapObj: any = {};\n    soapObj.addressData = query;\n    soapObj.contactsPath = '$' + contactsDB;\n    soapObj.targetCompanyId = '';\n    if (Array.isArray(userLanguage) && userLanguage.length > 0) {\n      soapObj.languageCode = userLanguage[0];\n    } else {\n      soapObj.languageCode = userLanguage;\n    }\n\n    console.log(soapObj);\n\n    let result;\n    try {\n      result = await this.soapService.invokeSoap(\n        'CreateAddresses',\n        soapObj,\n        true\n      );\n    } catch (e) {\n      this.messageService.showError(e.message);\n      return;\n    }\n\n    const resultKeys = Object.keys(result);\n\n    if (resultKeys.length === 1) {\n      window.open(this.webintLink.convertToLink(resultKeys[0]), '_blank');\n      //reload();\n      //openInWebInt(resultKeys[0]);\n      this.closeAll();\n    } else {\n      // Could not create address\n      this.translate.get('LC53496').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n  }\n\n  async handleCreateAddressToCompany(\n    addressValues: string,\n    keys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    contactsDB: string,\n    rows: number,\n    pointer?: string\n  ) {\n    if (!pointer) {\n      // Could not create address\n      this.translate.get('LC53496').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n      return;\n    }\n\n    const resultObj = await this.createResultObject(\n      addressValues,\n      keys,\n      fieldDisplayNameMap,\n      rows\n    );\n\n    // Replaces posted data with company data\n    let result = this.searchResultData;\n    result = Object.keys(result);\n    if (result.length > 0) {\n      const companyData = result[0].split('~*~');\n      if (companyData != null) {\n        resultObj.Company = companyData[29];\n        resultObj.Address1 = companyData[10];\n        resultObj.Address2 = companyData[30];\n        resultObj.ZipCode = companyData[12];\n        resultObj.City = companyData[11];\n        //resultObj[\"ZipCode#City\"] = companyData[12] + \" \" + companyData[11];\n        resultObj.State = companyData[14];\n        resultObj.CountryToo = companyData[13];\n        if (\n          resultObj.MainPhone == null ||\n          resultObj.MainPhone.localeCompare('') === 0\n        ) {\n          resultObj.MainPhone = companyData[15];\n        }\n        if (resultObj.Fax == null || resultObj.Fax.localeCompare('') === 0) {\n          resultObj.Fax = companyData[17];\n        }\n      }\n    }\n\n    if (\n      resultObj.LastName == null ||\n      resultObj.LastName.localeCompare('') === 0\n    ) {\n      // The field '{FIELDNAME}' is a required field.\n      this.translate.get('LC73202').subscribe((text) => {\n        text = text.replace('{FIELDNAME}', fieldDisplayNameMap.get('LastName'));\n        this.messageService.showError(text);\n      });\n      return;\n    }\n\n    let query = '';\n    for (const key in resultObj) {\n      query += '~*~' + key + '~#~' + resultObj[key];\n    }\n\n    // Add Company to start (Empty on create address to company)\n    query = '~*~' + query;\n\n    // Add trailing data\n    query += '~*~AddressSynch~#~1';\n\n    const soapObj: any = {};\n    soapObj.addressData = query;\n    soapObj.contactsPath = '$' + contactsDB;\n    soapObj.targetCompanyId = pointer;\n    if (Array.isArray(userLanguage) && userLanguage.length > 0) {\n      soapObj.languageCode = userLanguage[0];\n    } else {\n      soapObj.languageCode = userLanguage;\n    }\n\n    let resp;\n    try {\n      resp = await this.soapService.invokeSoap(\n        'CreateAddresses',\n        soapObj,\n        true\n      );\n    } catch (e) {\n      this.messageService.showError(e.message);\n      return;\n    }\n\n    const resultKeys = Object.keys(resp);\n\n    if (resultKeys.length === 1) {\n      window.open(this.webintLink.convertToLink(resultKeys[0]), '_blank');\n    } else {\n      // Could not create address\n      this.translate.get('LC53496').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n\n    this.closeAll();\n  }\n\n  // Needs to use a reference of the class instead of this, as it is called as a callback\n  async handleCreatePrivatePerson(\n    addressValues: string,\n    keys: string[],\n    fieldDisplayNameMap: Map<string, string>,\n    contactsDB: string,\n    rows: number\n  ) {\n    const resultObj = await this.createResultObject(\n      addressValues,\n      keys,\n      fieldDisplayNameMap,\n      rows\n    );\n\n    delete resultObj.Company;\n\n    if (\n      resultObj.LastName == null ||\n      resultObj.LastName.localeCompare('') === 0\n    ) {\n      // The field '{FIELDNAME}' is a required field.\n      this.translate.get('LC73202').subscribe((text) => {\n        text = text.replace('{FIELDNAME}', fieldDisplayNameMap.get('LastName'));\n        this.messageService.showError(text);\n      });\n      return;\n    }\n\n    let query = '~*~';\n    for (const key in resultObj) {\n      query += '~*~' + key + '~#~' + resultObj[key];\n    }\n\n    // Add trailing data\n    query += '~*~fdCorreType~#~GeMain';\n    query += '~*~fdIsNewDoc~#~0';\n    query += '~*~AddressSynch~#~0';\n\n    const soapObj: any = {};\n    soapObj.addressData = query;\n    soapObj.contactsPath = '$' + contactsDB;\n    soapObj.targetCompanyId = '';\n    if (Array.isArray(userLanguage) && userLanguage.length > 0) {\n      soapObj.languageCode = userLanguage[0];\n    } else {\n      soapObj.languageCode = userLanguage;\n    }\n\n    let result;\n    try {\n      result = await this.soapService.invokeSoap(\n        'CreateAddresses',\n        soapObj,\n        true\n      );\n    } catch (e) {\n      this.messageService.showError(e.message);\n      return;\n    }\n\n    const resultKeys = Object.keys(result);\n\n    if (resultKeys.length === 1) {\n      window.open(this.webintLink.convertToLink(resultKeys[0]), '_blank');\n    } else {\n      // Could not create address\n      this.translate.get('LC53496').subscribe((text) => {\n        this.messageService.showError(text);\n      });\n    }\n    this.closeAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { GlobalsService } from './globals.service';\nimport CreateAddressItems from '../otherClasses/create-address-items.class';\nimport { iconDefaultConfig } from '../otherClasses/config-items-default.class';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateAddressService {\n  private createInstance: CreateAddressItems;\n  private subscribers: Subscriber<boolean>[];\n  private open: boolean;\n  private configData = iconDefaultConfig;\n\n  constructor(private globals: GlobalsService) {\n    this.subscribers = [];\n    this.createInstance = new CreateAddressItems();\n    this.open = false;\n  }\n\n  public connect() {\n    return new Observable<boolean>((observer) => {\n      this.subscribers.push(observer);\n      observer.next(this.globals.isCreateBlockOpen);\n    });\n  }\n\n  public updateObservers() {\n    const curState = this.globals.isCreateBlockOpen;\n    for (const sub of this.subscribers) {\n      sub.next(curState);\n    }\n  }\n\n  public toggleOpen() {\n    this.open = !this.open;\n    if (this.isOpen) {\n      this.configData[2].model.value = '1';\n    } else {\n      this.configData[2].model.value = '';\n    }\n    this.globals.createAddressToggle();\n    this.updateObservers();\n  }\n\n  get items() {\n    return this.createInstance.items;\n  }\n\n  get isOpen() {\n    return this.open;\n  }\n\n  set config(data: typeof iconDefaultConfig) {\n    this.configData = data;\n  }\n}\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConnectionService } from './connection.service';\nimport { GlobalsService } from './globals.service';\nimport { LoaderService } from './loader.service';\nimport { MessageService } from './message.service';\nimport { ReloadService } from './reload.service';\nimport { WebintLinkService } from './webint-link.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocumentService {\n  public text: string;\n  private allowDuplicate: boolean;\n\n  constructor(\n    public translate: TranslateService,\n    private globals: GlobalsService,\n    private loader: LoaderService,\n    private connectionService: ConnectionService,\n    private messageService: MessageService,\n    private webInt: WebintLinkService,\n    private reloadService: ReloadService\n  ) {\n    this.allowDuplicate = false;\n  }\n\n  public documentHandler(\n    data: any,\n    pointer: string,\n    officeDB: string,\n    modalRef: any\n  ) {\n    if (this.globals.curConnectorType === 'Owa') {\n      this.documentOWA(data, pointer, officeDB, modalRef);\n    } else {\n      this.documentVerse(data, pointer, officeDB, modalRef);\n    }\n  }\n\n  public resetAllowDuplicate() {\n    this.allowDuplicate = false;\n  }\n\n  private documentVerse(\n    data: any,\n    pointer: string,\n    officeDB: string,\n    modalRef: any\n  ) {\n    let command = 'store';\n\n    if (this.globals.deleteAttachments) {\n      command = 'storedelattach';\n    }\n\n    console.log('Verse');\n    console.log(data);\n    console.log(pointer);\n    console.log(officeDB);\n\n    let params = new HttpParams();\n    params = params.set('unid', data.messageID);\n    params = params.set('pointer', pointer);\n    params = params.set('office', officeDB);\n    params = params.set('command', command);\n\n    if (this.allowDuplicate) {\n      params = params.set('allow-duplicate', 'true');\n    }\n\n    this.connectionService\n      .postReq('document', params, false, {\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .subscribe({\n        next: (result: any) => {\n          console.log(result);\n          if (result == null || result === '') {\n            this.translate.get('LC53488').subscribe((text) => {\n              this.allowDuplicate = false;\n              this.loader.forceDeactivateLoader();\n              this.messageService.showError(text);\n            });\n            return;\n          } else {\n            this.allowDuplicate = false;\n            console.log(result);\n            this.loader.activateLoader(true, true);\n            this.translate.get('LC73236').subscribe((text) => {\n              this.messageService.showSuccess(text);\n              modalRef.closeAll();\n            });\n            if (this.globals.openMail) {\n              params = new HttpParams();\n              params.set('openDocument', result);\n              window.open(this.webInt.convertToLink(result), '_blank');\n            }\n            console.log(result);\n            this.reloadService.reload();\n            modalRef.closeAll();\n            this.loader.forceDeactivateLoader();\n          }\n        },\n        error: (errHttp) => {\n          console.log(errHttp);\n          console.log('VERSE ERROR');\n          this.allowDuplicate = false;\n          if (errHttp.status === 409) {\n            console.log('IS 409');\n            this.translate.get('LC73006').subscribe((text) => {\n              this.messageService.showError(text);\n              this.text = text;\n              modalRef.text = text;\n              this.allowDuplicate = true;\n              return;\n            });\n          } else if (errHttp.status !== 200) {\n            console.log('IS NOT 409');\n            this.translate.get('LC73235').subscribe((text) => {\n              this.messageService.showError(text);\n            });\n            this.messageService.showError(errHttp.statusText);\n            return;\n          }\n          this.loader.forceDeactivateLoader();\n        },\n        complete: () => {\n          // Do nothing\n        },\n      });\n  }\n\n  private documentOWA(\n    data: any,\n    pointer: string,\n    officeDB: string,\n    modalRef: any\n  ) {\n    this.connectionService\n      .postReq(\n        'convert',\n        'data=' + encodeURIComponent(JSON.stringify(data)),\n        false,\n        {\n          headers: {\n            'content-type': 'application/x-www-form-urlencoded',\n          },\n        }\n      )\n      .subscribe({\n        next: (result: any) => {\n          console.log('RESULT CONVERT');\n          console.log(result);\n          if (result == null || result === '') {\n            this.translate.get('LC53488').subscribe((text) => {\n              this.loader.forceDeactivateLoader();\n              this.messageService.showError(text);\n            });\n            return;\n          } else {\n            this.loader.activateLoader(true, true);\n            const unid = result;\n            let command = 'store';\n\n            if (this.globals.deleteAttachments) {\n              command = 'storedelattach';\n            }\n\n            let params = new HttpParams();\n            params = params.set('unid', unid);\n            params = params.set('pointer', pointer);\n            params = params.set('office', officeDB);\n            params = params.set('command', command);\n            params = params.set('origUnid', this.globals.curMailUnid);\n            if (this.allowDuplicate) {\n              params = params.set('allow-duplicate', 'true');\n            }\n            console.log(result);\n            console.log('RESULT CONVERT END, NEW POST');\n            this.connectionService.postReq('convert', params, false).subscribe({\n              next: (res: any) => {\n                console.log(res);\n                this.loader.activateLoader(true, true);\n                this.translate.get('LC73236').subscribe((text) => {\n                  this.globals.curConnector.alreadyDocumented = {\n                    officeAlreadyDoc: true,\n                    ticketAlreadyDoc:\n                      this.globals.curConnector.curPostData.ticketAlreadyDoc,\n                  };\n                  this.messageService.showSuccess(text);\n                });\n                if (this.globals.openMail) {\n                  params = new HttpParams();\n                  params.set('openDocument', res);\n                  window.open(this.webInt.convertToLink(res), '_blank');\n                }\n                console.log(res);\n                this.reloadService.reload();\n                modalRef.closeAll();\n                this.loader.forceDeactivateLoader();\n              },\n              error: (errHttp) => {\n                this.loader.forceDeactivateLoader();\n                console.log('CONVERT FAILED!');\n                console.log(errHttp);\n                if (errHttp.status === 409) {\n                  this.translate.get('LC73006').subscribe((text) => {\n                    this.messageService.showError(text);\n                    this.text = text;\n                    modalRef.text = text;\n                    this.allowDuplicate = true;\n                    this.globals.curConnector.alreadyDocumented = {\n                      officeAlreadyDoc: true,\n                      ticketAlreadyDoc:\n                        this.globals.curConnector.curPostData.ticketAlreadyDoc,\n                    };\n                    return;\n                  });\n                } else if (errHttp.status !== 200) {\n                  this.translate.get('LC73235').subscribe((text) => {\n                    this.messageService.showError(text);\n                  });\n                  this.messageService.showError(errHttp.statusText);\n                  return;\n                }\n              },\n              complete: () => {\n                // Do nothing\n              },\n            });\n          }\n        },\n        error: (errHttp) => {\n          this.messageService.showError(errHttp.statusText);\n          this.loader.forceDeactivateLoader();\n          modalRef.closeAll();\n          console.log(errHttp);\n        },\n        complete: () => {\n          // Do nothing\n        },\n      });\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { WebintInputService } from './webint-input.service';\nimport { WaitListService } from './waitList.service';\nimport { Observable, Subscriber } from 'rxjs';\nimport { ConnectorTypesAlias } from '../types/connector.type';\nimport { ConnectorService } from './connectors/connector.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalsService {\n  readonly apiOverviewPath = 'restBM.xsp/verserest/';\n\n  private webIntRelativeStart: string;\n  private currentWebInt: string;\n  private webIntUrl: URL;\n  private mailAddr: string;\n  private mailUnid: string;\n  private optionsObj: { [key: string]: any };\n  private lcs: Record<string, string>;\n  private lcsLocal: Record<string, string>;\n  private rippleColorRGBA: string;\n  private createAddressOpen: boolean;\n  private subject: string;\n  private cc: Record<string, string>[];\n  private from: Record<string, string>;\n  private to: Record<string, string>[];\n  private mailAddrCount: number;\n  private ownMail: string;\n  private resetMailAddr: string;\n  private showMailBody: boolean;\n  private connectorType: ConnectorTypesAlias;\n  private connector: ConnectorService;\n  private graphReq: boolean;\n  private graphLoad: boolean;\n  private openEMail: boolean;\n  private deleteAttach: boolean;\n  private allowActions: boolean;\n  private allowCreate: boolean;\n\n  private loginWindowOpen: boolean;\n\n  // Use cache while modal is open - get current result if new (first) modal is opened\n  private modalSessionCache: boolean;\n\n  // Modal globals (Temporary - as long as modal is opened)\n  private selectedContacts: string | null;\n\n  constructor(private waitListService: WaitListService) {\n    this.currentWebInt = '';\n    if (window.localStorage.getItem('webInt') != null) {\n      this.currentWebInt = window.localStorage.getItem('webInt') as string;\n    }\n    this.mailAddr = '';\n    this.mailUnid = '';\n    this.subject = '';\n    this.resetMailAddr = '';\n    this.cc = [];\n    this.to = [];\n    this.from = {};\n    this.mailAddrCount = 0;\n    if (this.currentWebInt) {\n      this.webIntUrl = new URL(this.currentWebInt);\n    }\n    this.webIntRelativeStart = this.webInt + this.apiOverviewPath;\n    this.lcs = {};\n    this.lcsLocal = {};\n    this.selectedContacts = null;\n    this.modalSessionCache = false;\n    this.rippleColorRGBA = 'rgba(154, 169, 255, 0.1)';\n    this.createAddressOpen = false;\n    this.ownMail = '';\n    this.showMailBody = true;\n    this.connectorType = null;\n    this.allowActions = false;\n    this.allowCreate = false;\n\n    this.optionsObj = {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n    };\n  }\n\n  public set loginOpen(val: boolean) {\n    this.loginWindowOpen = val;\n  }\n\n  public get loginOpen() {\n    return this.loginWindowOpen;\n  }\n\n  public set actionsAllowed(val: boolean) {\n    this.allowActions = val;\n  }\n\n  public get actionsAllowed() {\n    return this.allowActions;\n  }\n\n  public set createAllowed(val: boolean) {\n    this.allowCreate = val;\n  }\n\n  public get createAllowed() {\n    return this.allowCreate;\n  }\n\n  public set openMail(val: boolean) {\n    this.openEMail = val;\n  }\n\n  public get openMail() {\n    return this.openEMail;\n  }\n\n  public set deleteAttachments(val: boolean) {\n    this.deleteAttach = val;\n  }\n\n  public get deleteAttachments() {\n    return this.deleteAttach;\n  }\n\n  public set curConnectorType(val: ConnectorTypesAlias) {\n    this.connectorType = val;\n  }\n\n  public get curConnectorType() {\n    return this.connectorType;\n  }\n\n  public set curConnector(val: ConnectorService) {\n    this.connector = val;\n  }\n\n  public get curConnector() {\n    return this.connector;\n  }\n\n  public set graphRequired(val: boolean) {\n    this.graphReq = val;\n    for (const entry of this.waitListService.accessWaitList('graphRequired')) {\n      entry.next(val);\n      entry.complete();\n    }\n  }\n\n  public get graphRequired() {\n    return this.graphReq;\n  }\n\n  public set graphLoaded(val: boolean) {\n    this.graphLoad = val;\n    for (const entry of this.waitListService.accessWaitList('graphLoaded')) {\n      entry.next(val);\n      entry.complete();\n    }\n  }\n\n  public get graphLoaded() {\n    return this.graphLoad;\n  }\n\n  public get isCreateBlockOpen() {\n    return this.createAddressOpen;\n  }\n\n  public get rippleColor() {\n    return this.rippleColorRGBA;\n  }\n\n  public set webInt(value: string) {\n    this.currentWebInt = value;\n    this.webIntUrl = new URL(this.currentWebInt);\n    if (this.currentWebInt != null && this.currentWebInt !== '') {\n      this.notifyWaitList();\n    }\n  }\n\n  public get webInt() {\n    return this.currentWebInt;\n  }\n\n  public set displayMailBody(val: boolean) {\n    this.showMailBody = val;\n  }\n\n  public get displayMailBody() {\n    return this.showMailBody;\n  }\n\n  public set curMailAddr(value: string) {\n    if (this.resetMailAddr === '') {\n      this.resetMailAddr = value;\n    }\n    this.mailAddr = value;\n    this.waitListService.resolveFuncWaitList('mailAddr');\n  }\n\n  public get curMailAddr() {\n    return this.mailAddr;\n  }\n\n  public get startMailAddr() {\n    return this.resetMailAddr;\n  }\n\n  public set curSubject(value: string) {\n    this.subject = value;\n  }\n\n  public get curSubject() {\n    return this.subject;\n  }\n\n  public set curCC(value: Record<string, string>[]) {\n    this.cc = value;\n  }\n\n  public get curCC() {\n    return this.cc;\n  }\n\n  public set curTo(value: Record<string, string>[]) {\n    this.to = value;\n  }\n\n  public get curTo() {\n    return this.to;\n  }\n\n  public set curFrom(value: Record<string, string>) {\n    this.from = value;\n  }\n\n  public get curFrom() {\n    return this.from;\n  }\n\n  public set curMailAddrCount(value: number) {\n    this.mailAddrCount = value;\n  }\n\n  public get curMailAddrCount() {\n    return this.mailAddrCount;\n  }\n\n  public set curMailUnid(value: string) {\n    this.mailUnid = value;\n  }\n\n  public get curMailUnid() {\n    return this.mailUnid;\n  }\n\n  public get origin() {\n    return this.webIntUrl.origin;\n  }\n\n  public get requestWebInt() {\n    return this.webIntRelativeStart;\n  }\n\n  public get options() {\n    return this.optionsObj;\n  }\n\n  public get languageConf() {\n    return this.lcs;\n  }\n\n  public set languageConf(newLCs: Record<string, string>) {\n    this.lcs = newLCs;\n  }\n\n  public set ownMailAddr(mail: string) {\n    this.ownMail = mail;\n  }\n\n  public waitForlanguageConfLocal() {\n    return new Observable((observer) => {\n      if (this.lcsLocal !== {}) {\n        observer.next(this.lcsLocal);\n        observer.complete();\n      } else {\n        this.waitListService.addToWaitList('localLC', observer);\n      }\n    });\n  }\n\n  public set languageConfLocal(newLCs: Record<string, string>) {\n    this.lcsLocal = newLCs;\n  }\n\n  public get languageConfLocal() {\n    return this.lcsLocal;\n  }\n\n  public get currentContactsDB() {\n    return this.selectedContacts;\n  }\n\n  public set currentContactsDB(newContactsDB: string | null) {\n    this.selectedContacts = newContactsDB;\n  }\n\n  public get modalCacheFlag() {\n    return this.modalSessionCache;\n  }\n\n  public set modalCacheFlag(flag: boolean) {\n    this.modalSessionCache = flag;\n  }\n\n  public languageEntry(key: string) {\n    return this.lcs[key];\n  }\n\n  public changeGlobalOptions(newObj: { [key: string]: any }): {\n    [key: string]: any;\n  } {\n    return this.changeOptionsObj(newObj, this.optionsObj);\n  }\n\n  public changeOwnOptions(newObj: { [key: string]: any }): {\n    [key: string]: any;\n  } {\n    const ownOptions: { [key: string]: any } = {};\n    Object.assign(ownOptions, this.optionsObj);\n\n    return this.changeOptionsObj(newObj, ownOptions);\n  }\n\n  public objectWithParams(params: HttpParams) {\n    let newObject: Record<string, any> = {};\n    newObject = Object.assign(newObject, this.options);\n    newObject.params = params;\n    return newObject;\n  }\n\n  public clearTemps() {\n    this.clearModalTemps();\n  }\n\n  public clearModalTemps() {\n    this.currentContactsDB = null;\n  }\n\n  public createAddressToggle() {\n    this.createAddressOpen = !this.createAddressOpen;\n  }\n\n  public waitForWebInt(observer: Subscriber<boolean>) {\n    this.waitListService.addToWaitList('webInt', observer);\n  }\n\n  private notifyWaitList() {\n    for (const sub of this.waitListService.accessWaitList('webInt')) {\n      sub.next(this.webInt);\n      sub.complete();\n    }\n    this.waitListService.clearWaitList('webInt');\n  }\n\n  private changeOptionsObj(\n    newObj: { [key: string]: any },\n    optionsToChange: { [key: string]: any }\n  ): { [key: string]: any } {\n    const map: Map<string, any> = new Map(Object.entries(newObj));\n    map.forEach((value: any, key: string) => {\n      optionsToChange[key] = value;\n    });\n    return optionsToChange;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalsService } from './globals.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageService {\n  constructor(private globals: GlobalsService) {}\n\n  public getImgUrl(pathComp: string) {\n    return this.globals.webInt + pathComp;\n  }\n\n  public getViewImgFileName(viewImgID: number) {\n    return 'vwicn' + viewImgID.toString().padStart(3, '0') + '.png';\n  }\n\n  public getViewIconUrl(viewImgID: number) {\n    return this.getImgUrl(this.getViewImgFileName(viewImgID));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WaitListService } from './waitList.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InitService {\n  private isInit: boolean;\n\n  constructor(private waitList: WaitListService) {\n    this.isInit = false;\n  }\n\n  set initComplete(newVal: boolean) {\n    this.isInit = newVal;\n    if (newVal) {\n      this.informWaitList();\n    }\n  }\n\n  get initComplete() {\n    return this.isInit;\n  }\n\n  public waitForInit() {\n    return new Observable<boolean>((observer) => {\n      observer.next(this.isInit);\n      if (!this.isInit) {\n        this.waitList.addToWaitList('init', observer);\n      } else {\n        observer.complete();\n        this.informWaitList();\n      }\n    });\n  }\n\n  private informWaitList() {\n    const subs = this.waitList.accessWaitList('init');\n    for (const sub of subs) {\n      sub.next(this.initComplete);\n      if (this.initComplete) {\n        sub.complete();\n      }\n    }\n    this.waitList.clearWaitList('init');\n  }\n}\n","import { Injectable, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InputToolsService {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  public sanitizeInput(input: string, type: SecurityContext): string | null {\n    return this.sanitizer.sanitize(type, input);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConnectionService } from './connection.service';\nimport { GlobalsService } from './globals.service';\nimport { WaitListService } from './waitList.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LanguageService {\n  private loaded: boolean;\n\n  constructor(\n    private global: GlobalsService,\n    private waitList: WaitListService,\n    private http: HttpClient,\n    private globals: GlobalsService,\n    public connectionService: ConnectionService\n  ) {\n    this.loaded = false;\n    connectionService.waitForLC().subscribe(() => {\n      this.loaded = true;\n      this.processLCWaitingList();\n    });\n    this.setLCSLocal();\n  }\n\n  public waitForInit() {\n    return new Observable<boolean>((observer) => {\n      if (this.loaded) {\n        observer.next(true);\n        observer.complete();\n        this.processLCWaitingList();\n      } else {\n        this.waitList.addToWaitList('lc', observer);\n      }\n    });\n  }\n\n  public getLCEntry(lc: number, toReplace?: string, replaceString?: string) {\n    return this.replacePlaceholder(\n      this.global.languageEntry('LC' + lc),\n      toReplace,\n      replaceString\n    );\n  }\n\n  public passLCObj() {\n    return this.global.languageConf;\n  }\n\n  public getLang() {\n    const userLang = navigator.language.toLowerCase();\n    if (userLang.startsWith('de')) {\n      return 'de';\n    } else {\n      return 'en';\n    }\n  }\n\n  public setLCSLocal() {\n    this.http\n      .get('assets/i18n/' + this.getLang() + '.json')\n      .subscribe((resp) => {\n        this.globals.languageConfLocal = resp as Record<string, string>;\n        this.localLCReady();\n      });\n  }\n\n  public localLCReady() {\n    for (const sub of this.waitList.accessWaitList('localLC')) {\n      sub.next(this.globals.languageConfLocal);\n      sub.complete();\n    }\n  }\n\n  private processLCWaitingList() {\n    console.log('------ Process wait list');\n    this.waitList.accessWaitList('lc').forEach((observer) => {\n      observer.next();\n      observer.complete();\n    });\n  }\n\n  private replacePlaceholder(\n    text: string,\n    toReplace?: string,\n    replaceString?: string\n  ) {\n    if (toReplace && replaceString) {\n      text = text.replace(toReplace, replaceString);\n    }\n    return text;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { GlobalsService } from './globals.service';\nimport { InitService } from './init.service';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderService {\n  private loaderCompSubscriber: Subscriber<any>;\n  private isInit: boolean;\n  private initServiceInit: boolean;\n  private forceOpen: boolean;\n  private loaderTimeout: NodeJS.Timeout | null;\n  private isActive: boolean;\n\n  constructor(\n    private init: InitService,\n    private messageService: MessageService,\n    private globals: GlobalsService\n  ) {\n    this.isInit = false;\n    this.initServiceInit = false;\n    this.init.waitForInit().subscribe((resp) => {\n      this.initServiceInit = resp;\n      this.deactivateLoader();\n    });\n    this.forceOpen = false;\n    this.loaderTimeout = null;\n    this.isActive = false;\n  }\n\n  deactivateLoaderAfterTimeout() {\n    if (this.isActive) {\n      this.loaderTimeout = setTimeout(() => {\n        this.forceDeactivateLoader();\n      }, 5000);\n    }\n  }\n\n  activateLoader(isModal: boolean, forceOpen?: boolean) {\n    if (!this.globals.loginOpen) {\n      this.clearTimeout();\n      this.deactivateLoaderAfterTimeout();\n    }\n    if (forceOpen) {\n      this.isActive = true;\n      this.forceOpen = forceOpen;\n    }\n    if (this.isInit) {\n      this.isActive = true;\n      this.loaderCompSubscriber.next({\n        activate: true,\n        modal: isModal,\n      });\n    }\n  }\n\n  clearTimeout() {\n    this.messageService.clearConnectionTimeout();\n    if (this.loaderTimeout) {\n      clearTimeout(this.loaderTimeout);\n      this.loaderTimeout = null;\n    }\n  }\n\n  deactivateLoader() {\n    if (this.isInit && this.initServiceInit && !this.forceOpen) {\n      this.isActive = false;\n      if (!this.globals.loginOpen) {\n        this.clearTimeout();\n      }\n      this.messageService.clearConnectionTimeout();\n      this.loaderCompSubscriber.next({\n        activate: false,\n      });\n    }\n  }\n\n  forceDeactivateLoader() {\n    this.isActive = false;\n    if (!this.globals.loginOpen) {\n      this.clearTimeout();\n    }\n    this.forceOpen = false;\n    this.loaderCompSubscriber.next({\n      activate: false,\n    });\n  }\n\n  connectToService() {\n    return new Observable<any>((observer) => {\n      this.loaderCompSubscriber = observer;\n      this.isInit = true;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { GlobalsService } from './globals.service';\n\nconst TIMEOUT_IN_MS = 5000;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  private defaultTitle: string;\n  private connectionTimeout: NodeJS.Timeout | null;\n\n  private toastrObj = {\n    timeOut: 3000,\n    positionClass: 'toast-bottom-center',\n    preventDuplicates: true,\n    progressBar: true,\n    closeButton: true,\n    maxOpen: 0,\n    newestOnTop: false,\n  };\n\n  constructor(private toastr: ToastrService, private globals: GlobalsService) {\n    this.defaultTitle = '';\n    this.connectionTimeout = null;\n  }\n\n  public showError(\n    message: string,\n    title = this.defaultTitle,\n    noTimeout?: boolean\n  ) {\n    if (noTimeout) {\n      const newOptions: any = {};\n      Object.assign(newOptions, this.toastrObj);\n      newOptions.disableTimeOut = true;\n      this.toastr.error(message, title, newOptions);\n    } else {\n      this.toastr.error(message, title, this.toastrObj);\n    }\n  }\n\n  public showInfo(message: string, title = this.defaultTitle) {\n    this.toastr.info(message, title, this.toastrObj);\n  }\n\n  public showSuccess(message: string, title = this.defaultTitle) {\n    this.toastr.success(message, title, this.toastrObj);\n  }\n\n  public showWarning(message: string, title = this.defaultTitle) {\n    this.toastr.warning(message, title, this.toastrObj);\n  }\n\n  public showCommon(message: string, title = this.defaultTitle) {\n    this.toastr.show(message, title, this.toastrObj);\n  }\n\n  public setConnectionTimeout(message: string, title = this.defaultTitle) {\n    this.clearConnectionTimeout();\n    this.connectionTimeout = setTimeout(() => {\n      if (!this.globals.loginOpen) {\n        this.showError(message, title, true);\n        return;\n      }\n    }, TIMEOUT_IN_MS);\n  }\n\n  public clearConnectionTimeout() {\n    if (this.connectionTimeout != null) {\n      clearTimeout(this.connectionTimeout);\n      this.connectionTimeout = null;\n    }\n  }\n\n  public clearToasts() {\n    this.toastr.clear();\n  }\n\n  public changeClass(newClass: string) {\n    this.toastrObj.positionClass = newClass;\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { WaitListService } from './waitList.service';\nimport { GlobalsService } from './globals.service';\n\nimport { ModalType } from '../types/modal.type';\nimport { ModalItem } from '../otherClasses/modal-item';\n\nimport { ChooseOfficeComponent } from '../components/modal/choose-office/choose-office.component';\nimport { SearchContactComponent } from '../components/modal/search-contact/search-contact.component';\nimport { CreateContactComponent } from '../components/modal/create-contact/create-contact.component';\nimport { CreateTicketComponent } from '../components/modal/create-ticket/create-ticket.component';\nimport { DocumentFileComponent } from '../components/modal/document-file/document-file.component';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { PassableModalData } from '../types/passable-modal-data';\nimport { SelectContactComponent } from '../components/modal/select-contact/select-contact.component';\nimport { SelectCreateLabelComponent } from '../components/modal/select-create-label/select-create-label.component';\nimport { DuplicateComponent } from '../components/modal/duplicate/duplicate.component';\nimport { SearchTemplateComponent } from '../components/modal/search-template/search-template.component';\nimport { SelectMailAddressComponent } from '../components/modal/select-mail-address/select-mail-address.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  public currentType: Observable<{\n    newType: ModalType;\n    data?: Record<string, any>;\n  }>;\n\n  private modalTypeSource = new Subject<{\n    newType: ModalType;\n    data?: Record<string, any>;\n  }>();\n  private modalHeader: TemplateRef<any>;\n  private modalFooter: TemplateRef<any>;\n  private activeModals: MatDialogRef<any, any>[];\n  private modalItems: Record<ModalType, ModalItem>;\n\n  constructor(\n    private waitList: WaitListService,\n    private globals: GlobalsService,\n    private matDialog: MatDialog\n  ) {\n    this.currentType = this.modalTypeSource.asObservable();\n    this.activeModals = [];\n  }\n\n  public changeType(objToPass: {\n    newType: ModalType;\n    data?: PassableModalData;\n  }) {\n    this.modalTypeSource.next(objToPass);\n  }\n\n  public setModalHeader(newHeader: TemplateRef<any>) {\n    console.log('++++++++++++++ SETMODALHEADER ++++++++++');\n    console.log(newHeader);\n    this.modalHeader = newHeader;\n  }\n\n  public setModalFooter(newFooter: TemplateRef<any>) {\n    console.log('------ SETMODALFOOTER ------');\n    console.log(newFooter);\n    this.modalFooter = newFooter;\n    this.modalItems = this.getModalItems();\n    this.waitList.accessWaitList('modalDesign').forEach((observer) => {\n      observer.next(this.modalItems);\n      observer.complete();\n      this.waitList.clearWaitList('modalDesign');\n    });\n  }\n\n  public waitForModalDesign() {\n    return new Observable<any>((observer) => {\n      this.waitList.addToWaitList('modalDesign', observer);\n    });\n  }\n\n  public getModalItems(): Record<ModalType, ModalItem> {\n    if (!this.modalItems) {\n      return {\n        chooseOfficeDB: new ModalItem(\n          ChooseOfficeComponent,\n          this.initModalData('documentFile')\n        ),\n        selectContact: new ModalItem(\n          SelectContactComponent,\n          this.initModalData()\n        ),\n        searchContact: new ModalItem(\n          SearchContactComponent,\n          this.initModalData('chooseOfficeDB')\n        ),\n        searchTemplate: new ModalItem(\n          SearchTemplateComponent,\n          this.initModalData('chooseOfficeDB')\n        ),\n        createContact: new ModalItem(\n          CreateContactComponent,\n          this.initModalData()\n        ),\n        createTicket: new ModalItem(\n          CreateTicketComponent,\n          this.initModalData()\n        ),\n        documentFile: new ModalItem(\n          DocumentFileComponent,\n          this.initModalData()\n        ),\n        createAddressCompany: new ModalItem(\n          SelectContactComponent,\n          this.initModalData('createContact', {\n            createType: 'company',\n          })\n        ),\n        createAddressToCompany: new ModalItem(\n          SearchContactComponent,\n          this.initModalData('createContact', {\n            type: 'company',\n            createType: 'toCompany',\n          })\n        ),\n        createAddressPerson: new ModalItem(\n          SelectContactComponent,\n          this.initModalData('createContact', {\n            createType: 'person',\n          })\n        ),\n        createLabel: new ModalItem(\n          SelectCreateLabelComponent,\n          this.initModalData(null, {\n            currentModal: this.newActive,\n          })\n        ),\n        selectMailAddress: new ModalItem(\n          SelectMailAddressComponent,\n          this.initModalData()\n        ),\n        duplicate: new ModalItem(DuplicateComponent, this.initModalData()),\n      };\n    } else {\n      return this.modalItems;\n    }\n  }\n\n  public addActiveModal(newModal: MatDialogRef<any, any>) {\n    this.globals.modalCacheFlag = true;\n    this.activeModals.push(newModal);\n  }\n\n  public closeActiveModal(passToCaller?: any) {\n    const modalToClose = this.activeModals.pop();\n    if (modalToClose) {\n      modalToClose.close(passToCaller);\n    }\n    if (this.activeModals.length < 1) {\n      this.globals.modalCacheFlag = false;\n      this.globals.clearModalTemps();\n    }\n  }\n\n  public closeAllModals() {\n    this.matDialog.closeAll();\n    this.activeModals = [];\n  }\n\n  public initWebIntModal() {\n    return this.modalHeader;\n  }\n\n  get modalItemsPub() {\n    return this.modalItems;\n  }\n\n  get newActive() {\n    return this.activeModals[this.activeModals.length - 1];\n  }\n\n  private initModalData(\n    nextModalType: ModalType | null = null,\n    addToData?: Record<string, any>,\n    header = this.modalHeader,\n    footer = this.modalFooter\n  ): any {\n    const objToReturn: Record<string, any> = {\n      nextType: nextModalType,\n      modalHeader: header,\n      modalFooter: footer,\n      closeModal: this.closeActiveModal.bind(this),\n      closeAllModal: this.closeAllModals.bind(this),\n      modalItems: this.modalItems,\n    };\n    if (addToData) {\n      for (const key of Object.keys(addToData)) {\n        objToReturn[key] = addToData[key];\n      }\n    }\n    return objToReturn;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AddressService } from './address.service';\nimport { GlobalsService } from './globals.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReloadService {\n  constructor(\n    private addressService: AddressService,\n    private globals: GlobalsService\n  ) {}\n\n  public reload(fullReload?: boolean) {\n    if (fullReload) {\n      this.globals.curMailAddr = this.globals.startMailAddr;\n    }\n    this.addressService.resetAddr();\n    this.addressService.addressChange();\n  }\n}\n","/* eslint-disable max-len */\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConnectionService } from './connection.service';\nimport { GlobalsService } from './globals.service';\nimport { LoaderService } from './loader.service';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SoapService {\n  constructor(\n    public translate: TranslateService,\n    private connection: ConnectionService,\n    private globals: GlobalsService,\n    private messageService: MessageService,\n    private loaderService: LoaderService\n  ) {}\n\n  // Calls SOAP method\n  // Parameters need to be passed as an object\n  public async invokeSoap(\n    method: any,\n    parameters: any,\n    firstAsArray?: boolean\n  ) {\n    this.loaderService.activateLoader(false);\n    if (parameters !== null && typeof parameters === 'object') {\n      try {\n        let data =\n          '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:urn=\"urn:DefaultNamespace\">' +\n          '<soapenv:Header/>' +\n          '<soapenv:Body>' +\n          '<urn:' +\n          method +\n          '>';\n\n        for (const key in parameters) {\n          if (firstAsArray) {\n            data +=\n              '<' +\n              key +\n              ' soapenc:arrayType=\"xsd:string[1]\">' +\n              '<item>' +\n              '<![CDATA[' +\n              parameters[key] +\n              ']]>' +\n              '</item>' +\n              '</' +\n              key +\n              '>';\n            firstAsArray = false;\n          } else {\n            data +=\n              '<' + key + '><![CDATA[' + parameters[key] + ']]></' + key + '>';\n          }\n        }\n\n        data +=\n          '</urn:' + method + '>' + '</soapenv:Body>' + '</soapenv:Envelope>';\n\n        const response = await this.connection.postSoap(\n          this.globals.webInt + '/businessMailContacts',\n          data\n        );\n        let responseText;\n\n        if (response.status === 200) {\n          responseText = await response.text();\n        } else {\n          throw new Error('');\n        }\n\n        const xmlDoc = new window.DOMParser().parseFromString(\n          responseText,\n          'text/xml'\n        );\n\n        const xmlReturnEle = xmlDoc.getElementsByTagName(method + 'Return')[0];\n\n        const result = [];\n        let child;\n        if (xmlDoc.childNodes.length > 0) {\n          // eslint-disable-next-line @typescript-eslint/prefer-for-of\n          for (let i = 0; i < xmlReturnEle.childNodes.length; i++) {\n            child = xmlReturnEle.childNodes[i];\n            result.push(child.textContent ? child.textContent : '');\n          }\n        } else {\n          result.push(xmlDoc.textContent ? xmlDoc.textContent : '');\n        }\n        this.loaderService.deactivateLoader();\n        return this.arrayToObj(result, '~#~');\n      } catch (e) {\n        // Failed to retrieve data\n        this.translate.get('LC53488').subscribe((text) => {\n          this.messageService.showError(text);\n          this.loaderService.deactivateLoader();\n          throw Error(text);\n        });\n      }\n    } else {\n      // Invalid data\n      this.translate.get('LC53487').subscribe((text) => {\n        this.messageService.showError(text);\n        throw Error(text);\n      });\n    }\n    this.loaderService.deactivateLoader();\n  }\n\n  private arrayToObj(arr: any, devider: any) {\n    const obj: any = {};\n    for (const index in arr) {\n      if (Object.prototype.hasOwnProperty.call(arr, index)) {\n        const splitArr = arr[index].split(devider);\n        if (splitArr.length >= 2) {\n          obj[splitArr[0]] = splitArr[1];\n        } else if (splitArr.length === 1) {\n          obj[splitArr[0]] = '';\n        }\n      }\n    }\n    return obj;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subscriber } from 'rxjs';\nimport { WaitListFuncType } from '../types/waitlist-function.model';\nimport { WaitListType, waitListTypes } from '../types/waitlist.type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WaitListService {\n  private waitListRecord: Record<WaitListType, Subscriber<any>[]>;\n  private waitListWithFunction: Record<WaitListType, WaitListFuncType[]>;\n\n  constructor() {\n    this.waitListRecord = {} as Record<WaitListType, Subscriber<any>[]>;\n    this.waitListWithFunction = {} as Record<WaitListType, WaitListFuncType[]>;\n    console.log(waitListTypes);\n    waitListTypes.forEach((element: WaitListType) => {\n      this.waitListRecord[element] = [];\n      this.waitListWithFunction[element] = [];\n    });\n    console.log(this.waitListRecord);\n  }\n\n  public addToWaitList(waitListName: WaitListType, observer: Subscriber<any>) {\n    this.waitListRecord[waitListName].push(observer);\n  }\n\n  public addToWaitListFunc(\n    waitListName: WaitListType,\n    observer: Subscriber<any>,\n    func: any\n  ) {\n    this.waitListWithFunction[waitListName].push({\n      subscriber: observer,\n      function: func,\n    });\n  }\n\n  public accessWaitList(waitListName: WaitListType) {\n    return this.waitListRecord[waitListName];\n  }\n\n  public clearWaitList(waitListName: WaitListType) {\n    this.waitListRecord[waitListName].length = 0;\n  }\n\n  public resolveFuncWaitList(waitListName: WaitListType) {\n    for (const entry of this.waitListWithFunction[waitListName]) {\n      entry.function(entry.subscriber);\n    }\n    this.waitListWithFunction[waitListName].length = 0;\n  }\n}\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { GlobalsService } from './globals.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebintLinkService {\n  private indexParamStart = 'index.xsp?';\n  private urlExtension = this.indexParamStart + 'loadTabs=false';\n\n  constructor(private globalsService: GlobalsService) {}\n\n  public convertToLink(pointer: string) {\n    return (\n      this.globalsService.webInt +\n      this.urlExtension +\n      '&openDocument=' +\n      pointer\n    );\n  }\n\n  public openWebIntWithParams(params: HttpParams) {\n    params = params.set('loadTabs', 'false');\n    window.open(\n      this.globalsService.webInt + this.indexParamStart + params.toString(),\n      '_blank'\n    );\n  }\n}\n","import { KeyValue } from '@angular/common';\r\n\r\nexport const order = [\r\n  'name',\r\n  'companyName',\r\n  'birthdate',\r\n  '-BLANK-',\r\n  'phone',\r\n  'cellphone',\r\n  'homephone',\r\n  '-BLANK-',\r\n  'homepage',\r\n  'skype',\r\n  'pointer',\r\n  'companyPointer',\r\n  'isCompany',\r\n  'additional',\r\n];\r\n\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function compareAddressOrder(\r\n  key1: KeyValue<string, any>,\r\n  key2: KeyValue<string, any>\r\n) {\r\n  const indexKey1 = order.indexOf(key1.key);\r\n  const indexKey2 = order.indexOf(key2.key);\r\n  if (indexKey1 === -1 && indexKey2 === -1) {\r\n    return 0;\r\n  }\r\n  if (indexKey1 === -1) {\r\n    return 1;\r\n  }\r\n  if (indexKey2 === -1) {\r\n    return -1;\r\n  }\r\n  if (indexKey1 < indexKey2) {\r\n    return -1;\r\n  }\r\n  if (indexKey1 > indexKey2) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport const spacerIndices = ((searchType: string) => {\r\n  const indicies: number[] = [];\r\n  order.forEach((element, index) => {\r\n    if (element.includes(searchType)) {\r\n      indicies.push(index);\r\n    }\r\n  });\r\n  return indicies;\r\n})('-BLANK-');\r\n","export const createLabels = [\r\n  '',\r\n  'FirstName',\r\n  'MiddleName',\r\n  'LastName',\r\n  'FirstName#LastName',\r\n  'FirstName#MiddleName#LastName',\r\n  'LastName#FirstName',\r\n  'fdSalutatoryAddress',\r\n  'fdContactTitle',\r\n  'Company',\r\n  'Address1',\r\n  'Address2',\r\n  'ZipCode',\r\n  'City',\r\n  'ZipCode#City',\r\n  'CountryToo',\r\n  'MainPhone',\r\n  'Fax',\r\n  'CellPhone',\r\n  'EMailAddress',\r\n  'HomePage',\r\n  'Title',\r\n  'Department',\r\n  'State',\r\n];\r\nexport type CreateLabels = typeof createLabels[number];\r\n\r\nexport const startLabels = [\r\n  'EMailAddress',\r\n  'FirstName#LastName',\r\n  'Company',\r\n  'HomePage',\r\n  'Address1',\r\n  'ZipCode#City',\r\n  'State',\r\n  'CountryToo',\r\n  'MainPhone',\r\n  'Fax',\r\n  'CellPhone',\r\n  'Title',\r\n  'fdContactTitle',\r\n  'Department',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n];\r\n","export const waitListTypes = [\r\n  'address',\r\n  'path',\r\n  'index',\r\n  'lc',\r\n  'localLC',\r\n  'modalDesign',\r\n  'init',\r\n  'webInt',\r\n  'webIntModal',\r\n  'login',\r\n  'mailAddr',\r\n  'addressChange',\r\n  'graphRequired',\r\n  'graphLoaded',\r\n] as const;\r\nexport type WaitListType = typeof waitListTypes[number];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ntry {\n  Office.initialize = () => {\n    console.log('OFFICE INIT');\n    const platform = platformBrowserDynamic();\n    platform.bootstrapModule(AppModule);\n  };\n} catch (e) {\n  console.log('OFFICE INIT ERROR');\n  console.log(e);\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}